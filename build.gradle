import org.firebirdsql.documentation.docbook.DocbookFoPdf
import org.firebirdsql.documentation.docbook.DocbookHtml
import org.firebirdsql.documentation.generic.StylesheetTask

plugins {
    id 'org.firebirdsql.documentation'
}

docConfig {
    configRootDir.set(file('config'))
    docRoot.set(file('src/docs'))
    styleDir.set(file('src/docs/xsl'))
    outputRoot.set(layout.buildDirectory.dir('docs'))
    defaultBaseName.set('firebirddocs')
}

task docbookHtml(type: DocbookHtml, group: 'documentation') {
    description 'Generate chunked HTML documentation'
    stylesheetBaseName.set('html')
    outputTypeName.set('html')
    imageExcludes.addAll(
            '*.txt',
            'firebird_logo_400x400.png')
    extraFilesToOutput.set(files('src/docs/firebirddocs.css'))
}

task docbookMonohtml(type: DocbookHtml, group: 'documentation') {
    description 'Generate single file HTML documentation'
    stylesheetBaseName.set('monohtml')
    outputTypeName.set('monohtml')
    imageExcludes.addAll(
            '*.txt',
            'firebird_logo_400x400.png')
    extraFilesToOutput.set(files('src/docs/firebirddocs.css'))
}

task docbookPdf(type: DocbookFoPdf, group: 'documentation') {
    description 'Generate PDF documentation'
    stylesheetBaseName.set('fo')
    outputTypeName.set('pdf')
    imageExcludes.addAll(
            '*.txt',
            'titleblackgill.gif',
            'firebirdlogo.png',
            'toc-*.png',
            'top-*.png',
            'prev-*.png',
            'next-*.png')
}

task "tt-fo"(type: StylesheetTask, group: "tools") {
    description 'Generates fo/titlepage.templates.xsl from fo/titlepage.templates.xml'
    inputFile.set(docConfig.styleDir.file('fo/titlepage.templates.xml'))
    styleSheetUri.set('template/titlepage.xsl')
    stylesheetBase.set('http://docbook.sourceforge.net/release/xsl/current/')
    outputFile.set(docConfig.styleDir.file('fo/titlepage.templates.xsl'))
}

task "tt-html"(type: StylesheetTask, group: "tools") {
    description 'Generates html/titlepage.templates.xsl from html/titlepage.templates.xml'
    inputFile.set(docConfig.styleDir.file('html/titlepage.templates.xml'))
    styleSheetUri.set('template/titlepage.xsl')
    stylesheetBase.set('http://docbook.sourceforge.net/release/xsl/current/')
    outputFile.set(docConfig.styleDir.file('html/titlepage.templates.xsl'))
}
