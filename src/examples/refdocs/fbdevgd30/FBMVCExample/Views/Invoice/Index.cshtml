@{
    ViewBag.Title = "Index";
}

<h2>Invoices</h2>

<table id="jqg"></table>
<div id="jpager"></div>

<script type="text/javascript">

    /**
     * Окно для отображения ошибки
     */
    function alertDialog(title, error) {
        var alertDlg = $('<div>')
            .attr('aria-hidden', 'true')
            .attr('role', 'dialog')
            .attr('data-backdrop', 'static')
            .addClass('modal')
            .appendTo($('body'));

        var dlgContent = $("<div>")
            .addClass("modal-content")
            .appendTo($('<div>')
                               .addClass('modal-dialog')
                               .appendTo(alertDlg));

        var dlgHeader = $('<div>').addClass("modal-header").appendTo(dlgContent);
        $("<button>")
            .addClass("close")
            .attr('type', 'button')
            .attr('aria-hidden', 'true')
            .attr('data-dismiss', 'modal')
            .html("&times;")
            .appendTo(dlgHeader);
        $("<h5>").addClass("modal-title").html(title).appendTo(dlgHeader);

        dlgBody = $('<div>')
            .addClass("modal-body")
            .appendTo(dlgContent)
            .append(error);

        alertDlg.on('hidden.bs.modal', function () {
            alertDlg.remove();
        });

        alertDlg.modal();
    }

    /**
     * Отображение окна для выбора справочника заказчиков
     */
    function showCustomerWindow() {
        // основной блок диалога
        var dlg = $('<div>')
            .attr('id', 'dlgChooseCustomer')
            .attr('aria-hidden', 'true')
            .attr('role', 'dialog')
            .attr('data-backdrop', 'static')
            .css("z-index", '2000')
            .addClass('modal')
            .appendTo($('body'));

        // блок с содержимым диалога
        var dlgContent = $("<div>")
            .addClass("modal-content")
            .css('width', '730px')
            .appendTo($('<div>')
                               .addClass('modal-dialog')
                               .appendTo(dlg));

        // блок с шапкой диалога
        var dlgHeader = $('<div>').addClass("modal-header").appendTo(dlgContent);
        // кнопка "X" для закрытия
        $("<button>")
            .addClass("close")
            .attr('type', 'button')
            .attr('aria-hidden', 'true')
            .attr('data-dismiss', 'modal')
            .html("&times;")
            .appendTo(dlgHeader);
        // подпись
        $("<h5>").addClass("modal-title").html("Выбор заказчика").appendTo(dlgHeader);

        // тело диалога
        var dlgBody = $('<div>')
            .addClass("modal-body")
            .appendTo(dlgContent);

        // подвал диалога
        var dlgFooter = $('<div>').addClass("modal-footer").appendTo(dlgContent);
        // Кнопка "OK"
        $("<button>")
            .attr('type', 'button')
            .addClass('btn')
            .html('OK')
            .on('click', function () {
                var rowId = $("#jqgCustomer").jqGrid("getGridParam", "selrow");
                var row = $("#jqgCustomer").jqGrid("getRowData", rowId);
                // сохраняем идентификатор и имя заказчика
                // в элементы ввода родительской формы
                $('#dlgEditInvoice input[name=CUSTOMER_ID]').val(rowId);
                $('#dlgEditInvoice input[name=CUSTOMER_NAME]').val(row["NAME"]);
                dlg.modal('hide');
            })
            .appendTo(dlgFooter);
        // Кнопка "Cancel"
        $("<button>")
            .attr('type', 'button')
            .addClass('btn')
            .html('Cancel')
            .on('click', function () { dlg.modal('hide'); })
            .appendTo(dlgFooter);
        // добавляем таблицу для отображения заказчиков в тело диалога
        $('<table>')
            .attr('id', 'jqgCustomer')
            .appendTo(dlgBody);
        // добавляем паенль навигации
        $('<div>')
            .attr('id', 'jqgCustomerPager')
            .appendTo(dlgBody);

        dlg.on('hidden.bs.modal', function () {
            dlg.remove();
        });

        // отображаем диалог
        dlg.modal();

        // создание и инициализация jqGrid
        var dbGrid = $("#jqgCustomer").jqGrid({
            url: '@Url.Action("GetData", "Customer")', // url для получения данных
            mtype: "GET", // тип http запроса 
            datatype: "json", // формат получения данных 
            page: 1,
            width: '100%',
            // описание модели
            colModel: [
                {
                     label: 'Id',          // подпись
                     name: 'CUSTOMER_ID',  // имя поля
                     key: true,            // признак ключевого поля
                     hidden: true          // скрытое 
                },
                {
                     label: 'Name',
                     name: 'NAME',
                     width: 250,           // ширина
                     sortable: true,       // разрешена сортировка
                     editable: true,       // разрешено редактирование
                     edittype: "text",     // тип поля в редакторе
                     search: true,         // разрешён поиск
                     searchoptions: {
                         sopt: ['eq', 'bw', 'cn'] // разрешённые операторы поиска
                     },
                     editoptions: { size: 30, maxlength: 60 }, // размер и максимальная длина для поля ввода
                     editrules: { required: true }    // говорит о том что поле обязательное
                },
                {
                     label: 'Address',
                     name: 'ADDRESS',
                     width: 300,
                     sortable: false,      // запрещаем сортировку
                     editable: true,       // редактируемое
                     search: false,        // запрещаем поиск
                     edittype: "textarea",
                     editoptions: { maxlength: 250, cols: 30, rows: 4 }
                },
                {
                     label: 'Zip Code',
                     name: 'ZIPCODE',
                     width: 60,
                     sortable: false,
                     editable: true,
                     search: false,
                     edittype: "text",
                     editoptions: { size: 30, maxlength: 10 },
                },
                {
                     label: 'Phone',
                     name: 'PHONE',
                     width: 85,
                     sortable: false,
                     editable: true,
                     search: false,
                     edittype: "text",
                     editoptions: { size: 30, maxlength: 14 },
                }
            ],
            loadonce: false,
            pager: '#jqgCustomerPager',
            rowNum: 500, // число отображаемых строк
            sortname: 'NAME', // сортировка по умолчанию по столбцу NAME
            sortorder: "asc", // порядок сортировки
            height: 500
        });

        dbGrid.jqGrid('navGrid', '#jqgCustomerPager',
            {
                search: true,  // поиск
                add: false,     // добавление
                edit: false,    // редактирование
                del: false,     // удаление
                view: false,    // просмотр записи
                refresh: true, // обновление

                searchtext: "Поиск",
                viewtext: "Смотреть",
                viewtitle: "Выбранная запись",
                refreshtext: "Обновить"
            }
        );
    }

    /**
     * Отображение окна для выбора справочника товаров
     */
    function showProductWindow() {
        var dlg = $('<div>')
            .attr('id', 'dlgChooseProduct')
            .attr('aria-hidden', 'true')
            .attr('role', 'dialog')
            .attr('data-backdrop', 'static')
            .css("z-index", '2000')
            .addClass('modal')
            .appendTo($('body'));

        var dlgContent = $("<div>")
            .addClass("modal-content")
            .css('width', '760px')
            .appendTo($('<div>')
                               .addClass('modal-dialog')
                               .appendTo(dlg));

        var dlgHeader = $('<div>').addClass("modal-header").appendTo(dlgContent);
        $("<button>")
            .addClass("close")
            .attr('type', 'button')
            .attr('aria-hidden', 'true')
            .attr('data-dismiss', 'modal')
            .html("&times;")
            .appendTo(dlgHeader);
        $("<h5>").addClass("modal-title").html("Выбор заказчика").appendTo(dlgHeader);

        var dlgBody = $('<div>')
            .addClass("modal-body")
            .appendTo(dlgContent);

        var dlgFooter = $('<div>').addClass("modal-footer").appendTo(dlgContent);
        $("<button>")
            .attr('type', 'button')
            .addClass('btn')
            .html('OK')
            .on('click', function () {
                var rowId = $("#jqgProduct").jqGrid("getGridParam", "selrow");
                var row = $("#jqgProduct").jqGrid("getRowData", rowId);

                $('#dlgEditInvoiceLine input[name=PRODUCT_ID]').val(rowId);
                $('#dlgEditInvoiceLine input[name=Product]').val(row["NAME"]);
                $('#dlgEditInvoiceLine input[name=Price]').val(row["PRICE"]);
                var price = $('#dlgEditInvoiceLine input[name=Price]').val() - 0;
                var quantity = $('#dlgEditInvoiceLine input[name=Quantity]').val() - 0;
                $('#dlgEditInvoiceLine input[name=Total]').val(price * quantity);
                dlg.modal('hide');
            })
            .appendTo(dlgFooter);
        $("<button>")
            .attr('type', 'button')
            .addClass('btn')
            .html('Cancel')
            .on('click', function () {
                dlg.modal('hide');
            })
            .appendTo(dlgFooter);

        $('<table>')
            .attr('id', 'jqgProduct')
            .appendTo(dlgBody);
        $('<div>')
            .attr('id', 'jqgProductPager')
            .appendTo(dlgBody);

        dlg.on('hidden.bs.modal', function () {
            dlg.remove();
        });

        dlg.modal();

        var dbGrid = $("#jqgProduct").jqGrid({
            url: '@Url.Action("GetData", "Product")',
            mtype: "GET",
            datatype: "json",
            page: 1,
            width: '100%',
            colModel: [
                {
                    label: 'Id',
                    name: 'PRODUCT_ID',
                    key: true,
                    hidden: true
                },
                {
                    label: 'Name',
                    name: 'NAME',
                    width: 300,
                    sortable: true,
                    editable: true,
                    search: true,
                    searchoptions: {
                        sopt: ['eq', 'bw', 'cn']
                    },
                    edittype: "text",
                    editoptions: { size: 30, maxlength: 100 },
                    editrules: { required: true }
                },
                {
                    label: 'Price',
                    name: 'PRICE',
                    width: 70,
                    align: "right",
                    formatter: 'currency',
                    sortable: true,
                    editable: true,
                    search: false,
                    edittype: "text",
                    editoptions: { size: 30 },
                    editrules: { required: true, number: true, minValue: 0 }
                },
                {
                    label: 'Description',
                    name: 'DESCRIPTION',
                    width: 350,
                    sortable: false,
                    editable: true,
                    search: false,
                    edittype: "textarea",
                    editoptions: { maxlength: 500, cols: 30, rows: 4 }
                }
            ],
            loadonce: false,
            pager: '#jqgProductPager',
            rowNum: 500, // число отображаемых строк
            sortname: 'NAME', // сортировка по умолчанию по столбцу NAME
            sortorder: "asc", // порядок сортировки
            height: 500
        });

        dbGrid.jqGrid('navGrid', '#jqgProductPager',
            {
                search: true,  // поиск
                add: false,     // добавление
                edit: false,    // редактирование
                del: false,     // удаление
                view: false,    // просмотр записи
                refresh: true, // обновление

                searchtext: "Поиск",
                viewtext: "Смотреть",
                viewtitle: "Выбранная запись",
                refreshtext: "Обновить"
            }
        );
    }

    // Когда документ готов создаём гриды
    $(document).ready(function () {
        // Грид с инвойсами
        var dbGrid = $("#jqg").jqGrid({
            url: '@Url.Action("GetData")', // url для получения данных
            datatype: "json", // формат получения данных
            mtype: "GET",     // тип http запроса
            // описание модели
            colModel: [
                {
                    label: 'Id',         // подпись
                    name: 'INVOICE_ID',  // имя поля
                    key: true,           // признак ключевого поля   
                    hidden: true         // скрыт 
                },
                {
                    label: 'CUSTOMER_ID', // подпись
                    name: 'CUSTOMER_ID',  // имя поля
                    hidden: true,         // скрыт 
                    editrules: { edithidden: true, required: true }, // скрытое и требуемое
                    editable: true,       // редактируемое
                    edittype:'custom',    // собственный тип
                    editoptions: {
                        custom_element: function (value, options) {
                            // добавляем скрытый input
                            return $("<input>")
                                .attr('type', 'hidden')
                                .attr('rowid', options.rowId)
                                .addClass("FormElement")
                                .addClass("form-control")
                                .val(value)
                                .get(0);
                        }
                    }
                },
                {
                    label: 'Date',
                    name: 'INVOICE_DATE',
                    width: 60,             // ширина
                    sortable: true,        // позволять сортировку
                    editable: true,        // редактируемое
                    search: true,          // разрешён поиск
                    edittype: "text",      // тип поля ввода
                    align: "right",        // выравнено по правому краю
                    formatter: 'date',     // отформатировано как дата
                    sorttype: 'date',      // сортируем как дату
                    formatoptions: {       // формат даты
                        srcformat: 'd.m.Y H:i:s',
                        newformat: 'd.m.Y H:i:s'
                    },
                    editoptions: {
                        // иницивлизация элемента формы для редактирования
                        dataInit: function (element) {
                            // создаём datepicker
                            $(element).datepicker({
                                id: 'invoiceDate_datePicker',
                                dateFormat: 'dd.mm.yy',
                                minDate: new Date(2000, 0, 1),
                                maxDate: new Date(2030, 0, 1)
                            });
                        }
                    },
                    searchoptions: {
                        // иницивлизация элемента формы для поиска
                        dataInit: function (element) {
                            // создаём datepicker
                            $(element).datepicker({
                                id: 'invoiceDate_datePicker',
                                dateFormat: 'dd.mm.yy',
                                minDate: new Date(2000, 0, 1),
                                maxDate: new Date(2030, 0, 1)
                            });
                        },
                        searchoptions: { // типы поиска
                            sopt: ['eq', 'lt', 'le', 'gt', 'ge']
                        },
                    }
                },
                {
                    label: 'Customer',
                    name: 'CUSTOMER_NAME',
                    width: 250,
                    editable: true,
                    edittype: "text",
                    editoptions: {
                        size: 50,
                        maxlength: 60,
                        readonly: true    // только чтение
                    },
                    editrules: { required: true },
                    search: true,
                    searchoptions: {
                        sopt: ['eq', 'bw', 'cn']
                    },
                },
                {
                    label: 'Amount',
                    name: 'TOTAL_SALE',
                    width: 60,
                    sortable: false,
                    editable: false,
                    search: false,
                    align: "right",
                    formatter: 'currency', // форматировать как валюту
                    sorttype: 'number',
                    searchrules: {
                        "required": true,
                        "number": true,
                        "minValue": 0
                    }
                },
                {
                    label: 'Paid',
                    name: 'PAID',
                    width: 30,
                    sortable: false,
                    editable: true,
                    search: true,
                    searchoptions: {
                        sopt: ['eq']
                    },
                    edittype: "checkbox", // галочка
                    formatter: "checkbox",
                    stype: "checkbox",
                    align: "center",
                    editoptions: {
                        value: "1",
                        offval: "0"
                    }
                }
            ],
            rowNum: 500, // число отображаемых строк
            loadonce: false, // загрузка только один раз
            sortname: 'INVOICE_DATE', // сортировка по умолчанию по столбцу NAME
            sortorder: "desc", // порядок сортировки
            width: window.innerWidth - 80, // ширина грида
            height: 500, // высота грида
            viewrecords: true, // отображать количество записей
            caption: "Invoices", // подпись к гриду
            pager: '#jpager', // элемент для отображения постраничной навигации
            subGrid: true, // показывать вложенвй грид
            subGridRowExpanded: showChildGrid, // javascript функция для отображения родительского грида
            subGridOptions: { // опции вложенного грида
                // загружать данные только один раз
                reloadOnExpand: false,
                // загружать строки подгрида только при щелчке по иконке "+"
                selectOnExpand: true
            },
        });

        // отображение панели навигации
        dbGrid.jqGrid('navGrid', '#jpager',
            {
                search: true,  // поиск
                add: true,     // добавление
                edit: true,    // редактирование
                del: true,     // удаление
                view: false,    // просмотр записи
                refresh: true, // обновление

                searchtext: "Поиск",
                addtext: "Добавить",
                edittext: "Изменить",
                deltext: "Удалить",
                viewtext: "Смотреть",
                viewtitle: "Выбранная запись",
                refreshtext: "Обновить"
           },
           update("edit"), // обновление
           update("add"), // добавление
           update("del") // удаление
        );

        // добавление кнопки для оплаты счёт фактуры
        dbGrid.navButtonAdd('#jpager',
            {
                buttonicon: "glyphicon-usd",
                title: "Оплатить",
                caption: "Оплатить",
                position: "last",
                onClickButton: function () {
                    // получаем идентификатор текущей записи
                    var id = dbGrid.getGridParam("selrow");
                    if (id) {
                        var url = '@Url.Action("Pay")';
                        $.ajax({
                            url: url,
                            type: 'POST',
                            data: { id: id },
                            success: function (data) {
                                // проверяем не произошла ли ошибка
                                if (data.hasOwnProperty("error")) {
                                    alertDialog('Ошибка', data.error);
                                }
                                else {
                                    // обновление грида
                                    $("#jqg").jqGrid(
                                        'setGridParam',
                                        {
                                            datatype: 'json'
                                        }
                                    ).trigger('reloadGrid');
                                }
                            }
                        });
                    }
                }
            });

        // возвращает свойства для создания диалогов редактирования
        function update(act) {
            // шаблон диалога редактирования
            var template = "<div style='margin-left:15px;' id='dlgEditInvoice'>";
            template += "<div>{CUSTOMER_ID} </div>";
            template += "<div> Date: </div><div>{INVOICE_DATE} </div>";
            // поле ввода заказчика с кнопкой
            template += "<div> Customer <sup>*</sup>:</div>";
            template += "<div>";
            template += "<div style='float: left;'>{CUSTOMER_NAME}</div> ";
            template += "<a style='margin-left: 0.2em;' class='btn' onclick='showCustomerWindow(); return false;'>";
            template += "<span class='glyphicon glyphicon-folder-open'></span> Выбрать</a> ";
            template += "<div style='clear: both;'></div>";
            template += "</div>";
            template += "<div> {PAID} Paid </div>";
            template += "<hr style='width: 100%;'/>";
            template += "<div> {sData} {cData}  </div>";
            template += "</div>";

            return {
                top: $(".container.body-content").position().top + 150,
                left: $(".container.body-content").position().left + 150,
                modal: true,
                drag: true,
                closeOnEscape: true,
                closeAfterAdd: true, // закрыть после добавления
                closeAfterEdit: true, // закрыть после редактирования
                reloadAfterSubmit: true, // обновление
                template: (act != "del") ? template : null,
                onclickSubmit: function (params, postdata) {
                    // получаем идентификатор строки
                    var selectedRow = dbGrid.getGridParam("selrow");
                    switch (act) {
                        case "add":
                            params.url = '@Url.Action("Create")';
                            // получаем идентификатор заказчика для текущей строки
                            postdata.CUSTOMER_ID = $('#dlgEditInvoice input[name=CUSTOMER_ID]').val();
                            break;

                        case "edit":
                            params.url = '@Url.Action("Edit")';
                            postdata.INVOICE_ID = selectedRow;
                            // получаем идентификатор заказчика для текущей строки
                            postdata.CUSTOMER_ID = $('#dlgEditInvoice input[name=CUSTOMER_ID]').val();
                            break;

                        case "del":
                            params.url = '@Url.Action("Delete")';
                            postdata.INVOICE_ID = selectedRow;
                            break;
                    }
                },
                afterSubmit: function (response, postdata) {
                    var responseData = response.responseJSON;
                    // проверяем результат на наличие сообщений об ошибках
                    if (responseData.hasOwnProperty("error")) {
                        if (responseData.error.length) {
                            return [false, responseData.error];
                        }
                    }
                    else {
                        // обновление грида
                        $(this).jqGrid(
                            'setGridParam',
                            {
                                datatype: 'json'
                            }
                        ).trigger('reloadGrid');
                    }
                    return [true, "", 0];
                }
            };
        };

        // обработчик события раскрытия родительского грида
        // принимает два параметра идентификатор родительской записи
        // и первичный ключ записи
        function showChildGrid(parentRowID, parentRowKey) {
            var childGridID = parentRowID + "_table";
            var childGridPagerID = parentRowID + "_pager";

            // отправляем первичный ключ родительской записи
            // чтобы отфильтровать записи позиций накладной
            var childGridURL = '@Url.Action("GetDetailData")';
            childGridURL = childGridURL + "?invoice_id=" + encodeURIComponent(parentRowKey)

            // добавляем HTML элементы для отображения таблицы и постраничной навигации
            // как дочерние для выбранной строки в мастер гриде
            $('<table>')
                .attr('id', childGridID)
                .appendTo($('#' + parentRowID));
            $('<div>')
                .attr('id', childGridPagerID)
                .addClass('scroll')
                .appendTo($('#' + parentRowID));

            // создаём и инициализируем дочерний грид
            var detailGrid = $("#" + childGridID).jqGrid({
                url: childGridURL,
                mtype: "GET",
                datatype: "json",
                page: 1,
                colModel: [
                    {
                        label: 'Invoice Line ID',
                        name: 'INVOICE_LINE_ID',
                        key: true,
                        hidden: true
                    },
                    {
                        label: 'Invoice ID',
                        name: 'INVOICE_ID',
                        hidden: true,
                        editrules: { edithidden: true, required: true },
                        editable: true,
                        edittype: 'custom',
                        editoptions: {
                            custom_element: function (value, options) {
                                // создаём скрытый эелемент ввода
                                return $("<input>")
                                    .attr('type', 'hidden')
                                    .attr('rowid', options.rowId)
                                    .addClass("FormElement")
                                    .addClass("form-control")
                                    .val(parentRowKey)
                                    .get(0);
                            }
                        }
                    },
                    {
                        label: 'Product ID',
                        name: 'PRODUCT_ID',
                        hidden: true,
                        editrules: { edithidden: true, required: true },
                        editable: true,
                        edittype: 'custom',
                        editoptions: {
                            custom_element: function (value, options) {
                                // создаём скрытый эелемент ввода
                                return $("<input>")
                                    .attr('type', 'hidden')
                                    .attr('rowid', options.rowId)
                                    .addClass("FormElement")
                                    .addClass("form-control")
                                    .val(value)
                                    .get(0);
                            }
                        }
                    },
                    {
                        label: 'Product',
                        name: 'Product',
                        width: 300,
                        editable: true,
                        edittype: "text",
                        editoptions: {
                            size: 50,
                            maxlength: 60,
                            readonly: true
                        },
                        editrules: { required: true }
                    },
                    {
                        label: 'Price',
                        name: 'Price',
                        formatter: 'currency',
                        editable: true,
                        editoptions: {
                            readonly: true
                        },
                        align: "right",
                        width: 100
                    },
                    {
                        label: 'Quantity',
                        name: 'Quantity',
                        align: "right",
                        width: 100,
                        editable: true,
                        editrules: { required: true, number: true, minValue: 1 },
                        editoptions: {
                            dataEvents: [
                                {
                                    type: 'change',
                                    fn: function (e) {
                                        var quantity = $(this).val() - 0;
                                        var price = $('#dlgEditInvoiceLine input[name=Price]').val() - 0;
                                        $('#dlgEditInvoiceLine input[name=Total]').val(quantity * price)
                                    }
                                }
                            ],
                            defaultValue: 1
                        }
                    },
                    {
                        label: 'Total',
                        name: 'Total',
                        formatter: 'currency',
                        align: "right",
                        width: 100,
                        editable: true,
                        editoptions: {
                            readonly: true
                        }
                    }
                ],
                loadonce: false,
                width: '100%',
                height: '100%',
                pager: "#" + childGridPagerID
            });

            // отображение панели инструментов
            $("#" + childGridID).jqGrid('navGrid', '#' + childGridPagerID,
                {
                    search: false,  // поиск
                    add: true,     // добавление
                    edit: true,    // редактирование
                    del: true,     // удаление
                    refresh: true // обновление
                },
                updateDetail("edit"), // обновление
                updateDetail("add"), // добавление
                updateDetail("del") // удаление
            );

            // функция возвращающая настройки для диалога редактирования
            function updateDetail(act) {
                // шаблон диалога редактирования
                var template = "<div style='margin-left:15px;' id='dlgEditInvoiceLine'>";
                template += "<div>{INVOICE_ID} </div>";
                template += "<div>{PRODUCT_ID} </div>";
                // поле ввода товара с кнопкой
                template += "<div> Product <sup>*</sup>:</div>";
                template += "<div>";
                template += "<div style='float: left;'>{Product}</div> ";        
                template += "<a style='margin-left: 0.2em;' class='btn' onclick='showProductWindow(); return false;'>";
                template += "<span class='glyphicon glyphicon-folder-open'></span> Выбрать</a> ";
                template += "<div style='clear: both;'></div>";
                template += "</div>";
                template += "<div> Quantity: </div><div>{Quantity} </div>";
                template += "<div> Price: </div><div>{Price} </div>";
                template += "<div> Total: </div><div>{Total} </div>";
                template += "<hr style='width: 100%;'/>";
                template += "<div> {sData} {cData}  </div>";
                template += "</div>";

                return {
                    top: $(".container.body-content").position().top + 150,
                    left: $(".container.body-content").position().left + 150,
                    modal: true,
                    drag: true,
                    closeOnEscape: true,
                    closeAfterAdd: true, // закрыть после добавления
                    closeAfterEdit: true, // закрыть после редактирования
                    reloadAfterSubmit: true, // обновление
                    template: (act != "del") ? template : null,
                    onclickSubmit: function (params, postdata) {
                        var selectedRow = detailGrid.getGridParam("selrow");
                        switch (act) {
                            case "add":
                                params.url = '@Url.Action("CreateDetail")';
                                // получаем идентификатор счёт-фактуры
                                postdata.INVOICE_ID = $('#dlgEditInvoiceLine input[name=INVOICE_ID]').val();
                                // получаем идентификатор товара для текущей записи
                                postdata.PRODUCT_ID = $('#dlgEditInvoiceLine input[name=PRODUCT_ID]').val();
                                break;

                            case "edit":
                                params.url = '@Url.Action("EditDetail")';
                                // получаем идентификатор текущей записи
                                postdata.INVOICE_LINE_ID = selectedRow;
                                break;

                            case "del":
                                params.url = '@Url.Action("DeleteDetail")';
                                // получаем идентификатор текущей записи
                                postdata.INVOICE_LINE_ID = selectedRow;
                                break;
                        }
                    },
                    afterSubmit: function (response, postdata) {
                        var responseData = response.responseJSON;
                        // проверяем результат на наличие сообщений об ошибках
                        if (responseData.hasOwnProperty("error")) {
                            if (responseData.error.length) {
                                return [false, responseData.error];
                            }
                        }
                        else {
                            // обновление грида
                            $(this).jqGrid(
                                'setGridParam',
                                {
                                    datatype: 'json'
                                }
                            ).trigger('reloadGrid');
                        }
                        return [true, "", 0];
                    }
                };
            };

        }


    });
</script>
