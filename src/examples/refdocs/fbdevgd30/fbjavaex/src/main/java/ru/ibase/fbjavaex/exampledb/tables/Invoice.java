/*
 * This file is generated by jOOQ.
*/
package ru.ibase.fbjavaex.exampledb.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.ibase.fbjavaex.exampledb.DefaultSchema;
import ru.ibase.fbjavaex.exampledb.Keys;
import ru.ibase.fbjavaex.exampledb.tables.records.InvoiceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Invoice extends TableImpl<InvoiceRecord> {

    private static final long serialVersionUID = -1907930781;

    /**
     * The reference instance of <code>INVOICE</code>
     */
    public static final Invoice INVOICE = new Invoice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoiceRecord> getRecordType() {
        return InvoiceRecord.class;
    }

    /**
     * The column <code>INVOICE.INVOICE_ID</code>.
     */
    public final TableField<InvoiceRecord, Integer> INVOICE_ID = createField("INVOICE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>INVOICE.CUSTOMER_ID</code>.
     */
    public final TableField<InvoiceRecord, Integer> CUSTOMER_ID = createField("CUSTOMER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>INVOICE.INVOICE_DATE</code>.
     */
    public final TableField<InvoiceRecord, Timestamp> INVOICE_DATE = createField("INVOICE_DATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>INVOICE.TOTAL_SALE</code>.
     */
    public final TableField<InvoiceRecord, BigDecimal> TOTAL_SALE = createField("TOTAL_SALE", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 2), this, "");

    /**
     * The column <code>INVOICE.PAID</code>.
     */
    public final TableField<InvoiceRecord, Short> PAID = createField("PAID", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("DEFAULT 0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * Create a <code>INVOICE</code> table reference
     */
    public Invoice() {
        this("INVOICE", null);
    }

    /**
     * Create an aliased <code>INVOICE</code> table reference
     */
    public Invoice(String alias) {
        this(alias, INVOICE);
    }

    private Invoice(String alias, Table<InvoiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Invoice(String alias, Table<InvoiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InvoiceRecord> getPrimaryKey() {
        return Keys.PK_INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InvoiceRecord>> getKeys() {
        return Arrays.<UniqueKey<InvoiceRecord>>asList(Keys.PK_INVOICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InvoiceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InvoiceRecord, ?>>asList(Keys.FK_INVOCE_CUSTOMER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Invoice as(String alias) {
        return new Invoice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Invoice rename(String name) {
        return new Invoice(name, null);
    }
}
