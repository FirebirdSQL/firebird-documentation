/*
 * This file is generated by jOOQ.
*/
package ru.ibase.fbjavaex.exampledb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.ibase.fbjavaex.exampledb.DefaultSchema;
import ru.ibase.fbjavaex.exampledb.Keys;
import ru.ibase.fbjavaex.exampledb.tables.records.WebuserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Webuser extends TableImpl<WebuserRecord> {

    private static final long serialVersionUID = -493642057;

    /**
     * The reference instance of <code>WEBUSER</code>
     */
    public static final Webuser WEBUSER = new Webuser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WebuserRecord> getRecordType() {
        return WebuserRecord.class;
    }

    /**
     * The column <code>WEBUSER.WEBUSER_ID</code>.
     */
    public final TableField<WebuserRecord, Integer> WEBUSER_ID = createField("WEBUSER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WEBUSER.EMAIL</code>.
     */
    public final TableField<WebuserRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * The column <code>WEBUSER.PASSWD</code>.
     */
    public final TableField<WebuserRecord, String> PASSWD = createField("PASSWD", org.jooq.impl.SQLDataType.VARCHAR.length(63).nullable(false), this, "");

    /**
     * Create a <code>WEBUSER</code> table reference
     */
    public Webuser() {
        this("WEBUSER", null);
    }

    /**
     * Create an aliased <code>WEBUSER</code> table reference
     */
    public Webuser(String alias) {
        this(alias, WEBUSER);
    }

    private Webuser(String alias, Table<WebuserRecord> aliased) {
        this(alias, aliased, null);
    }

    private Webuser(String alias, Table<WebuserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WebuserRecord> getPrimaryKey() {
        return Keys.PK_WEBUSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WebuserRecord>> getKeys() {
        return Arrays.<UniqueKey<WebuserRecord>>asList(Keys.PK_WEBUSER, Keys.UNQ_WEBUSER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Webuser as(String alias) {
        return new Webuser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Webuser rename(String name) {
        return new Webuser(name, null);
    }
}
