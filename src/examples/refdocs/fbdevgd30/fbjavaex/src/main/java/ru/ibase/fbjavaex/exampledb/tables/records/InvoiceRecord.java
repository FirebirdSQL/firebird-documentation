/*
 * This file is generated by jOOQ.
*/
package ru.ibase.fbjavaex.exampledb.tables.records;


import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.ibase.fbjavaex.exampledb.tables.Invoice;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceRecord extends UpdatableRecordImpl<InvoiceRecord> implements Record5<Integer, Integer, Timestamp, BigDecimal, Short> {

    private static final long serialVersionUID = -1284469130;

    /**
     * Setter for <code>INVOICE.INVOICE_ID</code>.
     */
    public void setInvoiceId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>INVOICE.INVOICE_ID</code>.
     */
    public Integer getInvoiceId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>INVOICE.CUSTOMER_ID</code>.
     */
    public void setCustomerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>INVOICE.CUSTOMER_ID</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>INVOICE.INVOICE_DATE</code>.
     */
    public void setInvoiceDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>INVOICE.INVOICE_DATE</code>.
     */
    public Timestamp getInvoiceDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>INVOICE.TOTAL_SALE</code>.
     */
    public void setTotalSale(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>INVOICE.TOTAL_SALE</code>.
     */
    public BigDecimal getTotalSale() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>INVOICE.PAID</code>.
     */
    public void setPaid(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>INVOICE.PAID</code>.
     */
    public Short getPaid() {
        return (Short) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Timestamp, BigDecimal, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Timestamp, BigDecimal, Short> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Invoice.INVOICE.INVOICE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Invoice.INVOICE.CUSTOMER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Invoice.INVOICE.INVOICE_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Invoice.INVOICE.TOTAL_SALE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return Invoice.INVOICE.PAID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getInvoiceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getInvoiceDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getTotalSale();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getPaid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceRecord value1(Integer value) {
        setInvoiceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceRecord value2(Integer value) {
        setCustomerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceRecord value3(Timestamp value) {
        setInvoiceDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceRecord value4(BigDecimal value) {
        setTotalSale(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceRecord value5(Short value) {
        setPaid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoiceRecord values(Integer value1, Integer value2, Timestamp value3, BigDecimal value4, Short value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceRecord
     */
    public InvoiceRecord() {
        super(Invoice.INVOICE);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(Integer invoiceId, Integer customerId, Timestamp invoiceDate, BigDecimal totalSale, Short paid) {
        super(Invoice.INVOICE);

        set(0, invoiceId);
        set(1, customerId);
        set(2, invoiceDate);
        set(3, totalSale);
        set(4, paid);
    }
}
