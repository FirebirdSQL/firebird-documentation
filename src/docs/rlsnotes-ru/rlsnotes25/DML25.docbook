<chapter id="rnfb25-dml">
  <chapterinfo>
    <title>Язык манипулиования данными (DML)</title>
  </chapterinfo>
  <para>В этой главе описаны изменения в языке манипулирования данными SQL.</para>

  <section id="rnfb25-dml-links"><!-- Level 1 section -->
    <title>Ссылки</title>
    <itemizedlist spacing="compact">
      <listitem>
        <para><link linkend="rnfb25-dml-regex">SIMILAR TO: поиск по регулярным выражениям</link></para>
      </listitem>
      <listitem>
        <para><link linkend="rnfb25-dml-hex">Поддержка шестнадцатеричных литералов</link></para>
      </listitem>
      <listitem>
        <para><link linkend="rnfb25-dml-uuid">Новые функции конвертирования UUID (GUID)</link></para>
      </listitem>
      <listitem>
        <para><link linkend="rnfb25-dml-lst">Расширение функции LIST()</link></para>
      </listitem>
      <listitem>
        <para><link linkend="rnfb25-dml-orisnull">Поддержка нетипизированных параметров в IS NULL</link></para>
      </listitem>
      <listitem>
        <para><link linkend="rnfb25-dml-optimiz">Усовершенствования оптимизатора</link></para>
      </listitem>
    </itemizedlist>

    <section id="rnfb25-dml-regex"><!-- Level 2 section -->
      <sectioninfo>
        <title>SIMILAR TO: поиск по регулярным выражениям</title>
        <author>
          <firstname>Адриано</firstname>
          <surname>дос Сантос Фернандес</surname>
        </author>
      </sectioninfo>
      <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-769">CORE-769</ulink>.</para>
      <para>Добавлен новый предикат SIMILAR TO, позволяющий проверять строковый 
      аргумент на соответствие регулярному выражению. Предикат применим везде, 
      где уместны логические (boolean) выражения, например, в предложении WHERE,
      в условиях ограничения целостности CHECK, в PSQL-операторе IF() и т.д.</para>

      <para><emphasis role="bold">Синтаксис</emphasis></para>
      <programlisting>
&lt;предикат SIMILAR&gt; ::= &lt;строка&gt; [ NOT ] SIMILAR TO &lt;регулярное выражение&gt;
    [ ESCAPE &lt;специальный символ&gt; ]

&lt;регулярное выражение&gt; ::=
      &lt;regular term&gt;
    | &lt;регулярное выражение&gt; &lt;символ вертикальной черты&gt; &lt;regular term&gt;

&lt;regular term&gt; ::=
      &lt;regular factor&gt;
    | &lt;regular term&gt; &lt;regular factor&gt;

&lt;regular factor&gt; ::=
      &lt;regular primary&gt;
    | &lt;regular primary&gt; &lt;символ звездочка&gt;
    | &lt;regular primary&gt; &lt;символ плюс&gt;
    | &lt;regular primary&gt; &lt;вопросительный знак&gt;
    | &lt;regular primary&gt; &lt;repeat factor&gt;

&lt;repeat factor&gt; ::= &lt;фигурная скобка&gt; &lt;нижняя граница&gt;
    [, [ &lt;верхняя граница&gt; ] ] &lt;фигурная скобка&gt;

&lt;нижняя граница&gt; ::= &lt;неотрицательное целое&gt;

&lt;верхняя граница&gt; ::= &lt;неотрицательное целое&gt;

&lt;regular primary&gt; ::=
      &lt;символьный спецификатор&gt;
    | &lt;символ процента&gt;
    | &lt;regular character set&gt;
    | &lt;круглая скобка&gt; &lt;регулярное выражение&gt; &lt;круглая скобка&gt;

&lt;символьный спецификатор&gt; ::=
      &lt;обычный символ&gt;
    | &lt;escaped-символ&gt;

&lt;regular character set&gt; ::=
      &lt;символ подчеркивания&gt;
    | &lt;квадратная скобка&gt; &lt;перечисление символов&gt; ... &lt;квадратная скобка&gt;
    | &lt;квадратная скобка&gt; &lt;символ циркумфлекс&gt; &lt;перечисление символов&gt; ... &lt;квадратная скобка&gt;
    | &lt;квадратная скобка&gt; &lt;перечисление включения&gt; ... &lt;символ циркумфлекс&gt;
                                            &lt;перечисление исключения&gt; ... &lt;квадратная скобка&gt;

&lt;перечисление включения&gt; ::= &lt;перечисление символов&gt;

&lt;перечисление исключения&gt; ::= &lt;перечисление символов&gt;

&lt;перечисление символов&gt; ::=
      &lt;символьный спецификатор&gt;
    | &lt;символьный спецификатор&gt; &lt;символ минус&gt; &lt;символьный спецификатор&gt;
    | &lt;квадратная скобка&gt; &lt;символ двоеточие&gt; &lt;иденификатор класса символа&gt;
                                            &lt;символ двоеточие&gt; &lt;квадратная скобка&gt;

&lt;иденификатор класса символа&gt; ::=
      ALPHA
    | UPPER
    | LOWER
    | DIGIT
    | SPACE
    | WHITESPACE
    | ALNUM</programlisting>

      <note>
        <orderedlist>
          <listitem>
          <para>&lt;обычный символ&gt; - это любой символ кроме открывающих и закрывающих 
          квадратных, круглых и фигурных скобок, символов вертикальной черты, циркумфлекса,
          минуса, плюса, звездочки, подчеркивания, процента, вопросительного знака
          и символа &lt;специальный символ>.</para>
          </listitem>
          <listitem>
          <para>&lt;escaped-символ&gt; это &lt;специальный символ&gt;, за которым
          следует один из следующих символов: открывающая или закрывающая квадратная,
          круглая или фигурная скобка, символ вертикальной черты, циркумфлекса,
          минуса, плюса, звездочки, подчеркивания, процента, вопросительный знак
          или &lt;специальный символ&gt;.</para>
          </listitem>
        </orderedlist>
      </note>

      <table id="rnfb25-t1">
        <title>Идентификаторы класса символа</title>
        <tgroup cols="3">
          <colspec align="left" colname="col-id"   colwidth="1*"/>
          <colspec align="left" colname="col-desc" colwidth="2*"/>
          <colspec align="left" colname="col-note" colwidth="3*"/>
          <thead>
            <row>
              <entry align="left">Идентификатор</entry>
              <entry align="left">Описание</entry>
              <entry align="left">Примечание</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>ALPHA</entry>
              <entry>Все латинские буквы (a-z, A-Z)</entry>
              <entry>Включает латинские буквы с диакритическим знаком, если используется 
              нечувствительная к диакритическому знаку (accent-insensitive) последовательность
              сортировки (collation)</entry>
            </row>
            <row>
              <entry>UPPER</entry>
              <entry>Все прописные латинские буквы (A-Z)</entry>
              <entry>Включает строчные буквы, если используется регистронезависимая 
              (case-insensitive) последовательность сортировки (collation)</entry>
            </row>
            <row>
              <entry>LOWER</entry>
              <entry>Все строчные латинские буквы (a-z)</entry>
              <entry>Включает прописные буквы, если используется регистронезависимая 
              (case-insensitive) последовательность сортировки (collation)</entry>
            </row>
            <row>
              <entry>DIGIT</entry>
              <entry>Все арабские цифры (0-9)</entry>
              <entry></entry>
            </row>
            <row>
              <entry>SPACE</entry>
              <entry>Пробел (ASCII 32)</entry>
              <entry></entry>
            </row>
            <row>
              <entry>WHITESPACE</entry>
              <entry>Все символы-разделители (горизонтальная табуляция (9), перевод 
              строки (10), вертикальная табуляция (11), возврат каретки (13), перевод 
              страницы (12), пробел (32))</entry>
              <entry></entry>
            </row>
            <row>
              <entry>ALNUM</entry>
              <entry>Все латинские буквы (ALPHA) и арабские цифры (DIGIT)</entry>
              <entry></entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para><emphasis role="bold">Руководство к использованию</emphasis></para>

       <para>Проверяет, соответствует ли строка хотя бы одному из перечисленных
       элементов регулярного выражения &lt;регулярное выражение&gt; 
       &lt;символ вертикальной черты&gt; &lt;regular term&gt;</para>
       <programlisting>
    'ab' SIMILAR TO 'ab|cd|efg'   -- истина
    'efg' SIMILAR TO 'ab|cd|efg'  -- истина
    'a' SIMILAR TO 'ab|cd|efg'    -- ложь
       </programlisting>
      
       <para>Проверяет нулевое или большее количество вхождений элемента в строку:
       &lt;regular primary&gt; &lt;символ звездочка&gt;</para>
       <programlisting>
    '' SIMILAR TO 'a*'         -- истина
    'a' SIMILAR TO 'a*'        -- истина
    'aaa' SIMILAR TO 'a*'      -- истина
    'b' SIMILAR TO 'a*'        -- ложь
    'ab' SIMILAR TO 'a*b'      -- истина
    'abab' SIMILAR TO 'ab*'    -- ложь
    'abab' SIMILAR TO '(ab)*'  -- истина
       </programlisting>

       <para>Проверяет одинарное или большее количество вхождений элемента в строку:
       &lt;regular primary&gt; &lt;символ плюс&gt;</para>
       <programlisting>
    '' SIMILAR TO 'a+'     -- ложь
    'a' SIMILAR TO 'a+'    -- истина
    'aaa' SIMILAR TO 'a+'  -- истина
       </programlisting>

       <para>Проверяет одинарное или нулевое количество вхождений элемента в строку:
       &lt;regular primary&gt; &lt;вопросительный знак&gt;</para>
       <programlisting>
    '' SIMILAR TO 'a?'     -- истина
    'a' SIMILAR TO 'a?'    -- истина
    'aaa' SIMILAR TO 'a?'  -- ложь
       </programlisting>

       <para>Проверяет точное (&lt;значение&gt;) количество вхождений элемента в строку:
       &lt;regular primary&gt; &lt;фигурная скобка&gt; &lt;значение&gt; 
       &lt;фигурная скобка&gt;</para>
       <programlisting>
    '' SIMILAR TO 'a{2}'     -- ложь
    'a' SIMILAR TO 'a{2}'    -- ложь
    'aa' SIMILAR TO 'a{2}'   -- истина
    'aaa' SIMILAR TO 'a{2}'  -- ложь
       </programlisting>

       <para>Проверяет точное (&lt;значение&gt;) или большее количество вхождений 
       элемента в строку: &lt;regular primary&gt; &lt;фигурная скобка&gt;
       &lt;значение&gt; &lt;запятая&gt; &lt;фигурная скобка&gt;:</para>
       <programlisting>
    '' SIMILAR TO 'a{2,}'     -- ложь
    'a' SIMILAR TO 'a{2,}'    -- ложь
    'aa' SIMILAR TO 'a{2,}'   -- истина
    'aaa' SIMILAR TO 'a{2,}'  -- истина
       </programlisting>

       <para>Проверяет количество вхождений элемента в строку от &lt;нижняя граница&gt; до 
       &lt;верхняя граница&gt; раз: &lt;regular primary&gt; &lt;фигурная скобка&gt;
       &lt;нижняя граница&gt; &lt;запятая&gt; &lt;верхняя граница&gt; &lt;фигурная скобка&gt;</para>
       <programlisting>
    '' SIMILAR TO 'a{2,4}'       -- ложь
    'a' SIMILAR TO 'a{2,4}'      -- ложь
    'aa' SIMILAR TO 'a{2,4}'     -- истина
    'aaa' SIMILAR TO 'a{2,4}'    -- истина
    'aaaa' SIMILAR TO 'a{2,4}'   -- истина
    'aaaaa' SIMILAR TO 'a{2,4}'  -- ложь
       </programlisting>

       <para>Проверяет наличие любого (не пустого) символа в строке: &lt;символ подчеркивания&gt;</para>
       <programlisting>
    '' SIMILAR TO '_'    -- ложь
    'a' SIMILAR TO '_'   -- истина
    '1' SIMILAR TO '_'   -- истина
    'a1' SIMILAR TO '_'  -- ложь
       </programlisting>

       <para>Проверяет наличие любой строки любой длины (включая пустую строку): &lt;символ процента&gt;</para>
       <programlisting>
    '' SIMILAR TO '%'         -- истина
    'az' SIMILAR TO 'a%z'     -- истина
    'a123z' SIMILAR TO 'a%z'  -- истина
    'azx' SIMILAR TO 'a%z'    -- ложь
       </programlisting>

       <para>Использование цельного регулярного выражения в качестве подвыражения: 
       &lt;круглая скобка&gt; &lt;регулярное выражение&gt; &lt;круглая скобка&gt;</para>
       <programlisting>
    'ab' SIMILAR TO '(ab){2}'    -- ложь
    'aabb' SIMILAR TO '(ab){2}'  -- ложь
    'abab' SIMILAR TO '(ab){2}'  -- истина
       </programlisting>

       <para>Проверяет символ на соответствие одному из перечисленных: &lt;квадратная скобка&gt; 
       &lt;перечисление символов&gt; ... &lt;квадратная скобка&gt;</para>
        <programlisting>
    'b' SIMILAR TO '[abc]'    -- истина
    'd' SIMILAR TO '[abc]'    -- ложь
    '9' SIMILAR TO '[0-9]'    -- истина
    '9' SIMILAR TO '[0-8]'    -- ложь
    '8' SIMILAR TO '[7-9]'    -- истина
    '8' SIMILAR TO '[9-7]'    -- истина
       </programlisting>

       <para>Проверяет символ на отсутствие в перечислении: &lt;квадратная скобка&gt;
       &lt;символ циркумфлекс&gt; &lt;перечисление символов&gt; ... &lt;квадратная скобка&gt;</para>
       <programlisting>
    'b' SIMILAR TO '[^abc]'    -- ложь
    'd' SIMILAR TO '[^abc]'    -- истина
       </programlisting>

       <para>Проверяет символ на наличие в перечислении &lt;перечисление включения&gt;, но отсутствие в 
       перечислении &lt;перечисление исключения&gt;: &lt;квадратная скобка&gt; 
       &lt;перечисление включения&gt; ... &lt;символ циркумфлекс&gt; &lt;перечисление исключения&gt; ...
       &lt;квадратная скобка&gt;</para>
       <programlisting>
    'b' SIMILAR TO '[abc^d]'        -- истина
    'b' SIMILAR TO '[a-d^b]'        -- ложь
    'b' SIMILAR TO '[abc^b]'        -- ложь
    '3' SIMILAR TO '[[:DIGIT:]^3]'    -- ложь
    '4' SIMILAR TO '[[:DIGIT:]^3]'    -- истина
       </programlisting>

       <para>Проверяет символ на принадлежность классу &lt;идентификатор класса символа&gt;
       (допустимые идентификаторы классов приведены в таблице <link linkend="rnfb25-t1">
       Идентификаторы класса символа</link>), может быть использовано с символом циркумфлекса
       для инвертирования логики: &lt;квадратная скобка&gt; &lt;двоеточие&gt; 
       &lt;идентификатор класса символа&gt; &lt;двоеточие&gt; &lt;квадратная скобка&gt;</para>
       <programlisting>
    '4' SIMILAR TO '[[:DIGIT:]]'  -- истина
    'a' SIMILAR TO '[[:DIGIT:]]'  -- ложь
    '4' SIMILAR TO '[^[:DIGIT:]]' -- ложь
    'a' SIMILAR TO '[^[:DIGIT:]]' -- истина
       </programlisting>

       <para>Пример использования специального символа: ESCAPE &lt;специальный символ&gt;</para>
       <programlisting>
    '(' SIMILAR TO '#(' ESCAPE '#'  -- истина
    '#' SIMILAR TO '##' ESCAPE '#'  -- истина
    '#' SIMILAR TO '#'  ESCAPE '#'  -- ошибка
       </programlisting>

      <para><emphasis role="bold">Примеры</emphasis></para>
      <programlisting>
create table department (
  number numeric(3) not null,
  name varchar(25) not null,
  phone varchar(14) 
  check (phone similar to '\([0-9]{3}\) [0-9]{3}\-[0-9]{4}' escape '\')
);

insert into department 
  values ('000', 'Corporate Headquarters', '(408) 555-1234');
insert into department 
  values ('100', 'Sales and Marketing', '(415) 555-1234');
insert into department 
  values ('140', 'Field Office: Canada', '(416) 677-1000');

insert into department
  values ('600', 'Engineering', '(408) 555-123'); -- нарушение условия check

select * from department
  where phone not similar to '\([0-9]{3}\) 555\-%' escape '\';
      </programlisting>
    </section>

    <section id="rnfb25-dml-hex"><!-- Level 2 section -->
      <sectioninfo>
        <title>Поддержка шестнадцатеричных литералов</title>
        <authorgroup>
          <author><firstname>Билл</firstname><surname>Оливер</surname></author>
          <author><firstname>Адриано</firstname><surname>дос Сантос Фернандес</surname></author>
        </authorgroup>
      </sectioninfo>
      <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1760">CORE-1760</ulink>.</para>
      <para>Добавлена поддержка шестнадцатеричных числовых и строковых литералов.</para>

      <para><emphasis role="bold">Синтаксис</emphasis></para>
      <programlisting>
&lt;числовой шестнадцатеричный литерал&gt;  ::= { 0x | 0X } &lt;шестнадцатеричный знак&gt; [ &lt;шестнадцатеричный знак&gt;... ]

&lt;строковой шестнадцатеричный литерал&gt; ::= { x | X } &lt;апостроф&gt; [ { &lt;шестнадцатеричный знак&gt; }... ] &lt;апостроф&gt;

&lt;шестнадцатеричный знак&gt; ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C | D | E | F | a | b | c | d | e | f
      </programlisting>

      <section id="rnfb25-dml-hex-lit"><!-- section 3 -->
        <title>Числовые шестнадцатеричные литералы</title>
        <itemizedlist>
          <listitem>
            <para>Количество шестнадцатеричных знаков в строке не может быть больше 16.</para>
          </listitem>
          <listitem>
            <para>Если количество шестнадцатеричных знаков больше 8, константа 
            имеет тип данных BIGINT, иначе - тип данных INTEGER. Т.е., например,
            0xF0000000 - это -268435456, а 0x0F0000000 равно 4026531840.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="rnfb25-dml-hex-bin"><!-- section 3 -->
        <title>Строковые шестнадцатеричные литералы</title>
        <para>Строка будет иметь тип данных CHAR(<emphasis>n</emphasis>/2) CHARACTER SET OCTETS,
        где <emphasis>n</emphasis> - количество шестнадцатеричных знаков.</para>
      </section>

      <para><emphasis role="bold">Примеры</emphasis></para>
      <programlisting>
select 0x10, cast('0x0F0000000' as bigint)
  from rdb$database;
  
select x'4669726562697264'
  from rdb$database;

select x'CFF0E8E2E5F22C20F7E8F2E0F2E5EBFC21'
  from rdb$database;
      </programlisting>
    </section>

    <section id="rnfb25-dml-uuid"><!-- Level 2 section -->
      <sectioninfo>
        <title>Новые функции конвертирования UUID (GUID)</title>
        <author>
          <firstname>Адриано</firstname>
          <surname>дос Сантос Фернандес</surname>
        </author>
      </sectioninfo>
      <para>Ссылки в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1656">CORE-1656</ulink>
      и <ulink url="http://tracker.firebirdsql.org/browse/CORE-1682">CORE-1682</ulink>.</para>
      <para>Добавлены две новые встроенные функции (UUID_TO_CHAR и CHAR_TO_UUID), позволяющие 
      преобразование UUID (GUID) между форматом CHAR(16) OCTETS и форматом RFC4122.</para>

      <section id="rnfb25-dml-uuid01"><!-- Level 3 section -->
        <title>CHAR_TO_UUID()</title>
        <para>Функция CHAR_TO_UUID() преобразовывает UUID (GUID), представленный в формате 
        CHAR(32) ASCII (XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX), в формат CHAR(16) OCTETS, 
        оптимизированный для хранения.</para>

        <para><emphasis role="bold">Синтаксис</emphasis></para>
        <programlisting>
CHAR_TO_UUID( &lt;строка&gt; )
        </programlisting>
        <para><emphasis role="bold">Пример</emphasis></para>
        <programlisting>
select char_to_uuid('93519227-8D50-4E47-81AA-8F6678C096A1')
  from rdb$database;
        </programlisting>
      </section>

      <section id="rnfb25-dml-uuid02"><!-- Level 3 section -->
        <title>UUID_TO_CHAR()</title>
        <para>Функция UUID_TO_CHAR() преобразовывает UUID (GUID), представленный 
        в формате CHAR(16) OCTETS (как результат функции GEN_UUID()), в формат 
        CHAR(32) ASCII (XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX).</para>

        <para><emphasis role="bold">Syntax Model</emphasis></para>
        <programlisting>
UUID_TO_CHAR( &lt;строка&gt; )
        </programlisting>
        <para><emphasis role="bold">Example</emphasis></para>
        <programlisting>
select uuid_to_char(gen_uuid())
  from rdb$database;
        </programlisting>
      </section>
    </section><!-- Level 2 -->

    <section id="rnfb25-dml-orisnull"><!-- Level 2 section -->
      <sectioninfo>
        <title>Поддержка нетипизированных параметров в предикате IS NULL</title>
        <author>
          <firstname>Адриано</firstname>
          <surname>дос Сантос Фернандес</surname>
        </author>
      </sectioninfo>
      <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-2298">CORE-2298</ulink></para>

      <para>По многочисленным просьбам (в частности, от программистов, использующих Delphi)
      добавлена возможность использовать <quote>один и тот же</quote> параметр как условие
      фильтра по полю таблицы и проверять его (параметр) на равенство NULL. Это позволяет
      разработчикам клиентских приложений (использующим Delphi и другие языки программирования)
      использовать <quote>отключаемые фильтры</quote> (т.е. условия с использованием параметров,
      которые <quote>отключаются</quote> присвоением параметру NULL), т.е. использовать запросы
      следующего типа:</para>
      <literallayout class="monospaced">
  WHERE col1 = :param1 OR :param1 IS NULL
      </literallayout>

      <para>На уровне API этот запрос преобразовывается в следующий:</para>
      <literallayout class="monospaced">
  WHERE col1 = ? OR ? IS NULL
      </literallayout>

      <para>Вследствие чего возникает две проблемы:</para>
      <orderedlist>
        <listitem>
          <para>В то время как разработчик рассматривает параметр <command>:param1</command>
          как одну переменную с двумя <quote>ссылками</quote>, на уровне API запрос содержит
          два отдельных и независимых параметра.</para>
        </listitem>

        <listitem>
          <para>Тип второго параметра неизвестен и сервер не может его самостоятельно определить.</para>
        </listitem>
      </orderedlist>

      <para>Для решения этих проблем специально для предиката <quote>? is NULL</quote> 
      добавлен новый тип данных <command>SQL_NULL</command>. Работает это следующим образом:</para>
      <itemizedlist>
        <listitem>
          <para>Если параметр <quote>param1</quote> не равен NULL, клиентская библиотека
          доступа должна присвоить параметру нужное значение и установить поле 
          <command>XSQLVAR.sqlind</command> в NOT NULL.</para>
        </listitem>
        <listitem>
          <para>Если параметр равен NULL, клиентская библиотека доступа должна присвоить 
          полю <command>XSQLVAR.sqlind</command> <emphasis role="bold">обоих</emphasis>
          параметров значение NULL и <quote>очистить</quote> (присвоить NULL) поле 
          <command>XSQLVAR.sqldata</command>.</para>
        </listitem>
      </itemizedlist>
      <para>Иными словами, для параметра (&nbsp;?&nbsp;) в предикате <command>? IS NULL</command></para>:

      <itemizedlist>
        <listitem>
          <para>Поле <command>XSQLVAR.sqlind</command> должно быть установлено 
          в соответствии с NULL/не-NULL состоянием параметра.</para>
        </listitem>
        <listitem>
          <para>Поле <command>XSQLVAR.sqldata</command> параметра с типом SQL_NULL 
          всегда должно быть пустым (NULL).</para>
        </listitem>
      </itemizedlist>

      <note>
        <title>NULL в выходных параметрах</title>
        <para>Если запрос возвращает константу NULL (например, <command>select NULL from ...</command>),
        поле результирующего набора данных будет иметь тип CHAR(1), а не SQL_NULL. 
        Но это может быть изменено в следующих версиях.</para>
      </note>

    </section>

    <section id="rnfb25-dml-lst"><!-- Level 2 section -->
      <sectioninfo>
        <title>Расширение функции LIST()</title>
        <author>
          <firstname>Адриано</firstname>
          <surname>дос Сантос Фернандес</surname>
        </author>
      </sectioninfo>
      <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1453">CORE-1453</ulink></para>
      <para>Добавлена возможность в функции LIST() использовать строковое выражение в качество разделителя.</para>

      <para><emphasis role="bold">Синтаксис</emphasis></para>
      <programlisting>
&lt;Функция LIST&gt; ::= LIST '(' [ { ALL | DISTINCT } ] &lt;выражение&gt; [ ',' &lt;разделитель&gt; ] ')'

&lt;разделитель&gt;  ::= любое строковое выражение
      </programlisting>
      
      <note>
        <para>Если разделитель не указан, то в качестве разделителя будет использована запятая.</para>  
      </note>

      <para><emphasis role="bold">Пример</emphasis></para>
      <programlisting>
SELECT
  DISCUSSION_ID,
  LIST(COMMMENT, ASCII_CHAR(13))
FROM COMMENTS
  GROUP BY DISCUSSION_ID;
      </programlisting>
    </section><!-- sect2 -->

    <section id="rnfb25-dml-optimiz"><!-- Level 2 section -->
      <title>Усовершенствования оптимизатора</title>
      <para>В оптимизаторе сделаны следующие усовершенствования:</para>
      <variablelist>
        <varlistentry>
          <term>CROSS JOIN</term>
          <author>
            <firstname>Дмитрий</firstname><surname>Еманов</surname>
          </author>
          <listitem>
            <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-2200">CORE-2200</ulink>.</para>
            <para>При выполнении операции CROSS JOIN с пустой таблицей оптимизатор немедленно возвращает пустой набор данных.</para>
            <note>
              <para>Это усовершенствование добавлено и в версию 2.1.2.</para>
            </note>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Производные таблицы (derived tables)</term>
          <author>
            <firstname>Адриано</firstname><surname>дос Сантос Фернандес</surname>
          </author>
          <listitem>
            <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-2029">CORE-2029</ulink>.</para>
            <para>Увеличено максимальное количество контекстов для производных таблиц.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Отложенное вычисление DEFAULT-значения</term>
          <author>
            <firstname>Адриано</firstname><surname>дос Сантос Фернандес</surname>
          </author>
          <listitem>
            <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1842">CORE-1842</ulink>.</para>
            <para>В некоторых случаях преждевременное вычисление значения или 
            выражения, указанного в качестве DEFAULT для поля таблицы, может 
            привести к путанице в отношении правильности значения, указанного
            при вставке (INSERT) для этого поля. Усовершенствование состоит в 
            том, что DEFAULT-выражение не вычисляется - до тех пор, пока это не
            станет необходимо (т.е. до попытки вставки записи, без присвоения
            значения этому полю).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Использование индекса для NOT IN</term>
          <author>
            <firstname>Адриано</firstname><surname>дос Сантос Фернандес</surname>
          </author>
          <listitem>
            <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1137">CORE-1137</ulink>.</para>
            <para>Для предиката NOT IN стало возможным использование индекса.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Утечка памяти в Undo Log</term>
          <author>
            <firstname>Дмитрий</firstname><surname>Еманов</surname>
          </author>
          <listitem>
            <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1477">CORE-1477</ulink>.</para>
            <para>При большом количестве операций UPDATE в одной и той же 
            транзакции был возможен чрезмерный расход памяти в Undo log.
            Потребление памяти уменьшено в версии 2.5.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section><!-- sect2 -->

    <section id="rnfb25-dml-other"><!-- Level 2 section -->
      <title>Другие усовершенствования</title>
      <para>Другие изменения и исправления:</para>
      <variablelist>

        <varlistentry>
          <term>Обнаружение некорректных UDF-функций, объявленных с помощью FREE_IT</term>
          <author>
            <firstname>Адриано</firstname><surname>дос Сантос Фернандес</surname>
          </author>
          <listitem>
            <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1937">CORE-1937</ulink>.</para>
            <para>Ранее, функция UDF, объявленная с помощью FREE_IT, могла вызвать падение
            сервера, если память была выделена не функцией <command>ib_util_malloc()</command>.
            Теперь подобные ситуации корректно обнаруживаются и обрабатываются, но выделенная 
            память остается <emphasis role="bold">неосвобожденной</emphasis>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Дополнительная информация при ошибке <quote>Expression evaluation not supported</quote></term>
          <author>
            <firstname>Клаудио</firstname><surname>Вальдеррама</surname>
          </author>
          <listitem>
            <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1799">CORE-1799</ulink>.</para>
            <para>Добавлены новые GDS-коды (и тексты ошибок) для обеспечения 
            более подробной информации при возникновении ошибки 
            <quote>Expression evaluation not supported</quote>. Например:</para>
            <literallayout class="monospaced">
  'Argument for @1 in dialect 1 must be string or numeric'
  'Strings cannot be added to or subtracted from DATE or TIME types'
  'Invalid data type for subtraction involving DATE, TIME or TIMESTAMP types'
   и т.д.
            </literallayout>
            <para>Эта информация следует после GDS-кода в статус-векторе (status vector) ошибки
            <command>isc_expression_eval_err (expression evaluation not supported)</command>.</para>
          </listitem>
        </varlistentry>
      </variablelist>

    </section><!-- sect2 -->
  </section>

</chapter>