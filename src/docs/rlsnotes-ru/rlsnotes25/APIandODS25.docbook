  <chapter id="rnfb25-apiods">
    <chapterinfo>
      <title>Изменения в Firebird API и ODS</title>
    </chapterinfo>

    <section id="rnfb25-apiods-ods" xreflabel="ODS Changes"><!-- Level 1 section -->
      <title>Изменения ODS (структуры данных на диске)</title>

      <section id="rnfb25-apiods-ods-number"><!-- Level 2 section -->
        <title>Новый номер ODS</title>
        <para>Firebird 2.5 создает базы данных с версией ODS 11.2.</para>
      </section>

      <section id="rnfb25-apiods-page_size"><!-- Level 2 section -->
        <title>Максимальный размер страницы</title>
        <para>Максимальный размер страницы остался прежним - 16 KБ (16384 байт).</para>
      </section>

      <section id="rnfb25-apiods-num_buffers"><!-- Level 2 section -->
        <title>Максимальный размер кеша</title>
        <para>Максимальное количество страниц, которые могут быть использованы для
        кеша базы данных, зависит от разрядности Firebird (64 или 32 бита):</para>
        <itemizedlist>
          <listitem>
            <para>64-битный :: 2^31 -1 (2,147,483,647) страниц</para>
          </listitem>
          <listitem>
            <para>32-битный :: 128,000 страниц (как и в версии 2.1)</para>
          </listitem>
        </itemizedlist>
      </section>  
    </section>

    <!-- API -->
    <section id="rnfb25-apiods-api" xreflabel="API Extensions"><!-- Level 1 section -->
      <title>Расширения API (Application Programming Interface)</title>

      <section id="rnfb25-apiods-api-conncharset"><!-- Level 2 -->
        <title>Строка подключения и набор символов</title>
        <para>В предыдущих версиях сервер никак не учитывал набор символов, 
        используемый в операционной системе и файловой системе. Начиная с версии 2.5 
        Firebird позволяет работать с именами файлов и строковыми параметрами, не 
        входящими в подмножество ASCII.</para>
        <important>
          <title>Только DPB-соединения поддерживают эту возможность</title>
          <para>В текущей реализации эта возможность поддерживается только при 
          подключении через DPB (параметры соединения с базой данных). Функции 
          Service API (<emphasis>isc_spb*</emphasis>) эту возможность пока не
          поддерживают.</para>
        </important>

        <section id="rnfb25-apiods-api-conncharset01"><!-- Level 3 -->
          <title>isc_dpb_utf8_filename</title>
          <para>Новый параметр соединения <command>isc_dpb_utf8_filename</command> 
          сообщает серверу Firebird, что имя файла в строке соединения передается 
          в кодировке UTF8 (UTF-8). Если параметр isc_dpb_utf8_filename не указан,
          сервер будет использовать кодировку операционной системы.</para>

          <section id="rnfb25-apiods-api-conncharset01a"><!-- Level 4 -->
            <title>Обратная совместимость</title>
            <variablelist>
              <varlistentry>
                <term>Новый клиент, старый сервер</term>
                <listitem>
                  <para>При подключении к серверу с версией ниже 2.5 клиентом от версии 2.5
                  или выше с использованием параметра <command>isc_dpb_utf8_filename</command>
                  имя файла конвертируется из UTF-8 в кодировку <emphasis role="bold">операционной
                  системы клиента</emphasis> и параметр <command>isc_dpb_utf8_filename</command>
                  удаляется из DPB. Совместимость гарантируется только, если кодировки операционных
                  систем на сервере и клиенте совпадают.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Новый клиент, новый сервер, без параметра isc_dpb_utf8_filename</term>
                <listitem>
                  <para>При подключении клиента с версией 2.5 и выше к серверу с версией 2.5
                  и выше без использования параметра <command>isc_dpb_utf8_filename</command>
                  имя файла автоматически конвертируется из кодовой страницы операционной системы
                  в UTF-8 и в DPB добавляется параметр <command>isc_dpb_utf8_filename</command>.
                  Совместимость гарантируется только, если кодировки операционных систем на
                  сервере и клиенте совпадают.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Новый клиент, новый сервер, с параметром isc_dpb_utf8_filename</term>
                <listitem>
                  <para>Когда используется параметр <command>isc_dpb_utf8_filename</command>
                  клиент передает имя файла на сервер, не изменяя его. Но клиентское приложение
                  <emphasis role="bold">уже</emphasis> должно передать имя файла в кодировке UTF-8.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section><!-- sect4 -->
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-conncharset02"><!-- Level 3 -->
          <title>Преобразования кодовой страницы</title>
          <para>В ОС Windows используется кодировка Windows ANSI, на всех 
          остальных платформах используется кодировка UTF-8.</para>

          <para>Кодировка UTF-8 может быть не лучшим выбором для имени файла. 
          Например, если скрипт или текстовый файл загружается в <emphasis>isql</emphasis> 
          или другое приложение, использующее другую кодировку при подключении, то могут
          возникнуть проблемы с использованием нескольких кодировок в одном файле.</para>

          <para>Данная проблема может быть решена с помощью кодов символов
          Unicode, в том числе клиентами версий ниже 2.5.</para>

          <section id="rnfb25-apiods-api-conncharset02a"><!-- Level 4 -->
            <title>Использование кодов символов Unicode</title>
            <para>Любой символ Unicode в имени файла в строке подключения 
            теперь может быть закодирован как ASCII символ. Это достигается 
            подстановкой символа <firstterm>#</firstterm> в качестве префикса 
            перед кодом символа из таблицы Unicode, т.е. <command>#XXXX</command>,
            где X - шестнадцатеричный код символа (символы 0-9, a-f, A-F).</para>

            <para>Если один из символов в строке подключения оказывается равным #,
            то можно <quote>экранировать</quote> (удвоить) символ (&nbsp;##&nbsp;)
            или использовать его Unicode-код <command>#0023</command>.</para>
            <note>
              <para>Символ <firstterm>#</firstterm> интерпретируется на сервере по
              новым правилам, даже при использовании клиента версий ниже 2.5.</para>
            </note>
          </section><!-- sect4 -->
        </section><!-- sect3 -->
      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-sqlstate">
        <sectioninfo>
          <title>Поддержка кодов завершения SQLSTATE</title>
          <authorgroup>
            <author><firstname>Билл</firstname><surname>Оливер</surname></author>
            <author><firstname>Дмитрий</firstname><surname>Еманов</surname></author>
          </authorgroup>
        </sectioninfo>

        <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1761">CORE-1761</ulink></para>
        <para>Добавлена новая API-функция <command>fb_sqlstate()</command> для преобразования статус-вектора 
        ошибки в 5-ти символьный буквенно-цифровой код завершения (SQLSTATE) по стандарту SQL-2003.</para>
        <itemizedlist>
          <listitem>
            <para>Код завершения SQLSTATE представляет собой соединение 2-х символьного SQL CLASS и 3-х символьного 
            SQL SUBCLASS.</para>
          </listitem>
          <listitem>
            <para>SQL Операторы теперь возвращают код завершения SQLSTATE.</para>
          </listitem>
          <listitem>
            <para>Утилита <emphasis>isql</emphasis> в случае ошибки теперь
            выводит код SQLSTATE, а не один код SQLCODE, как было ранее</para>
          </listitem>
          <listitem>
            <para>Диагностика по кодам SQLCODE устарела и не будет поддерживаться в следующих версиях</para>
          </listitem>
        </itemizedlist>
        <note>
          <title>Устаревшие коды SQLCODE</title>
          <para>Хотя коды SQLCODE являются устаревшими и использование кодов
          SQLSTATE предпочтительнее, коды SQLCODE пока остаются в Firebird.
          Функция API <firstterm>isc_sqlcode()</firstterm> все еще поддерживается,
          так же как обработка исключений с помощью <command>WHEN SQLCODE</command>.</para>
        </note>
        <para><link linkend="rnfb25-appx-sqlstates">Приложение A: SQLSTATE</link>
        содержит список всех кодов завершения SQLSTATE, используемых в этой 
        версии, вместе с соответствующими текстами сообщений.</para>
      </section>

      <section id="rnfb25-apiods-api-unprpr"><!-- Level 2 section -->
        <sectioninfo>
          <title><quote>Эффективный Unprepare</quote></title>
          <authorgroup>
            <author><firstname>Билл</firstname><surname> Оливер</surname></author>
            <author><firstname>Дмитрий</firstname><surname> Еманов</surname></author>
          </authorgroup>
        </sectioninfo>
        <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1741">CORE-1741</ulink></para>

        <para>Новый параметр <firstterm>DSQL_unprepare</firstterm> (числовое значение 4) для функции API 
        <firstterm>isc_dsql_free_statement()</firstterm> позволяет переводить DSQL-запросы в состояние 
        <quote>unpreparing</quote>.</para>
        <para>Ранее функция <firstterm>isc_dsql_free_statement()</firstterm> 
        поддерживала только параметры <firstterm>DSQL_close</firstterm> (для 
        закрытия именованного курсора) и <firstterm>DSQL_drop</firstterm> (для 
        освобождения дескриптора запроса).</para>
      </section>

      <section id="rnfb25-apiods-api-cnclop"><!-- Level 2 section -->
        <sectioninfo>
          <title>Функция fb_cancel_operation</title>
            <author><firstname>Александр</firstname><surname>Пешков</surname></author>
        </sectioninfo>
        <para>Новая API-функция <firstterm>fb_cancel_operation()</firstterm>
        позволяет отменить выполнение текущих операций в конкретном соединении
        с базой данных путем блокирования API-вызовов.</para>

        <para><emphasis role="bold">Синтаксис</emphasis></para>
        <literallayout class="monospaced">
   ISC_STATUS fb_cancel_operation(ISC_STATUS* status_vector,
                                  isc_db_handle* db_handle,
                                  ISC_USHORT option);
        </literallayout>

        <para><emphasis role="bold">Параметры</emphasis></para>

        <variablelist>
          <varlistentry>
            <term>status vector (ISC_STATUS* status_vector)</term>
            <listitem>
              <para>Указатель на статус-вектор.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>db_handle (pointer to a isc_db_handle)</term>
            <listitem>
              <para>Дескриптор соединения с базой данных.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>option (unsigned short: symbol)</term>
            <listitem>
              <para>Определяет тип действия. Значения параметра:</para>
              <itemizedlist>
                <listitem>
                  <para><emphasis>fb_cancel_raise</emphasis>: отменяет любые 
                  операции в указаннном соединении. При этом сервер попытается
                  остановить выполнение текущей операции и вернуть исключение
                  со статус-вектором прерванного API-вызова.</para>

                  <example>
                    <literallayout class="monospaced">
Поток1:                                Поток2:
------------------------------          ------------------------------

isc_dsql_execute(status, ....)
........                                fb_cancel_operation(cancel_status, ...)
status[1] == isc_cancelled;             cancel_status[1] = 0;
                    </literallayout>
                  </example>
                </listitem>
                <listitem>
                  <para><emphasis>fb_cancel_disable</emphasis>: запрещает 
                  выполнение команды <emphasis>fb_cancel_raise</emphasis> 
                  в указанном соединении. Это может быть полезно при выполнении 
                  критичеких операций, например, сборки мусора.</para>
                </listitem>
                <listitem>
                  <para><emphasis>fb_cancel_enable</emphasis>: позволяет вновь 
                  разрешить выполнение команды отмены операции (fb_cancel_raise), 
                  если ранее она ранее была запрещена (fb_cancel_disable). Во 
                  вновь создаваемом соединении с базой данных выполнение команды
                  <emphasis>fb_cancel_raise</emphasis> разрешено по умолчанию.</para>
                </listitem>
                <listitem>
                  <para><emphasis>fb_cancel_abort</emphasis>: принудительно 
                  закрывает клиентское соединение. Полезно при необходимости 
                  срочно закрыть соединение. Все активные транзакции будут 
                  отменены (Rollback), а клиентское соединение будет закрыто
                  без возврата ошибок (со статусом <quote>Sucess</quote>).
                  <emphasis role="bold">Используйте с осторожностью!</emphasis></para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
        <section id="rnfb25-apiods-api-cnclop-usage"><!-- Level 3 section -->
          <title>Использование</title>
          <para>Повторять вызов команд <emphasis>fb_cancel_disable</emphasis> 
          и <emphasis>fb_cancel_enable</emphasis> можно много раз.</para>

          <para>Обычно вызов команды <emphasis>fb_cancel_raise</emphasis> нужен 
          для остановки "долгоиграющего" запроса, функция при этом должна 
          вызываться из отдельного потока.</para>
          <important>
            <title>Обратите внимание на асинхронный характер вызова команды 
            <emphasis>fb_cancel_raise</emphasis>!</title>
          </important>

          <para>С другой стороны, асинхронность выполнения подразумевает, что 
          к концу API-вызова соединение может быть неактивным. Асинхронность
          также означает, что возвращаемый статус-вектор почти  всегда будет
          возвращать значение <emphasis>FB_SUCCESS</emphasis>, хотя возможны и
          исключения: например, ошибка при передаче пакетов.</para>

          <para><emphasis role="bold">Пример</emphasis></para>
          <programlisting>
Поток A:
// разрешаем выполнение fb_cancel_operation в соединении
fb_cancel_operation(isc_status, &amp;DB, fb_cancel_enable);

// запускаем на выолнение долгоиграющий запрос
isc_dsql_execute_immediate(isc_status, &amp;DB, &amp;TR, 0, &quot;запрос&quot;, 3, NULL);

// ожидание завершения API-вызова

    Поток B:
    // отменяем текущую операцию
    fb_cancel_operation(local_status, &amp;DB, fb_cancel_raise);

Thread A:
if (isc_status[1])
  isc_print_status(isc_status); // выведет сообщение &quot;operation was cancelled&quot;
          </programlisting>
        </section><!-- sect3 -->
      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-shtdn"><!-- Level 2 section -->
        <sectioninfo>
          <title>Функция Shutdown</title>
            <author><firstname>Александр</firstname><surname>Пешков</surname></author>
        </sectioninfo>

        <para>Добавлены функции для остановки сервера из клиентских приложений.</para>

        <section id="rnfb25-apiods-api-shtdn01"><!-- Level 3 section -->
          <title>Две взаимосвязанные функции fb_shutdown*</title>
          <para>Две функции <firstterm>fb_shutdown*</firstterm> могут 
          использоваться в приложениях для встраиваемого (embedded) сервера: 
          <firstterm>fb_shutdown()</firstterm> и <firstterm>fb_shutdown_callback</firstterm>.</para>

          <para><emphasis role="bold">Прототипы</emphasis></para>
          <literallayout class="monospaced">
   typedef int (*FB_SHUTDOWN_CALLBACK)(const int reason, const int mask, void* arg);

   int fb_shutdown(unsigned int timeout,
                   const int reason);

   ISC_STATUS fb_shutdown_callback(ISC_STATUS* status_vector,
                                   FB_SHUTDOWN_CALLBACK callback_function,
                                   const int mask,
                                   void* arg);
          </literallayout>

          <section id="rnfb25-apiods-api-shtdn01a"><!-- Level 4 section -->
            <title>fb_shutdown()</title>
            <para>Функция <command>fb_shutdown()</command> выполняет остановку 
            различных подсистем сервера Firebird (yValve, engine, redirector) и 
            разрабатывалась в первую очередь для встраиваемого сервера, так как 
            действие функции распространяется только на текущий процесс.</para>

            <para>В настоящее время функция работает только для Embedded-режима. 
            Она прерывает выполнение всех активных запросов, отменяет все активные 
            транзакции, разрывает активные соединения и останавливает сервер.</para>
            <important>
              <title>Важно для прикладных разработчиков</title>
              <para>Функция <command>fb_shutdown()</command> не останавливает 
              удаленный сервер, к которому может быть подключено приложение, а
              завершает всю активность в текущем соединении. Все клиентские
              библиотеки, включая и библиотеку встраиваемого сервера, автоматически
              выполняют эту команду перед завершением приложения, если клиент
              подключен хотя бы к одной базе данных или сервису. Следовательно,
              функция никогда не должна вызываться для удаленного соединения.</para>
            </important>

            <para><emphasis role="bold">Параметры</emphasis></para>
            <para>Функция <command>fb_shutdown()</command> имеет два параметра:</para>
            <orderedlist>
              <listitem>
                <para>время ожидания в миллисекундах</para>
              </listitem>
              <listitem>
                <para>причина остановки</para>
                <para>Коды причины (<command>const int reason</command>) отрицательны 
                и приведены в файле <filename>ibase.h</filename>: имена констант 
                начинаются с <command>fb_shutrsn</command>.</para>
                <note>
                  <para>При вызове функции <command>fb_shutdown()</command> из приложения нужно
                  задавать <emphasis role="bold">положительное</emphasis> значение аргумента.</para>
                </note>
              </listitem>
            </orderedlist>

            <para><emphasis role="bold">Возвращаемые значения</emphasis></para>
            <itemizedlist>
              <listitem>
                <para>При успешной остановке сервера возвращает ноль.</para>
              </listitem>
              <listitem>
                <para>Ненулевое значение говорит об ошибках при остановке сервера.
                Более подробная информация будет записана в файл <filename>firebird.log</filename>.</para>
              </listitem>
            </itemizedlist>
          </section><!-- sect4 -->

          <section id="rnfb25-apiods-api-shtdn01b"><!-- Level 4 section -->
            <title>fb_shutdown_callback()</title>
            <para><command>fb_shutdown_callback()</command> указывает функцию 
            обратного вызова, которая должна быть вызвана при остановке сервера. 
            Этот вызов почти всегда проходит успешно, хотя существуют условия, 
            приводящие к ошибкам - например, отсутствие свободной памяти.</para>

            <para><emphasis role="bold">Параметры</emphasis></para>
            <para><command>fb_shutdown_callback()</command> имеет четыре параметра:</para>
            <variablelist>
              <varlistentry>
                <term>status vector (ISC_STATUS* status_vector)</term>
                <listitem>
                  <para>Указатель на структуру статус-вектора.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>pointer to callback function (FB_SHUTDOWN_CALLBACK callback_function)</term>
                <listitem>
                  <para>Указатель на функцию обратного вызова. Функция обратного 
                  вызова может иметь три параметра. Первый и второй параметры 
                  позволяют определить, какие действия должны быть выполнены:</para>
                  <orderedlist>
                    <listitem>
                      <para>Причина остановки сервера.</para>
                      <para>Коды причин приведены в файле <filename>ibase.h</filename>:
                      имена констант начинаются с <command>fb_shutrsn</command>. 
                      Наиболее интересны две из них:</para>
                      <itemizedlist>
                        <listitem>
                          <para>fb_shutrsn_exit_called: Firebird завершается командой
                          exit() или выгружается библиотека встраиваемого сервера</para>
                        </listitem>
                        <listitem>
                          <para>fb_shutrsn_signal: применим только для POSIX ОС: 
                          сигнал SIGINT или SIGTERM</para>
                        </listitem>
                      </itemizedlist>
                      <note>
                        <para>Нужно использовать <emphasis role="bold">положительные</emphasis>
                        значения констант при вызове вызовов команды <command>fb_shutdown()</command>.</para>
                      </note>
                    </listitem>
                    <listitem>
                      <para>Актуальное значение маски для вызова</para>
                      <para>Этот параметр определяет, когда запускается функция 
                      обратного вызова - до или после остановки сервера.</para>
                    </listitem>
                    <listitem>
                      <para>Параметр для прикладного применения</para>
                      <para>Определяется приложением и может быть использован 
                      для любых целей (может иметь значение NULL).</para>
                    </listitem>
                  </orderedlist>
                </listitem>
                <listitem>
                  <para>&nbsp;</para><!-- this space is intentionally left blank! -->
                  <para><emphasis role="bold">Возвращаемые значения</emphasis></para>
                </listitem>
                <listitem>
                  <para>При успешном выполнении функция обратного вызова 
                  вовращает ноль. Отличное от нуля интерпретируется по маске 
                  вызова (смотрите далеее описание следующего параметра):</para>
                  <itemizedlist>
                    <listitem>
                      <para>При вызове <emphasis>fb_shut_postproviders</emphasis> это приводит к возврату ненулевого значения
                      функцией <command>fb_shutdown()</command>. Функция обратного вызова отвечает за возврат точных причин 
                      ошибки.</para>
                    </listitem>
                    <listitem>
                      <para>При вызове fb_shut_preproviders возврат ненулевого
                      значения говорит о невозможности остановки сервера.</para>
                      <tip>
                        <para>Возврат ненулевого значения при остановке сервера
                        командой exit() является плохой идеей.</para>
                      </tip>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Маска вызова - call mask (const int mask)</term>
                <listitem>
                  <para>Может принимать следующие символические значения:</para>
                  <itemizedlist spacing="compact">
                    <listitem>
                      <para>fb_shut_preproviders: функция обратного вызова выполняется до остановки сервера</para>
                    </listitem>
                    <listitem>
                      <para>fb_shut_postproviders: функция обратного вызова выполняется после остановки сервера</para>
                    </listitem>
                    <listitem>
                      <para>Сочетание этих параметров</para>
                    </listitem>
                  </itemizedlist>
                  <note>
                    <title>Значения для маски вызова</title>
                    <variablelist>
                      <varlistentry>
                        <term>fb_shut_confirmation</term>
                        <listitem>
                          <para>Сервер запросит подтверждение готовности к остановке</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>fb_shut_preproviders</term>
                        <listitem>
                          <para>Операции дожны быть выполнены до остановки сервера</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>fb_shut_postproviders</term>
                        <listitem>
                          <para>Операции дожны быть выполнены после остановки сервера</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>fb_shut_finish</term>
                        <listitem>
                          <para>Заключительная очистка</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para>Возврат ненулевого значения при fb_shut_confirmation
                    (без флага fb_shut_preproviders) означает, что остановка
                    сервера не будет выполняться.</para>
                  </note>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>argument (void* arg)</term>
                <listitem>
                  <para>Это параметр для передачи функции <command>callback_function</command>.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section><!-- sect4 -->

          <section id="rnfb25-apiods-api-shtdn01c"><!-- Level 4 section -->
            <title>Использование функции fb_shutdown</title>
            <para>Ниже приводится пример остановки сервера и вызова функции
            обратного вызова для защиты от некорректного завершения программы
            при наличии активных соединений по нажатию комбинации клавиш Ctrl-C.</para>

            <programlisting>
#include &lt;ibase.h&gt;

// callback function for shutdown
static int ignoreCtrlC(const int reason, const int, void*)
{
  return reason == fb_shutrsn_signal ? 1 : 0;
}

int main(int argc, char *argv[])
{
        ISC_STATUS_ARRAY status;
        if (fb_shutdown_callback(status, ignoreCtrlC, fb_shut_confirmation, 0))
  {
    isc_print_status(status);
    return 1;
  }
  // другой прикладной код
}
            </programlisting>
          </section><!-- sect4 -->
        </section><!-- sect3 -->
        <section id="rnfb25-apiods-api-shtdn02"><!-- Level 3 section -->
          <title>Новые константы isc_spb_prp_* для функции Shutdown</title>
          <para>Services API поддерживает новые параметры команды и режимы выключения
          (shutdown) базы данных с помощью констант <command>isc_spb_prp_*</command>.</para>

          <section id="rnfb25-apiods-api-shtdn02a"><!-- Level 4 section -->
            <title>isc_spb_prp_shutdown_mode и isc_spb_prp_online_mode</title>
            <para>Эти команды используются для выключения (shutdown) и включения
            (bring online) базы данных и принимают на вход однобайтовые параметры,
            указывающие режим выключения базы данных, аналогично параметрам
            команды <command>gfix -shut</command>:</para>

            <itemizedlist>
              <listitem>
                <para>isc_spb_prp_sm_normal</para>
              </listitem>
             <listitem>
                <para>isc_spb_prp_sm_multi</para>
              </listitem>
              <listitem>
                <para>isc_spb_prp_sm_single</para>
              </listitem>
              <listitem>
                <para>isc_spb_prp_sm_full</para>
              </listitem>
            </itemizedlist>

            <para>При выключении базы данных также необходимо задать тип операции:</para>

            <itemizedlist>
              <listitem>
                <para>isc_spb_prp_force_shutdown</para>
              </listitem>
             <listitem>
                <para>isc_spb_prp_attachments_shutdown</para>
              </listitem>
              <listitem>
                <para>isc_spb_prp_transactions_shutdown</para>
              </listitem>
            </itemizedlist>

            <para>После типа операции указывается 4-х байтовый (integer) параметр,
            определяющий задержку (в секундах) при выполнении операции.</para>

            <note>
              <para>Старый формат команд также поддерживается и может использоваться
              с режимами по умолчанию - выключения  (режим 'multi') и включения ('normal').</para>
            </note>
          </section><!-- sect4 -->

          <!-- reverting to the Level 3 section -->
          <para><emphasis role="bold">Примеры использования</emphasis></para>
          <para>Ниже приводятся несколько примеров использования новых параметров
          утилиты fbsvmgr. Предполагается, что авторизация уже выполнена. Примеры
          надо набирать одной строкой.</para>

          <variablelist>
            <varlistentry>
              <term>Выключение базы данных и перевод в однопользовательский режим доступа:</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_properties dbname employee
    prp_shutdown_mode prp_sm_single prp_force_shutdown 0
                </literallayout>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Выключение базы данных и перевод в многопользовательский режим доступа:</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_properties dbname employee
    prp_online_mode prp_sm_multi
                </literallayout>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Запрет на новые соединения и полное выключение базы данных через 60 секунд:</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_properties dbname employee
    prp_shutdown_mode prp_sm_full prp_attachments_shutdown 60
                </literallayout>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Возврат базы данных в нормальное состояние:</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_properties dbname employee
    prp_online_mode prp_sm_normal
                </literallayout>
              </listitem>
            </varlistentry>
          </variablelist>
        </section><!-- sect3 -->
      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-tighter"><!-- Level 2 section -->
        <sectioninfo>
          <title>Более жесткий контроль изменения заголовка базы данных</title>
            <author><firstname>Александр</firstname><surname>Пешков</surname></author>
        </sectioninfo>
        <para>Для закрытия опасных лазеек несколько параметров DPB были сделаны
        недоступными обычным пользователям. Это параметры, меняющие заголовок
        базы данных, и которые потенциально могут повредить ее, если выполняются
        не под контролем администратора, и параметры, инициирующие операции,
        разрешенные только для пользователя SYSDBA:</para>
      <itemizedlist>
        <listitem>
          <para>isc_dpb_shutdown и isc_dpb_online</para>
        </listitem>
        <listitem>
          <para>isc_dpb_gbak_attach, isc_dpb_gfix_attach и isc_dpb_gstat_attach</para>
        </listitem>
        <listitem>
          <para>isc_dpb_verify</para>
        </listitem>
        <listitem>
          <para>isc_dpb_no_db_triggers</para>
        </listitem>
        <listitem>
          <para>isc_dpb_set_db_sql_dialect</para>
        </listitem>
        <listitem>
          <para>isc_dpb_sweep_interval</para>
        </listitem>
        <listitem>
          <para>isc_dpb_force_write</para>
        </listitem>
        <listitem>
          <para>isc_dpb_no_reserve</para>
        </listitem>
        <listitem>
          <para>isc_dpb_set_db_readonly</para>
        </listitem>
        <listitem>
          <para>isc_dpb_set_page_buffers (для архитектуры SuperServer)</para>
        </listitem>
      </itemizedlist>

      <para>Параметр <filename>isc_dpb_set_page_buffers</filename> может использоваться
      обычным пользователем в архитектуре Classic Server для установки временного
      размера страничного буфера для текущего соединения. При использовании его
      пользователем SYSDBA во всех архитектурах размер страничного буфера записывается
      в заголовок базы данных, т.е. устанавливается его новый постоянный размер.</para>
      <important>
        <title>Важное замечание для разработчиков и пользователей драйверов доступа к данным и приложений</title>
          <para>Это изменение затронуло все перечисленные параметры DPB, значения
          которых были явно установлены (включением в DPB по умолчанию или настройкой
          на уровне приложения). Например, приложение с параметрами подключения
          к базе данных 'RESERVE PAGE SPACE=TRUE' и 'FORCED WRITES=TRUE' корректно
          работало с Firebird до версий 1.5.6, 2.0.5 и 2.1.2, но теперь при соединении
          обычных (не-SYSDBA) пользователей с ошибкой ISC ERROR CODE 335544788,
          <quote>Unable to perform operation. You must be either SYSDBA or owner
          of the database.</quote></para>
        </important>
      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-svctrace"><!-- Level 2 section -->
        <sectioninfo>
          <title>Новые сервисы трассировки</title>
            <author><firstname>Владислав</firstname><surname>Хорсун</surname></author>
        </sectioninfo>
        <para>В Services Manager были добавлены пять новых сервисов для управления
        сессиями трассировки, каждому соответствует функция Services API.</para>

        <section id="rnfb25-apiods-api-svctrace-start"><!-- Level 3 section -->
          <title>isc_action_svc_trace_start</title>
          <para>Начинает сессию трассировки</para>
          <para><emphasis role="bold">Параметры:</emphasis></para>
          <literallayout class="monospaced">
  isc_spb_trc_name : имя сессии трассировки, строка, необязателен
  isc_spb_trc_cfg  : конфигурация сессии трассировки, строка, обязателен
          </literallayout>
          <para>Второй параметр содержит строку с текстом конфигурации сессии.
          Файл <filename>fbtrace.conf</filename> находится в корневом каталоге
          Firebird и содержит шаблон конфигурации (с комментариями и описанием
          синтаксиса и правил).</para>
          <note>
            <orderedlist>
              <listitem>
                <para>В отличие от сессий системного аудита, сессии пользовательской
                трассировки не читают конфигурацию из файла. Разработчик приложения
                самостоятельно отвечает за корректность текста конфигурации, его
                сохранение и загрузку.</para>
              </listitem>
              <listitem>
                <para>Лишние пробелы в строке игнорируются.</para>
              </listitem>
            </orderedlist>
          </note>
          <para><emphasis role="bold">Вывод:</emphasis></para>
          <itemizedlist>
            <listitem>
              <para>Текстовое сообщение рапортует о статусе операции:</para>
              <literallayout class="monospaced">
  Can not start trace session. There are no trace plugins loaded
              </literallayout>
              <para>или</para>
              <literallayout class="monospaced">
  Trace session ID NNN started
              </literallayout>
            </listitem>
            <listitem>
              <para>Во втором случае вслед за сообщением начнут выводиться результаты трассировки.</para>
            </listitem>
          </itemizedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-svctrace-stop"><!-- Level 3 section -->
          <title>isc_action_svc_trace_stop</title>
          <para>Остановка запущенной сессии трассировки</para>
          <para><emphasis role="bold">Параметры:</emphasis></para>
          <literallayout class="monospaced">
  isc_spb_trc_id : ID сессии трассировки, integer, обязателен
          </literallayout>
          <para><emphasis role="bold">Вывод:</emphasis></para>
          <para>Текстовое сообщение со статусом операции:</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>Trace session ID NNN stopped</para>
            </listitem>
            <listitem>
              <para>No permissions to stop other user trace session</para>
            </listitem>
            <listitem>
              <para>Trace session ID NNN not found</para>
            </listitem>
          </itemizedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-svctrace-suspend"><!-- Level 3 section -->
          <title>isc_action_svc_trace_suspend</title>
          <para>Приостанавливает активную сессию трассировки</para>
          <para><emphasis role="bold">Параметры:</emphasis></para>
          <literallayout class="monospaced">
  isc_spb_trc_id : ID сессии трассировки, integer, обязателен
          </literallayout>
          <para><emphasis role="bold">Вывод:</emphasis></para>
          <para>Текстовое сообщение со статусом операции:</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>Trace session ID NNN paused</para>
            </listitem>
            <listitem>
              <para>No permissions to change other user trace session</para>
            </listitem>
            <listitem>
              <para>Trace session ID NNN not found</para>
            </listitem>
          </itemizedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-svctrace-resume"><!-- Level 3 section -->
          <title>isc_action_svc_trace_resume</title>
          <para>Возобновляет приостановленную сессию трассировки</para>
          <para><emphasis role="bold">Параметры:</emphasis></para>
          <literallayout class="monospaced">
  isc_spb_trc_id : ID сессии трассировки, integer, обязателен
          </literallayout>
          <para><emphasis role="bold">Вывод:</emphasis></para>
          <para>Текстовое сообщение со статусом операции:</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>Trace session ID NNN resumed</para>
            </listitem>
            <listitem>
              <para>No permissions to change other user trace session</para>
            </listitem>
            <listitem>
              <para>Trace session ID NNN not found</para>
            </listitem>
          </itemizedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-svctrace-list"><!-- Level 3 section -->
          <title>isc_action_svc_trace_list</title>
          <para>Список существующих сессий трассировки</para>
          <para><emphasis role="bold">Параметров не имеет.</emphasis></para>
          <para><emphasis role="bold">Вывод:</emphasis></para>
          <para>Текстовое сообщение показывает список сессий трассировкии и их состояние:</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>Session ID: &lt;число&gt;</para>
            </listitem>
            <listitem>
              <para>name:  &lt;строка&gt;.  Выводит имя сессии, если оно не пустое</para>
            </listitem>
            <listitem>
              <para>user:  &lt;строка&gt;.  Выводит имя пользователя, запустившего сессию</para>
            </listitem>
            <listitem>
              <para>date:  YYYY-MM-DD HH:NN:SS, Дата и время старта сессии</para>
            </listitem>
            <listitem>
              <para>flags: &lt;строка&gt;, набор флагов через запятую:</para>
              <variablelist>
                <varlistentry>
                  <term>active | suspend</term>
                  <listitem>
                    <para>Состояние запущенной сессии.</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>admin</term>
                  <listitem>
                    <para>Выводит <quote>admin</quote>, если сессию запустил администратор.
                    Для сессий, созданных обычными пользователями, ничего не выводит.</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>system</term>
                  <listitem>
                    <para>Показывает <quote>system</quote>, если сессия создана
                    сервером (сессия системного аудита). Отсутствует для сессий
                    пользовательской трассировки.</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>audit | trace</term>
                  <listitem>
                    <para>Показывает тип сессии: <quote>audit</quote> для сессий системного
                    аудита или <quote>trace</quote> для сессий пользовательской трассировки.</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>log full</term>
                  <listitem>
                    <para>Выводится для сессий трассировки, если файл лога достиг предела.</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </itemizedlist>

          <note>
            <para>Вывод каждого сервиса может быть получен с помощью вызова
            isc_service_query с параметром isc_info_svc_line или isc_info_svc_to_eof.</para>
          </note>
        </section><!-- sect3 -->

      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-spbadds"><!-- Level 2 section -->
        <sectioninfo>
          <title>Другие дополнения Services API</title>
            <author><firstname>Александр</firstname><surname>Пешков</surname></author>
        </sectioninfo>

        <section id="rnfb25-apiods-api-spbadminmapping"><!-- Level 3 section -->
          <title>Использование роли RDB$ADMIN Role в Services API</title>
          <para>В SPB (Services Parameter Block - блок параметров сервиса) были
          добавлены два параметра для предоставления и лишения пользователей
          Windows прав на роль <link linkend="rnfb25-prvlgs">RDB$ADMIN</link>
          в базе данных пользователей <emphasis>security2.fdb</emphasis>.</para>

          <note>
            <para>Эта возможность также доступна с помощью нового параметра
            <command>-mapping</command> утилиты <link linkend="rnfb25-util-gsec">gsec</link>.</para>
          </note>
          <section id="rnfb25-apiods-api-spbadminmapping01"><!-- Level 4 section -->
            <title>Флаг isc_action_svc_set_mapping</title>
            <para>Выдает права на роль RDB$ADMIN указанному пользователю Windows
            в базе данных пользователей <emphasis>security2.fdb</emphasis>.</para>
          </section><!-- sect4 -->

          <section id="rnfb25-apiods-api-spbadminmapping02"><!-- Level 4 section -->
            <title>Флаг isc_action_svc_drop_mapping</title>
            <para>Забирает права на роль RDB$ADMIN у указанного пользователя 
            Windows в базе данных пользователей <emphasis>security2.fdb</emphasis>.</para>
          </section><!-- sect4 -->
        </section><!-- sect3 -->
        
        <section id="rnfb25-apiods-api-spbadmingrant"><!-- Level 3 section -->
          <title>Параметр isc_spb_sec_admin</title>
          <para>Новый параметр <command>isc_spb_sec_admin</command> позволяет пользователю
          с правами SYSDBA предоставлять или лишать пользователей прав на роль RDB$ADMIN
          в базе данных пользователей (<emphasis>security2.fdb</emphasis>). Это позволяет
          дать другим пользователям (кроме SYSDBA) права на создание, изменение и удаление
          пользователей Firebird.</para>

          <para>Параметр <command>isc_spb_sec_admin</command> имеет тип spb_long
          и может принимать значение 0 (для REVOKE ADMIN ROLE) или любое ненулевое
          число (для GRANT ADMIN ROLE). Более подробная информация приведена в разделе 
          <link linkend="rnfb25-ddl-crtusr">CREATE/ALTER/DROP USER</link>.</para>
        </section>

        <section id="rnfb25-apiods-api-spbnotriggrs"><!-- Level 3 section -->
          <title>Флаг isc_spb_bkp_no_triggers</title>
          <para>Новый флаг SPB позволяет использовать в Services API параметр 
          <command>-nodbtriggers</command>, добавленный в утилиту gbak в версии
          2.1 для отключения триггеров базы данных во время резервного копирования 
          и восстановления базы данных. Он может использоваться в наборе
          необязательных параметров <command>isc_spb_options</command>.</para>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-spbnbackup"><!-- Level 3 section -->
          <title>Поддержка nBackup</title>
          <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1758">CORE-1758</ulink></para>
          <para>Утилита NBackup выполняет две логические группы операций: блокировку
          или разблокировку базы данных и ее резервное копирование или восстановление.
          Ранее блокировку и разблокировку базы данных можно было выполнять удаленно
          с помощью SQL-запроса ALTER DATABASE, теперь - еще и с помощью новых сервисов
          Services API:</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>isc_action_svc_nbak - инкрементальное резервное копирование</para>
            </listitem>
            <listitem>
              <para>isc_action_svc_nrest - инкрементальное восстановление базы данных</para>
            </listitem>
          </itemizedlist>
          <para>Параметры:</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>isc_spb_nbk_level - уровень резервного копирования (integer)</para>
            </listitem>
            <listitem>
              <para>isc_spb_nbk_file - имя файла для резервной копии (string)</para>
            </listitem>
            <listitem>
              <para>isc_spb_nbk_no_triggers - флаг отключения триггеров базы данных</para>
            </listitem>
          </itemizedlist>

          <para><emphasis role="bold">Примеры использования</emphasis></para>
          <para>Ниже приведены примеры использования новых параметров с утилитой 
          fbsvcmgr. Для простоты предполагается, что авторизация уже произведена.
          Примеры надо набирать одной строкой.</para>

          <variablelist>
            <varlistentry>
              <term>Создание резервной копии уровня 0:</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_nbak dbname employee
    nbk_file e.nb0 nbk_level 0
                </literallayout>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Создание резервной копии уровня  1:</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_nbak dbname employee
    nbk_file e.nb1 nbk_level 1
                </literallayout>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>Восстановление базы данных из этих файлов:</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_nrest dbname e.fdb
    nbk_file e.nb0 nbk_file e.nb1
               </literallayout>
              </listitem>
            </varlistentry>
          </variablelist>

        </section><!-- sect3 -->
        
        <section id="rnfb25-apiods-api-fixfss">
          <sectioninfo>
            <title>Параметры FIX_FSS_DATA и FIX_FSS_METADATA доступны в Services API</title>
            <author><firstname>Александр</firstname><surname>Пешков</surname></author>
          </sectioninfo>

          <para>Ссылка в трекере: <ulink url="http://tracker.firebirdsql.org/browse/CORE-2439">CORE-2439</ulink></para>
          <para>Функции FIX_FSS_DATA и FIX_FSS_METADATA, добавленные как ключи
          утилиты <command>gbak -restore</command> в 2.1 теперь доступны и как
          параметры команды <command>isc_action_svc_restore</command> в Services API.</para>
          <para>Новые флаги SPB: <command>isc_spb_res_fix_fss_data</command> и 
          <command>isc_spb_res_fix_fss_metadata</command>.</para>
        </section><!-- sect3 -->
      </section><!-- sect2 -->
      
      <section id="rnfb25-apiods-api-traceapi"><!-- Level 2 section -->
        <title>Новое API для трассировки</title>
        <para>Новое API для трассировки предоставляет набор хуков (обработчиков
        прерываний), которые выполнены как внешние плагины и могут вызываться
        сервером для отслеживания любых событий. API пока находится в стадии
        разработки и не документировано, т.к. может измениться в дальнейших субрелизах.</para>
        
        <para>Дополнительная информация находится в разделе
        <link linkend="rnfb25-trace-plugin">Плагины для трассировки</link>.</para>
      </section><!-- sect2 -->

    </section><!-- sect1 -->
  </chapter>
