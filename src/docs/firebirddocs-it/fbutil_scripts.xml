<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="fbutils-scripts" lang="it">
  <title>Script vari per Firebird su sistemi Linux/Unix</title>

  <titleabbrev>Vari script Linux/Unix</titleabbrev>

  <section id="fbutils-scripts-intro">
    <title>Introduzione</title>

    <para>Dopo aver installato correttamente Firebird, la directory <filename
    class="directory">/opt/firebird/bin</filename> conterrà alcuni utili
    script per la shell di Linux/Unix. Questo capitolo illustrerà i dettagli
    di questi script e come debbano essere usati.</para>

    <para>Ed ora iniziamo, abbiamo i seguenti script:</para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>changeDBAPassword.sh</para>
      </listitem>

      <listitem>
        <para>createAliasDB.sh</para>
      </listitem>

      <listitem>
        <para>fb_config</para>
      </listitem>

      <listitem>
        <para>changeRunUser.sh</para>
      </listitem>

      <listitem>
        <para>restoreRootRunUser.sh</para>
      </listitem>
    </itemizedlist>

    <note>
      <para>La lista sopra esposta è stata estratta dalla versione Firebird
      2.0.3 Super Server installata su un sistema Linux. Altre versioni di
      Unix o di Firebird possono avere script differenti. Al momento non sono
      in grado di identificare tutti le poteziali differenze tra tali
      versioni.</para>
    </note>
  </section>

  <section id="fbutils-scripts-dba-password">
    <title>Cambiare la password di SYSDBA</title>

    <para>Lo script <filename>changeDBAPassword.sh</filename> permette di
    cambiare la assword dell'amministratore di sistema SYSDBA e
    automaticamente di cambiarla in ogni script che ne fa riferimento. Lo
    script è eseguito in modalità non-interattiva come parte del processo di
    installazione per generare una password iniziale casuale la quale è
    memorizzata nel file
    <filename>/opt/firebird/SYSDBA.password</filename>.</para>

    <para>La password è di conseguenza usata nello startup script
    <filename>/etc/rc.d/init.d/firebird</filename>, il quale ha anche un link
    simbolico a <filename class="symlink">/etc/init.d/firebird</filename>.
    Anche il security database
    <filename>/opt/firebird/security2.fdb</filename> è aggioranto con la nuova
    password.</para>

    <caution>
      <para>Lo script deve essere eseguito come utente root, e, quando è
      seguito, changeDBAPassword.sh chiederà il prompt per la password
      corrente di SYSDBA e poi per la nuova password. Naturalmente entrambe
      queste password non appariranno sullo schermo mentre le digitate per
      questioni di sicurezza (in modo che nessuno dietro di voi possa
      sbirciare e rubarvi le password) mentre eseguite lo script.</para>

      <para>Dopo aver eseguito lo script, il file
      <filename>/opt/firebird/SYSDBA.password</filename> conterrà la password
      in chiaro, quindi fate in modo che tale file non sia leggibile da
      nessuno eccetto l'utente root.</para>
    </caution>

    <para>Il seguente esempio mostra come utilizzare lo script per cambiare la
    password di SYSDBA da 'masterkey' a 'biroguin' la quale essendo personale,
    dovrebbe essere meno facile indovinarla.</para>

    <screen># cd /opt/firebird/bin
# ./changeDBAPassword.sh
Please enter current password for SYSDBA user : masterkey
Please enter new password for SYSDBA user : biroguin
GSEC&gt; GSEC&gt;

Running ed to modify /etc/init.d/firebird
#</screen>

    <caution>
      <para>Se si cambiasse la password dell'utente SYSDBA usando l'utility
      <application>gsec</application>, dovremmo cambiarla anche negli script
      di startup. Quindi consiglio, per assicurarsi di aggiornare ogni cosa
      correttamente, di usare sempre lo script per tale compito.</para>
    </caution>
  </section>

  <section id="fbutils-scripts-db-alias">
    <title>Creare alias di database</title>

    <para>Lo script <filename>createAliasDB.sh</filename> permette di creare
    in modo automatico sia fisicamente un database, sia un alias per lo stesso
    nel file di configurazione<filename>
    /opt/firebird/aliases.conf</filename>.</para>

    <note>
      <para>Lo script createAliasDB.sh deve essere eseguito come utente
      root.</para>
    </note>

    <para>Se il proprio sistema non è configurato correttamente, la creazione
    del database potrebbe fallire ma comunque l'alias sarebbe aggiunto al file
    aliases.conf. Questo potrebbe non permetterti di inserire correttamente
    l'alias, dato che lo script controlla che tu non sovrascriva un alias già
    esistente. Unica soluzione devi manualmente modificare il file degli alias
    e rimuovere l'elemento errato, ovvero senza collegamento ad un database
    fisico.</para>

    <para>Per inizializzare nuovi database, questi dovrebbero avere come
    proprietario l'utente firebird, e come gruppo il gruppo firebird. Il
    seguente esempio mostra come una nuova directory venga creata e impostata
    affinchè database Firebird possano essere creati correttamente.</para>

    <screen># cd /u01
# mkdir databases
# chown firebird:firebird databases
#</screen>

    <para>A questo punto la directory <filename>/u01/databases</filename> è
    disponibile per contenere uno o più database Firebird. Ovviamente,
    nell'esempio sopra riportato, la directory <filename
    class="directory">/u01</filename> è già esistente.</para>

    <section>
      <title>createAliasDB.sh Parameters</title>

      <para>Per eseguire lo script<filename> createAliasDP.sh</filename>,
      utilizzate la seguente sintassi:</para>

      <para><userinput># createAliasDB.sh &lt;new_alias&gt;
      &lt;database_name&gt;</userinput></para>

      <para>Lo script accetta due parametri, ed entrambi sono obbligatori
      :</para>

      <itemizedlist>
        <listitem>
          <para><userinput>new_alias</userinput></para>

          <para>Il primo parametro è il nome del nuovo alias che si vuole
          creare. Questo non deve già elistere nel file
          <filename>aliases.conf</filename>, o un errore verrà mostrato e
          nessuna operazione sarà eseguita.</para>
        </listitem>

        <listitem>
          <para><userinput>database_filename</userinput></para>

          <para>Il secondo parametro specifica il nome comprensivo del path
          completo del file di database. Se specificate un path relativo si
          potrebbero avere degli effetti non voluti durante le connessioni,
          quindi lo script rifiuterà ogni tentativo di utilizzarne uno di
          questo tipo invece che uno con il path completo.</para>

          <para>Un nuovo database vuoto verrà creato con il nome passato come
          secondo parametro, se questo non esiste. Se il database esiste verrà
          segnalato tramite messaggio di errore e verrà comunque creata la
          riga nel file alias.conf (naturalmente se non è già
          presente).</para>

          <!--TODO : Check that this is true !-->
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section id="fbutils-scripts-fb-config">
    <title>Un aiuto per i Makefiles</title>

    <para>Lo script <filename>fb_config</filename> deve essere utilizzato con
    i makefile per fornire tutte le impostazioni al compilatore, le quali
    devono essere dettagliate e specifiche per l'installazione che si sta
    utilizzando.</para>

    <note>
      <para>Questo script può essere eseguito da qualsiasi utente che abbia i
      privilegi di esecuzione. Non avete bisogno di essere root per utilizzare
      lo script.</para>
    </note>

    <section>
      <title>Opzioni di fb_config</title>

      <para>Per eseguire lo script <filename>fb_config</filename>, utilizzate
      la sintassi seguente:</para>

      <para><userinput>fb_config &lt;option&gt; [ &lt;option&gt;
      [...]]</userinput></para>

      <para>Lo script accetta uno o più opzioni come parametri alla linea di
      comando :</para>

      <itemizedlist>
        <listitem>
          <para><userinput>--help</userinput></para>

          <para>Questo parametro mostra la lista di tutte le opzioni
          disponibili.Non dovrebbe essere utilizzato assieme ad altri
          parametri.</para>
        </listitem>

        <listitem>
          <para><userinput>--cflags</userinput></para>

          <para>Questa opzione ritorna la lista delle directory dove i file
          include di Firebird sono memorizzati. Questo è richiesto dai
          compilatori dei linguaggi C e C++ per risolvere correttamente le
          direttive #include. Sul mio sistema, questa opzione mi restituisce
          '<computeroutput>-I/opt/firebird/include</computeroutput>'.</para>
        </listitem>

        <listitem>
          <para><userinput>--libs</userinput></para>

          <para>Questa opzione restituisce la lista delle directory dove le
          librerie di Firebird sono memorizzate e la lista delle librerie che
          sono necessarie al linker per creare un'applicazione Firebird client
          server. Questa opzione sul mio sistema restituisce
          '<computeroutput>-L/opt/firebird/lib
          -lfbclient</computeroutput>'.</para>
        </listitem>

        <listitem>
          <para><userinput>--embedlibs</userinput></para>

          <para>Questa opzione restituisce la lista delle directory dove le
          librerie di Firebird sono memorizzate e la lista delle librerie che
          sono necessarie al linker per creare un'applicazione Firebird
          embedded. Questa opzione sul mio sistema restituisce
          '<computeroutput>-L/opt/firebird/lib -lfbembed</computeroutput>'
          .</para>
        </listitem>

        <listitem>
          <para><userinput>--bindir</userinput></para>

          <para>Questa ozpione restituisce il path completo della directory
          <filename>/bin</filename> di Firebird. Sul mio sistema restituisce
          '<computeroutput>/opt/firebird/bin</computeroutput>' .</para>
        </listitem>

        <listitem>
          <para><userinput>--version</userinput></para>

          <para>Questa opzione restituisce la terza parte della stringa del
          pacchetto di Firebird indicante la versione. Tale stringa è
          punteggiata e cosi composta versione.packacge.architettura. Ad
          esempio sul mio server centOS restituisce .
          '<computeroutput>2.0.3.12981-1.i686</computeroutput>'.</para>
        </listitem>
      </itemizedlist>

      <para>Le righe seguenti sono un esempio di come nel makefile si possano
      definire due macro, FBFLAGS e FBLIBS, e la loro inizializzazione al
      corretto valore utilizzando lo script fb_config. Si noti l'uso del
      carattere back tick (`) e non del singolo apice (').</para>

      <programlisting>...
FBFLAGS = `fb_config --cflags`
FBLIBS = `fb_config --libs`
...</programlisting>
    </section>
  </section>

  <section id="fbutils-scripts-run-user">
    <title>Come cambiare l'utente che esegue il Server Firebird</title>

    <titleabbrev>Cambiare l'utente che esegue il Server</titleabbrev>

    <para>Ci sono due versioni dello script
    <filename>changeRunUser.sh</filename>, quella con il prefisso 'SS' si deve
    utilizzare con l'installazione Super Server l'altra con il prefisso 'CS' è
    per l'installazione di un Classic Server. Scendiamo ora in dettaglio solo
    della versione per Super Server.</para>

    <note>
      <para>Lo script dovrebbe essere eseguito come root.</para>
    </note>

    <para>Lo script <filename>SSchangeRunUser.sh</filename> permette di
    cambiare il gruppo e l'utente utilizzato per l'esecuzione del Super
    Server. Per ora il gruppo e l'utente di default è firebird, comunque,
    nelle versioni precedenti il server Firebird veniva eseguito come utente
    root il quale non era una buona idea per questioni di sicurezza e
    permetteva di creare database in tutto il file system. Con il nuovo utente
    firebird, possono essere applicate all'utente restrizioni su dove i
    database possono essere creati.</para>

    <para>Lo script cambia utente e gruppo in un buon numero di file presenti
    nella directory di installazione di Firebird, i file di log e anche lo
    script di startup <filename>/etc/rc.d.init.d/firebird</filename> il quale
    è usato per far partire e fermare il server Firebird.</para>

    <section>
      <title>Parametri di SSchangeRunUser.sh</title>

      <para>Lo script utilizza la sintassi seguente:</para>

      <para><userinput>SSchangeRunUser.sh &lt;username&gt;
      &lt;groupname&gt;</userinput></para>

      <para>Lo script accetta due parametri alla linea di comando, entrambi i
      quali sono opzionali, ma ti verranno richiesti al promt se verranno
      omessi. Se si fornisce solo un parametro lo script suppone che sia lo
      username e quindi sarà richiesto di inserire al prompt il nome del
      gruppo.</para>

      <itemizedlist>
        <listitem>
          <para><userinput>username</userinput></para>

          <para>Questo parametro imposta il nome dell'utente con il quale si
          eseguirà il Super Server. L'argomento fornito è validato con i
          valori contenuti in <filename>/etc/passwd</filename>.</para>
        </listitem>

        <listitem>
          <para><userinput>groupname</userinput></para>

          <para>Questo parametro imposta il nome del gruppo con il quale si
          eseguirà il Super Server. L'argomento fornito è validato con i
          valori contenuti in <filename>/etc/group</filename>.</para>
        </listitem>
      </itemizedlist>

      <para>L'esempio seguente mostra l'utilizzo dello script
      <filename>SSchangeRunUser.sh</filename> tper cambiare l'utente e il
      gruppo con firebird. L'utente firebird e il gruppo sono attualmente
      utilizzati come valori di default durante l'installazione e quindi non è
      necessario che voi li impostate con tali valori, a meno che non abbiate
      già cambiato tali valori con qualcosa d'altro precedentemente.</para>

      <screen># cd /opt/firebird/bin
# ./SSchangeRunUser.sh firebird firebird
Updating /opt/firebird
Updating startup script
Completed
#</screen>
    </section>
  </section>

  <section id="fbutils-scripts-root-user">
    <title>Ripristinare l'utente che esegue il Server Firebird Server a
    root</title>

    <titleabbrev>Ripristinare root come utente che esegue il
    Server</titleabbrev>

    <para>Sono disponibili due versioni dello script<filename>
    restoreRootRunUser.sh</filename> script. Quello con il prefisso 'SS' è per
    un installazione con Super Server e quello con il prefisso CS' per le
    installazioni con il Classic Server. Le seguenti righe descrivono solo la
    versione per Super Server.</para>

    <note>
      <para>Lo script deve essere eseguito come root.</para>
    </note>

    <para>Questo script semplicemente ripristina il vecchio modello di
    installazione linux impostando come utente e gruppo che esegue il server
    l'utente root. Questo script semplicemente sfrutta lo script
    <filename>SSchangeRunUser.sh</filename>, passandogli root sia come utente
    che come nome del gruppo.</para>
  </section>

  <section id="fbutils-scripts-symlink">
    <title>Eseguire applicazioni Embedded o Client Server</title>

    <titleabbrev>Eseguire applicazioni Embedded o Client-Server</titleabbrev>

    <para>Lo script <filename>changeGdsLibraryCompatibleLink.sh</filename>, è
    disponibile <emphasis>solo</emphasis> per le installazioni di Classic
    Server, ed è usato per cambiare il link simbolico alla libreria symlink
    <filename class="symlink">libgds.so</filename> verso la corretta libreria
    a seconda dell'installazione. Esistono due possibili librerie alle quali è
    possibile collegarsi simbolicamente:</para>

    <itemizedlist>
      <listitem>
        <para><filename
        class="libraryfile">/opt/firebird/lib/libfbclient.so</filename> per le
        applicazioni client server</para>
      </listitem>

      <listitem>
        <para><filename
        class="libraryfile">/opt/firebird/lib/libfbembed.so</filename> per le
        applicazioni embedded.</para>
      </listitem>
    </itemizedlist>

    <para>Dopo l'installazione, il link simbolico <filename
    class="symlink">libgds.so</filename> per default punta alla libreria
    client server così se stai eseguendo un applicazione embedded, devi
    eseguire lo script per fare in modo che <filename
    class="symlink">libgds.so</filename> punti invece alla libreria
    embedded.</para>

    <note>
      <para>Lo script deve essere eseguito come root.</para>
    </note>

    <para>L'esempio seguente mostra come questo script è utilizzato per
    cambiare da un utilizzo embedded ad una client-server:</para>

    <screen># cd /opt/firebird/bin
# ./changeGdsCompatibleLibraryLink.sh
For classic server there are two optional backward compatible client
libraries. These are libfbclient.so and libfbembed.so.

libfbclient.so) enables your client to be multithreaded but must
                connect to a database via a server.
libfbembed.so)  allows the client to directly open the database file,
                but does not support multithreaded access

Your current setting is:
/usr/lib/libgds.so -&gt; /opt/firebird/lib/libfbembed.so

Which option would you like to choose (client|embed|remove) 
                                                       [client] client
#</screen>

    <para>L'impostazione di default è <userinput>client</userinput> la quale
    creerà il link simbolico alla libreria client server,
    <userinput>embed</userinput> creerà un link simbolico al server embedded,
    <userinput>remove</userinput> rimuoverà il link simbolico.</para>

    <para>Lo script non ritorna nessun messaggio per informarti della corretta
    esecuzione; comunque, se lo esegui ancora con gli stessi parametri, ti
    avviserà che sarebbe meglio cambiare i parametri impostati perchè sono già
    quelli della configurazione presente.</para>
  </section>
</chapter>