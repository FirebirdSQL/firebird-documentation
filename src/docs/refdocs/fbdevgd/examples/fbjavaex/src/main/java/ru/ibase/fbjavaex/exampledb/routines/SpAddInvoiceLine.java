/*
 * This file is generated by jOOQ.
*/
package ru.ibase.fbjavaex.exampledb.routines;


import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;

import ru.ibase.fbjavaex.exampledb.DefaultSchema;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpAddInvoiceLine extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = -1123527483;

    /**
     * The parameter <code>SP_ADD_INVOICE_LINE.INVOICE_ID</code>.
     */
    public static final Parameter<Integer> INVOICE_ID = createParameter("INVOICE_ID", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>SP_ADD_INVOICE_LINE.PRODUCT_ID</code>.
     */
    public static final Parameter<Integer> PRODUCT_ID = createParameter("PRODUCT_ID", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>SP_ADD_INVOICE_LINE.QUANTITY</code>.
     */
    public static final Parameter<Integer> QUANTITY = createParameter("QUANTITY", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public SpAddInvoiceLine() {
        super("SP_ADD_INVOICE_LINE", DefaultSchema.DEFAULT_SCHEMA);

        addInParameter(INVOICE_ID);
        addInParameter(PRODUCT_ID);
        addInParameter(QUANTITY);
    }

    /**
     * Set the <code>INVOICE_ID</code> parameter IN value to the routine
     */
    public void setInvoiceId(Integer value) {
        setValue(INVOICE_ID, value);
    }

    /**
     * Set the <code>PRODUCT_ID</code> parameter IN value to the routine
     */
    public void setProductId(Integer value) {
        setValue(PRODUCT_ID, value);
    }

    /**
     * Set the <code>QUANTITY</code> parameter IN value to the routine
     */
    public void setQuantity(Integer value) {
        setValue(QUANTITY, value);
    }
}
