<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><object type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="alink name" value="$topicid_Fbodbc205-events-listener"></object>
<script type="text/javascript" src="helpman_topicinit.js"></script>

   <title>Priming the Driver to Listen for Events</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#649CCC">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Priming the Driver to Listen for Events</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="fbodbc205.htm">Top</a>&nbsp;
     <a href="fbodbc205_events.htm">Previous</a>&nbsp;
     <a href="fbodbc205_services.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table cellspacing="2" cellpadding="1" border="0" style="border: none; border-spacing:2px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="middle" bgcolor="#f0f0f0" style="background-color:#f0f0f0;"><p><span style="font-family: 'Verdana'; color: ;">Firebird Documentation Index</span><span style="font-family: 'Verdana'; color: #000000;"> &#8594; <a href="fbodbc205.htm">Firebird ODBC/JDBC Driver Manual</a> &#8594; <a href="fbodbc205_events.htm">Firebird Events</a> &#8594; Priming the Driver to Listen for Events</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="top"><br>
</td>
</tr>
</table>
</div>
<p style="margin: 19px 0px 19px 24px;"><a name="fbodbc205-events-listener"></a><span style="font-size: 14pt; font-family: 'Verdana'; font-weight: bold; color: #000000;">Priming the Driver to Listen for Events</span></p>
<p style="margin: 14px 0px 0px 24px;"><span style="font-family: 'Verdana'; color: #000000;">The first piece of setting up the driver to listen for events is to connect to an ODBC interface file that describes Firebird events processing:</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting" style="font-family: 'Courier New';">#include&nbsp;&quot;OdbcUserEvents.h&quot;</span></p>
<p style="margin: 24px 0px 0px 24px;"><span style="font-family: 'Verdana'; color: #000000;">Next, in the table </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">eventInfo</span><span style="font-family: 'Verdana'; color: #000000;">, we specify the events that we are interested in. For our example, the event 'new_order' is the only one we are interested in at this stage. The event 'change_order' is in the picture only to demonstrate the driver's ability to manage multiple events.</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">ODBC_EVENT_INFO&nbsp;eventInfo[]&nbsp;=</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">{</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;INIT_ODBC_EVENT(&quot;new_order&quot;),</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;INIT_ODBC_EVENT(&quot;change_order&quot;)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">};</span></p>
<p style="margin: 24px 0px 0px 24px;"><span style="font-family: 'Verdana'; color: #000000;">Now, we need to create a structure—which we will name </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">MyUniqueData</span><span style="font-family: 'Verdana'; color: #000000;">—to store the data tasks involved in our operation. In our example, a field </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">event_flag</span><span style="font-family: 'Verdana'; color: #000000;"> will signal an event delivered from the server. Our job starts from there.</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">struct&nbsp;</span><span class="f_programlisting">MyUniqueData</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">{</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;int&nbsp;event_flag;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;//...&nbsp;other&nbsp;define&nbsp;for&nbsp;use&nbsp;into&nbsp;astRoutine</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">};</span></p>
<p style="margin: 24px 0px 0px 24px;"><span style="font-family: 'Verdana'; color: #000000;">We need to create a callback function, </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">astRoutine</span><span style="font-family: 'Verdana'; color: #000000;">, which will be activated when events defined in the </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">eventInfo</span><span style="font-family: 'Verdana'; color: #000000;"> table are flagged:</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">void&nbsp;astRoutine(&nbsp;void&nbsp;*userEventsInterfase,&nbsp;short&nbsp;length,&nbsp;char&nbsp;*&nbsp;updated&nbsp;)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">{</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;PODBC_USER_EVENTS_INTERFASE&nbsp;userInterfase&nbsp;=&nbsp;(PODBC_USER_EVENTS_INTERFASE)userEventsInterfase;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;SQLSetConnectAttr(&nbsp;userInterfase-&gt;hdbc,&nbsp;SQL_FB_UPDATECOUNT_EVENTS,&nbsp;(SQLPOINTER)updated,&nbsp;SQL_LEN_BINARY_ATTR(&nbsp;length&nbsp;)&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;MyUniqueData&nbsp;&amp;myData&nbsp;=&nbsp;*(MyUniqueData*)userInterfase-&gt;userData;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;myData.event_flag++;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;printf(&nbsp;&quot;ast&nbsp;routine&nbsp;was&nbsp;called\n&quot;&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">}</span></p>
<p style="margin: 24px 0px 0px 24px;"><span style="font-family: 'Verdana'; color: #000000;">The function needs to have a call:</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;</span><span class="f_programlisting">&nbsp;SQLSetConnectAttr(&nbsp;userInterfase-&gt;hdbc,</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SQL_FB_UPDATECOUNT_EVENTS,</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(SQLPOINTER)updated,</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;</span><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SQL_LEN_BINARY_ATTR(&nbsp;length&nbsp;)&nbsp;);</span></p>
<p style="margin: 24px 0px 0px 24px;"><span style="font-family: 'Verdana'; color: #000000;">This call is needed for updating the state of events in our structure </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">eventInfo</span><span style="font-family: 'Verdana'; color: #000000;">. That structure has a field </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">countEvents</span><span style="font-family: 'Verdana'; color: #000000;"> that maintains a total of event operations and a Boolean field </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">changed</span><span style="font-family: 'Verdana'; color: #000000;"> that is set True when the 'before' and 'after' values of </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">countEvents</span><span style="font-family: 'Verdana'; color: #000000;"> are different.</span></p>
<p style="margin: 14px 0px 0px 24px;"><span style="font-family: 'Verdana'; color: #000000;">When we want to flag an event that we are interested in, we issue the command:</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting" style="font-family: 'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;myData.event_flag++;</span></p>
<p style="margin: 24px 0px 0px 24px;"><span style="font-family: 'Verdana'; color: #000000;">It provides a fairly primitive mechanism for synchronizing workflow, but it is sufficient for our needs. Its setup is as follows:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 46px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-family: 'Verdana'; color: #000000;">At connection time or when the DSN is being constructed, the </span><span style="font-size: 9pt; font-family: 'Verdana'; color: #000000;">NOWAIT</span><span style="font-family: 'Verdana'; color: #000000;"> option must be set to OFF</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 46px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-family: 'Verdana'; color: #000000;">The following statements need to be issued:</span></td></tr></table></div><p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;</span><span class="f_programlisting">Specify&nbsp;that&nbsp;the&nbsp;Firebird&nbsp;ODBC&nbsp;Cursor&nbsp;is&nbsp;always&nbsp;used,&nbsp;then&nbsp;connect.</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;SQLSetConnectAttr(&nbsp;hdbc,&nbsp;SQL_ATTR_ODBC_CURSORS,&nbsp;(SQLPOINTER)SQL_CUR_USE_DRIVER,&nbsp;0&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;SQLConnect</span><span class="f_programlisting">(&nbsp;hdbc,&nbsp;(UCHAR*)connectString,&nbsp;SQL_NTS,&nbsp;NULL,&nbsp;0,&nbsp;NULL,&nbsp;0&nbsp;);</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 14px 0px 0px 46px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-family: 'Verdana'; color: #000000;">For the purpose of our demonstration we need to prepare an SQL cursor request. Your own, real-life scenario would be less trivial, of course.</span></td></tr></table></div><p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_programlisting">SQLPrepare(&nbsp;stmtSel,&nbsp;(UCHAR*)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&quot;SELECT&nbsp;po_number&quot;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&quot;&nbsp;FROM&nbsp;sales&quot;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;WHERE&nbsp;order_status&nbsp;=&nbsp;'new'&quot;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&quot;&nbsp;FOR&nbsp;UPDATE&quot;,</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;SQL_NTS&nbsp;);</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 14px 0px 0px 46px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-family: 'Verdana'; color: #000000;">We'll construct the cursor query for our demo, naming it 'C':</span></td></tr></table></div><p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_programlisting">char&nbsp;*cursor&nbsp;=&nbsp;&quot;C&quot;;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;SQLSetCursorName(&nbsp;stmtSel,&nbsp;(UCHAR*)cursor,&nbsp;sizeof(&nbsp;cursor&nbsp;)&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;SQLPrepare(&nbsp;stmtUpd,&nbsp;(UCHAR*)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&quot;UPDATE&nbsp;sales&quot;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&nbsp;SET&nbsp;order_status&nbsp;=&nbsp;'open'&quot;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&quot;&nbsp;WHERE&nbsp;CURRENT&nbsp;OF&nbsp;C&quot;,</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_programlisting">&nbsp;&nbsp;&nbsp;SQL_NTS&nbsp;);</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 14px 0px 0px 46px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-family: 'Verdana'; color: #000000;">Initialize the structure </span><span style="font-size: 8pt; font-family: 'Courier New'; color: #000000;">ODBC_EVENTS_BLOCK_INFO</span><span style="font-family: 'Verdana'; color: #000000;"> as the events interface that is passed to the driver:</span></td></tr></table></div><p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;</span><span class="f_programlisting">&nbsp;myData.event_flag&nbsp;=&nbsp;0;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;ODBC_EVENTS_BLOCK_INFO&nbsp;eventsBlockInfo&nbsp;=&nbsp;INIT_EVENTS_BLOCK_INFO(&nbsp;hdbc,&nbsp;eventInfo,&nbsp;astRoutine,&nbsp;&amp;myData&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;SQLSetConnectAttr(&nbsp;hdbc,&nbsp;SQL_FB_INIT_EVENTS,&nbsp;(SQLPOINTER)&amp;eventsBlockInfo,&nbsp;SQL_LEN_BINARY_ATTR((int)sizeof(&nbsp;eventsBlockInfo&nbsp;))&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;to&nbsp;inform&nbsp;connection,&nbsp;that&nbsp;we&nbsp;are&nbsp;ready&nbsp;to&nbsp;accept&nbsp;events.</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="f_programlisting">SQLSetConnectAttr(&nbsp;hdbc,&nbsp;SQL_FB_REQUEUE_EVENTS,&nbsp;(SQLPOINTER)NULL,&nbsp;0&nbsp;);</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 14px 0px 0px 46px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="font-family: 'Verdana'; color: #000000;">Events begin ...</span></td></tr></table></div><p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;</span><span class="f_programlisting">&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;!iret&nbsp;)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;If&nbsp;the&nbsp;event&nbsp;was&nbsp;triggered,&nbsp;reset&nbsp;the&nbsp;buffer&nbsp;and&nbsp;re-queue</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;if&nbsp;(&nbsp;myData.event_flag&nbsp;)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;{</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myData.event_flag&nbsp;=&nbsp;0;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Check&nbsp;for&nbsp;first&nbsp;ast_call.&nbsp;&nbsp;isc_que_events&nbsp;fires</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;each&nbsp;event&nbsp;to&nbsp;get&nbsp;processing&nbsp;started</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;first&nbsp;)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first&nbsp;=&nbsp;0;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;//&nbsp;Select&nbsp;query&nbsp;to&nbsp;look&nbsp;at&nbsp;triggered&nbsp;events</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;ret&nbsp;=&nbsp;SQLExecute(&nbsp;stmtSel&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;for&nbsp;(;;)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;{</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;SQLFetch(&nbsp;stmtSel&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;ret&nbsp;==&nbsp;SQL_NO_DATA_FOUND&nbsp;)</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;break;</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;SQLExecute(&nbsp;stmtUpd&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;}</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Re-queue&nbsp;for&nbsp;the&nbsp;next&nbsp;event&nbsp;*/</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SQLSetConnectAttr(&nbsp;hdbc,&nbsp;SQL_FB_REQUEUE_EVENTS,&nbsp;(SQLPOINTER)NULL,&nbsp;0&nbsp;);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;This&nbsp;does&nbsp;not&nbsp;block,&nbsp;but&nbsp;as&nbsp;a&nbsp;sample&nbsp;program&nbsp;there&nbsp;is&nbsp;nothing</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**&nbsp;else&nbsp;for&nbsp;us&nbsp;to&nbsp;do,&nbsp;so&nbsp;we&nbsp;will&nbsp;take&nbsp;a&nbsp;nap</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sleep(1000);</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;}</span></p>
<p class="p_programlisting" style="padding: 1px 1px 1px 1px; margin: -1px -1px -1px 25px;"><span class="f_programlisting">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 14px 0px 0px 24px;"><table cellspacing="2" cellpadding="1" border="0" style="border: none; border-spacing:2px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="bottom" style="height:64px;"><p style="text-align: right;"><a href="fbodbc205_events.htm"><img src="prev-or18.png" width="30" height="30" border="0" alt="prev-or18"></a><a href="fbodbc205.htm#book-toc"><img src="toc-or18.png" width="30" height="30" border="0" alt="toc-or18"></a><a href="fbodbc205_events.htm"><img src="top-or18.png" width="30" height="30" border="0" alt="top-or18"></a><a href="fbodbc205_services.htm"><img src="next-or18.png" width="30" height="30" border="0" alt="next-or18"></a></p>
</td>
</tr>
</table>
</div>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 24px;"><table cellspacing="2" cellpadding="1" border="0" style="border: none; border-spacing:2px;">
<tr style="text-align:left;vertical-align:top;">
<td valign="top"><br>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td valign="middle" bgcolor="#f0f0f0" style="background-color:#f0f0f0;"><p><span style="font-family: 'Verdana'; color: #000000;">Firebird Documentation Index &#8594; <a href="fbodbc205.htm">Firebird ODBC/JDBC Driver Manual</a> &#8594; <a href="fbodbc205_events.htm">Firebird Events</a> &#8594; Priming the Driver to Listen for Events</span></p>
</td>
</tr>
</table>
</div>

</td></tr></table>

</body>
</html>
