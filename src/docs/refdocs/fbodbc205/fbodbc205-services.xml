<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="fbodbc205-services">
  <title>The Services Interface</title>
  <para>From the configuration page for your Firebird DSN on Windows you have
  access to a useful graphical management console that is built across the ODBC API 
  and Firebird's Services API.  It gives a database administrator on Windows a
  user-friendly way to run service utilities that would otherwise be run from 
  a command-line tool.  We are using it to introduce this chapter because the
  source code could be a useful resource for developers looking for ideas about
  including Services functions in their applications.</para>

  <section id="fbodbc205-svc-console">
    <title>Exploring the ODBC Services Console</title>
    <para>To use the console, open that configuration page and click the
    button in the centre, labelled <quote>Services</quote>:
      <figure id="fbodbc205-svc-launch">
        <title>Launching the Services UI on Windows</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 467px X 472px -->
            <imagedata fileref="images/fb_odbc_ClickServices.png" format="PNG"
             width="234px" depth="221px"
             scalefit="1" align="center" />  <!-- 50% -->
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>The console is a tabbed display providing access to many of the
    Services API functions, with the Backup tab on top.
      <figure id="fbodbc205-svc-backup">
        <title>Firebird ODBC Services console&#x2014;Backup tab</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 515px X 412px -->
            <imagedata fileref="images/fb_odbc_Backup.png" format="PNG"
             width="489px" depth="391px"
             scalefit="1" align="center" />  <!-- 95% -->
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>
      <figure id="fbodbc205-svc-restore">
        <title>Restore tab</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 515px X 412px -->
            <imagedata fileref="images/fb_odbc_Restore.png" format="PNG"
             width="489px" depth="391px"
             scalefit="1" align="center" />  <!-- 95% -->
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>
      <figure id="fbodbc205-svc-statistics">
      <title>Statistics tab</title>
      <mediaobject>
        <imageobject>
        <!-- actual image size is 515px X 412px -->
          <imagedata fileref="images/fb_odbc_Statistics.png" format="PNG"
           width="489px" depth="391px"
           scalefit="1" align="center" />  <!-- 95% -->
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>We selected <quote>Header pages</quote>, which produced the <code>gstat -h</code>
    report for our database.  Clicking on the <quote>View Log</quote> button delivers 
    the output to the browser:
      <figure id="fbodbc205-svc-statistics-log">
        <title>Statistics log</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 626px X 632px -->
            <imagedata fileref="images/fb_odbc_StatisticsLog.png" format="PNG"
             width="313px" depth="316px"
             scalefit="1" align="center" />  <!-- 50% -->
          </imageobject>
        </mediaobject>
      </figure>
    Of course, you can have any statistics report, the Firebird log, metadata reports
    and more.
    </para>

    <para>The Repair tab gives easy access to most of the <firstterm>gfix</firstterm>
    housekeeping functions:
      <figure id="fbodbc205-svc-repair">
        <title>Repair tab</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 515px X 412px -->
            <imagedata fileref="images/fb_odbc_Repair.png" format="PNG"
             width="489px" depth="391px"
             scalefit="1" align="center" />  <!-- 95% -->
          </imageobject>
        </mediaobject>
      </figure>
    </para>

    <para>The Users tab could be used to maintain accounts in the security database
    of any version of Firebird prior to V.3.0, although the Services API method was
    discouraged from V.2.5 onward.  The Services API method is still available to maintain
    users in Firebird 3 databases if they were defined using <code>Legacy_Auth</code>
    authentication management.  It will not work with users defined with the default
    <database>SRP</database> authentication manager.
      <figure id="fbodbc205-svc-users">
        <title>Users tab</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 515px X 412px -->
            <imagedata fileref="images/fb_odbc_Users.png" format="PNG"
             width="489px" depth="391px"
             scalefit="1" align="center" />  <!-- 95% -->
          </imageobject>
        </mediaobject>
      </figure>
      Click on the appropriate button to add, modify or delete a user.  Remember, the
      user performing these tasks must be SYSDBA or a user with elevated server
      privileges.  The role <database>RDB$ADMIN</database> is not sufficiently
      elevated.
    </para>
    <para>
      <figure id="fbodbc205-svc-user-add">
        <title>Add user</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 358px X 352px -->
            <imagedata fileref="images/fb_odbc_AddUser.png" format="PNG"
             width="179px" depth="176px"
             scalefit="1" align="center" />  <!-- 50% -->
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>
      <figure id="fbodbc205-svc-user-mod">
        <title>Modify user</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 358px X 352px -->
            <imagedata fileref="images/fb_odbc_ModifyUser.png" format="PNG"
             width="179px" depth="176px"
             scalefit="1" align="center" />  <!-- 50% -->
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <para>
      <figure id="fbodbc205-svc-user-del">
        <title>Delete user</title>
        <mediaobject>
          <imageobject>
          <!-- actual image size is 358px X 352px -->
            <imagedata fileref="images/fb_odbc_DeleteUser.png" format="PNG"
             width="179px" depth="176px"
             scalefit="1" align="center" />  <!-- 50% -->
          </imageobject>
        </mediaobject>
      </figure>
    </para>
    <section id="fbodbc205-show-log">
      <title>Showing Logs from the Interface</title>
      <para>If a log file is available from the execution of a Service API function, the
      <quote>View Log</quote> button will become active.   The UI provides it on demand
      in HTML format and opens it in your default browser.  If you wonder how to go about
      coding this into your own ODBC application, the source code is a resource
      that is freely available to you.</para>
    </section>
  </section>  <!-- fbodbc205-svc-console -->

  <section id="fbodbc205-using-svc-api">
    <title>Using the Services API</title>
    <para>The ODBC/JDBC driver wraps a great many of the Services API functions.  The
    management console built into the Windows DSN interface provides examples of most of
    them.  One thing you cannot do via the console is create databases.  Fear not! the
    driver has it wrapped!</para>

    <para>In the Connection chapter is a table of the keywords available to signify the
    values for attachments via Firebird's <quote>regular</quote> API.  The table below
    provides the keywords for the <code>KEYWORD=value</code> parameters for connecting
    to the server and launching a service request.  These are additional to the relevant
    connection parameters.  For some cases, the default settings from the DSN, if used,
    will be correct for Service requests.

    <table id="fbodbc205-svc-keywords-tbl">
    <?dbfo keep-together='auto'?>
      <title>Keywords for Service Request Attributes</title>
      <tgroup cols="3">
        <colspec colname="colKeyword" colwidth="*"></colspec>
        <colspec colname="colVerbose" colwidth="*"></colspec>
        <colspec colname="colMoreInfo" colwidth="3*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Keyword</entry>
            <entry align="center">Description</entry>
            <entry align="center">More Information</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left">BACKUPFILE</entry>
            <entry align="left">Backup file</entry>
            <entry align="left">This is a filesystem path and file name.  Unlike a database, a
            backup path can be a network storage address.</entry>
          </row>
          <row valign="middle">
            <entry align="left">LOGFILE</entry>
            <entry align="left">Path and name of the log file for the service</entry>
            <entry align="left">Optional; valid for any service that provides a log
            file option.  The same filesystem rules apply as for backup files.</entry>
          </row>
          <row valign="middle">
            <entry align="left">CREATE_DB</entry>
            <entry align="left">Create database</entry>
            <entry align="left">See the examples below for usage</entry>
          </row>
          <row valign="middle">
            <entry align="left">BACKUP_DB</entry>
            <entry align="left">Backup database</entry>
            <entry align="left">The path and name of the database backup file, for backups
            and restores.</entry>
          </row>
          <row valign="middle">
            <entry align="left">RESTORE_DB</entry>
            <entry align="left">The network path and name of the database to which a backup
            is to be restored.  This cannot be a network storage address.  The file name part
            can be an alias, provided the alias exists.</entry>
            <entry align="left">...</entry>
          </row>
          <row valign="middle">
            <entry align="left">REPAIR_DB</entry>
            <entry align="left">Repair database</entry>
            <entry align="left">Local path to the database to be repaired or validated.  Remote
            access is invalid.</entry>
          </row>
          <row valign="middle">
            <entry align="left">COMPACT_DB</entry>
            <entry align="left">Compact database</entry>
            <entry align="left">Not currently applicable to Firebird databases.</entry>
          </row>
          <row valign="middle">
            <entry align="left">DROP_DB</entry>
            <entry align="left">Drop database</entry>
            <entry align="left">Not currently applicable to Firebird databases.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    </para>

    <section id="fbodbc205-svc-examples">
      <title>Examples of Services Use</title>
      <para>The following samples show how to configure the various service requests.</para>
      <para><emphasis role="bold">Creating a Database</emphasis></para>
      <programlisting>
 SQLConfigDataSource( NULL,
                      ODBC_ADD_DSN,
                      &quot;Firebird/InterBase(r) driver&quot;,
                      &quot;ODBC\0&quot;
                      &quot;CREATE_DB = D:\\TestService\\test.fdb\0&quot;
                      &quot;DESCRIPTION = My Firebird database\0&quot;
                      &quot;UID         = SYSDBA\0&quot;
                      &quot;PWD         = masterkey\0&quot;
                      &quot;CHARSET     = NONE\0&quot;
                      &quot;PAGESIZE    = 8192\0&quot;
                      &quot;DIALECT     = 3\0&quot; );
      </programlisting>
      <para>More alternative examples for creating databases are at the
      end of this chapter.</para>

      <para><emphasis role="bold">Backing Up a Database</emphasis></para>
      <programlisting>
 SQLConfigDataSource( NULL,
                      ODBC_ADD_DSN,
                      &quot;Firebird/InterBase(r) driver&quot;,
                      &quot;ODBC\0&quot;
                      &quot;BACKUP_DB = D:\\TestService\\test.fdb\0&quot;
                      &quot;BACKUPFILE = D:\\TestService\\test.fbk\0&quot;
                      &quot;UID         = SYSDBA\0&quot;
                      &quot;PWD         = masterkey\0&quot; );

      </programlisting>

      <para><emphasis role="bold">Restoring a Database</emphasis></para>
      <programlisting>
 SQLConfigDataSource( NULL,
                      ODBC_ADD_DSN,
                      &quot;Firebird/InterBase(r) driver&quot;,
                      &quot;ODBC\0&quot;
                      &quot;RESTORE_DB = D:\\TestService\\testNew.fdb\0&quot;
                      &quot;BACKUPFILE = D:\\TestService\\test.fbk\0&quot;
                      &quot;LOGFILE = D:\\TestService\\test.log\0&quot;
                      &quot;UID         = SYSDBA\0&quot;
                      &quot;PWD         = masterkey\0&quot; );
      </programlisting>

      <para><emphasis role="bold">Repairing a Database</emphasis></para>
      <programlisting>
 SQLConfigDataSource( NULL,
                      ODBC_ADD_DSN,
                      &quot;Firebird/InterBase(r) driver&quot;,
                      &quot;ODBC\0&quot;
                      &quot;REPAIR_DB = D:\\TestService\\test.fdb\0&quot;
                      &quot;UID         = SYSDBA\0&quot;
                      &quot;PWD         = masterkey\0&quot; );
      </programlisting>

      <section id="fbodbc205-svc-more-examples">
        <title>More Ways to Create a Database</title>
        <para>Create a database using the ODBC API function <code>SQLConfigDataSource</code>.
        A convenient method for creating a database that is going to be managed by someone
        else.
          <programlisting>
 SQLConfigDataSource( NULL,
                      ODBC_ADD_DSN,
                      &quot;Firebird/InterBase(r) driver&quot;,
                      &quot;ODBC\0&quot;
                      &quot;CREATE_DB = D:\\TestService\\test.fdb\0&quot;
                      &quot;DESCRIPTION = My Firebird database\0&quot;
                      &quot;UID         = SYSDBA\0&quot;
                      &quot;PWD         = masterkey\0&quot;
                      &quot;CHARSET     = NONE\0&quot;
                      &quot;PAGESIZE    = 8192\0&quot;
                      &quot;DIALECT     = 3\0&quot; );
          </programlisting>
        </para>

        <para>Create a database using the ODBC API function <code>SQLDriverConnect</code>.
        Convenient when the job is going to be performed from a user application.
        The driver will handle errors and continue attempting to create the database
        until it eventually succeeds in connecting to it. Access is passed to the client
        upon success.
          <programlisting>
    UCHAR buffer[1024];
    SWORD bufferLength;
    SQLDriverConnect( connection, hWnd,
                      (UCHAR*)&quot;DRIVER=Firebird/InterBase(r) driver;&quot;
                      &quot;UID=SYSDBA;&quot;
                      &quot;PWD=masterkey;&quot;
                      &quot;PAGESIZE=8192;&quot;
                      &quot;DBNAMEALWAYS=C:\\Temp\\NewDB.fdb&quot;, SQL_NTS,
                      buffer, sizeof (buffer), &amp;bufferLength,
                      SQL_DRIVER_NOPROMPT );
          </programlisting>
        </para>
        <para>Create a database using the ODBC API function <code>SQLExecDirect</code>.
        This scenario is interesting in that the database is created within the context
        of an existing client connection.  It is not necessary therefore to include
        &quot;DRIVER=Firebird/InterBase (r) driver;&quot; in the call, since it will be
        taken from the current connection.</para>
        <para>As with the first method that used <code> SQLConfigDataSource</code>, the
        current user does not get management rights on the database created.  For that
        requirement, <code>SQLDriverConnect</code> should be used instead.
          <programlisting>
    SQLExecDirect( hStmt,
                   &quot;CREATE DATABASE \'C:/TEMP/NEWDB00.FDB\'&quot;
                   &quot;   PAGE_SIZE 8192&quot;
                   &quot;   SET NAMES \'NONE\'&quot;
                   &quot;   USER \'SYSDBA\'&quot;
                   &quot;   PASSWORD \'masterkey\';&quot;,
                   SQL_NTS );
          </programlisting>
        </para>
      </section> <!-- fbodbc205-svc-more-examples -->
    </section>    <!-- fbodbc205-svc-examples -->
  </section>   <!-- fbodbc205-using -->
</chapter>