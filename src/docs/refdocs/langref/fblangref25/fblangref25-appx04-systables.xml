<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../../../tools/docbook-dtd/docbookx.dtd">
<appendix id="fblangref25-appx04-systables">
  <title>System Tables</title>
  <para>When you create a database, the Firebird engine creates a lot of system
  tables. Metadata&mdash;the descriptions and attributes of all database objects&mdash;are 
  stored in these system tables.</para>
  <para>System table identifiers all begin with the prefix <database>RDB$</database>.</para>
  
  <table id="fblangref25-appx04-tbl-systables">
  <?dbfo keep-together='auto'?>
    <title>List of System Tables</title>
    <tgroup cols="2">
      <colspec colname="colTable" colwidth="2*"></colspec>
      <colspec colname="colDesc" colwidth="3*"></colspec>
      <thead>
        <row valign="middle">
          <entry align="center">System Table</entry>
          <entry align="center">Contents</entry>
        </row>
      </thead>
      <tbody>
        <row valign="middle">
          <entry align="left"><database>RDB$BACKUP_HISTORY</database></entry>
          <entry align="left">History of backups performed using <emphasis>nBackup</emphasis></entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$CHARACTER_SETS</database></entry>
          <entry align="left">Names and describes the character sets available in the database</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$CHECK_CONSTRAINTS</database></entry>
          <entry align="left">Cross references between the names of constraints
          (NOT NULL constraints, CHECK constraints and ON UPDATE and ON DELETE
          clauses in foreign key constraints) and their associated system-generated
          triggers</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$COLLATIONS</database></entry>
          <entry align="left">Collation sequences for all character sets</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$DATABASE</database></entry>
          <entry align="left">Basic information about the database</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$DEPENDENCIES</database></entry>
          <entry align="left">Information about dependencies between database objects</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$EXCEPTIONS</database></entry>
          <entry align="left">Custom database exceptions</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$FIELDS</database></entry>
          <entry align="left">Column and domain definitions, both system and custom</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$FIELD_DIMENSIONS</database></entry>
          <entry align="left">Dimensions of array columns</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$FILES</database></entry>
          <entry align="left">Information about secondary files and shadow files</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$FILTERS</database></entry>
          <entry align="left">Information about BLOB filters</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$FORMATS</database></entry>
          <entry align="left">Information about changes in the formats of tables</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$FUNCTIONS</database></entry>
          <entry align="left">Information about external functions</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$FUNCTION_ARGUMENTS</database></entry>
          <entry align="left">Attributes of the parameters of external functions</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$GENERATORS</database></entry>
          <entry align="left">Information about generators (sequences)</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$INDEX_SEGMENTS</database></entry>
          <entry align="left">Segments and index positions</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$INDICES</database></entry>
          <entry align="left">Definitions of all indexes in the database (system- or user-defined)</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$LOG_FILES</database></entry>
          <entry align="left">Not used in the current version</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$PAGES</database></entry>
          <entry align="left">Information about database pages</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$PROCEDURE_PARAMETERS</database></entry>
          <entry align="left">Parameters of stored procedures</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$PROCEDURES</database></entry>
          <entry align="left">Definitions of stored procedures</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$REF_CONSTRAINTS</database></entry>
          <entry align="left">Definitions of referential constraints (foreign keys)</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$RELATION_CONSTRAINTS</database></entry>
          <entry align="left">Definitions of all table-level constraints</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$RELATION_FIELDS</database></entry>
          <entry align="left">Top-level definitions of table columns</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$RELATIONS</database></entry>
          <entry align="left">Headers of tables and views</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$ROLES</database></entry>
          <entry align="left">Role definitions</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$SECURITY_CLASSES</database></entry>
          <entry align="left">Access control lists</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$TRANSACTIONS</database></entry>
          <entry align="left">State of multi-database transactions</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$TRIGGER_MESSAGES</database></entry>
          <entry align="left">Trigger messages</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$TRIGGERS</database></entry>
          <entry align="left">Trigger definitions</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$TYPES</database></entry>
          <entry align="left">Definitions of enumerated data types</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$USER_PRIVILEGES</database></entry>
          <entry align="left">SQL privileges granted to system users</entry>
        </row>
        <row valign="middle">
          <entry align="left"><database>RDB$VIEW_RELATIONS</database></entry>
          <entry align="left">Tables that are referred to in view definitions: one
          record for each table in a view</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <section id="fblangref-appx04-backuphistory">
    <title>RDB$BACKUP_HISTORY</title>
    <para><database>RDB$BACKUP_HISTORY</database> stores the history of backups performed using
    the <emphasis>nBackup</emphasis> utility.</para>
    <informaltable id="fblangref25-appx04-tbl-backuphistory" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$BACKUP_ID</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The identifier assigned by the engine</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TIMESTAMP</database></entry>
            <entry align="center"><database>TIMESTAMP</database></entry>
            <entry align="left">Backup date and time</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$BACKUP_LEVEL</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">Backup level</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$GUID</database></entry>
            <entry align="center"><database>CHAR(38)</database></entry>
            <entry align="left">Unique identifier</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SCN</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">System (scan) number</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FILE_NAME</database></entry>
            <entry align="center"><database>VARCHAR(255)</database></entry>
            <entry align="left">Full path and file name of backup file</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- RDB$BACKUP_HISTORY -->

  <section id="fblangref-appx04-charactersets">
    <title>RDB$CHARACTER_SETS</title>
    <para>RDB$CHARACTER_SETS names and describes the character sets available in the
    database.</para>
    <informaltable id="fblangref25-appx04-tbl-characterset" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$CHARACTER_SET_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Character set name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FORM_OF_USE</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$NUMBER_OF_CHARACTERS</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The number of characters in the set. Not used for existing character sets</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFAULT_COLLATE_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the default collation sequence for the character set</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CHARACTER_SET_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Unique character set identifier</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">System flag: value is 1 if the character set is defined in the
            system when the database is created; value is 0 for a user-defined character set</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store text description of the character set</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FUNCTION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">For a user-defined character set that is accessed via an
            external function, the name of the external function</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$BYTES_PER_CHARACTER</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The maximum number of bytes representing one character</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$character_sets -->

  <section id="fblangref-appx04-chkconstraints">
    <title>RDB$CHECK_CONSTRAINTS</title>
    <para>RDB$CHECK_CONSTRAINTS provides the cross references between the names of system-generated
    triggers for constraints and the names of the associated constraints (NOT NULL
    constraints, CHECK constraints and the ON UPDATE and ON DELETE clauses in foreign
    key constraints).</para>
    <informaltable id="fblangref25-appx04-tbl-chkconstraints" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$CONSTRAINT_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Constraint name,  defined by the user or automatically generated
            by the system</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TRIGGER_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">For a CHECK constraint, it is the name of the trigger that enforces
            this constraint. For a NOT NULL constraint, it is the name of the table the constraint
            is applied to. For a foreign key constraint, it is the name of the trigger that enforces
            the ON UPDATE, ON DELETE clauses</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$check_constraints -->

  <section id="fblangref-appx04-collations">
    <title>RDB$COLLATIONS</title>
    <para>RDB$COLLATIONS stores collation sequences for all character sets.</para>
    <informaltable id="fblangref25-appx04-tbl-collation" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$COLLATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Collation sequence name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$COLLATION_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Collation sequence identifier. Together with the character set identifier,
            it is a unique collation sequence identifier</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CHARACTER_SET_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Character set identifier. Together with the collection sequence identifier,
            it is a unique identifier</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$COLLATION_ATTRIBUTES</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Collation attributes. It is a bit mask where the first bit shows whether
            trailing spaces should be taken into account in collations (0 - NO PAD; 1 - PAD SPACE); the
            second bit shows whether the collation is case-sensitive (0 - CASE SENSITIVE, 1 - CASE
            INSENSITIVE); the third bit shows whether the collation is accent-sensitive (0 - ACCENT
            SENSITIVE, 1 - ACCENT SENSITIVE). Thus, the value of 5 means that the collation does not
            take into account trailing spaces and is accent-insensitive</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag: the value of 0 means it is user-defined; the value of 1 means it is
            system-defined</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store text description of the collation sequence</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FUNCTION_NAME</database></entry>
            <entry align="center"><database>	CHAR(31)</database></entry>
            <entry align="left">Not currently used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$BASE_COLLATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the base collation sequence for this collation sequence</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SPECIFIC_ATTRIBUTES</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Describes specific attributes</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$collations -->

  <section id="fblangref-appx04-database">
    <title>RDB$DATABASE</title>
    <para>RDB$DATABASE stores basic information about the database. It contains only one record.</para>
    <informaltable id="fblangref25-appx04-tbl-database" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Database comment text</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">A number that steps up by one each time a table 
            or view is added to the database</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SECURITY_CLASS</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The security class defined in RDB$SECURITY_CLASSES
            in order to apply access control limits common to the entire database</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CHARACTER_SET_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the default character set for the database set in
            the DEFAULT CHARACTER SET clause when the database is created. NULL for
            character set NONE.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$database -->

  <section id="fblangref-appx04-dependencies">
    <title>RDB$DEPENDENCIES</title>
    <para>RDB$DEPENDENCIES stores the dependencies between database objects.</para>
    <informaltable id="fblangref25-appx04-tbl-dependencies" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$DEPENDENT_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the view, procedure, trigger, CHECK constraint or computed
            column the dependency is defined for, i.e., the <emphasis>dependent</emphasis> object</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEPENDED_ON_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the object that the defined object&mdash;the table, view, procedure,
            trigger, CHECK constraint or computed column&mdash;depends on</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The column name in the depended-on object that is referred to by the
            dependent view, procedure, trigger, CHECK constraint or computed column</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database></database></entry>
            <entry align="center"><database></database></entry>
            <entry align="left"></entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEPENDENT_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Identifies the type of the dependent object:
              <simplelist type="horiz" columns="1">
                <member>0 - table</member>
                <member>1 - view</member>
                <member>2 - trigger</member>
                <member>3 - computed column</member>
                <member>4 - CHECK constraint</member>
                <member>5 - procedure</member>
                <member>6 - index expression</member>
                <member>7 - exception</member>
                <member>8 - user</member>
                <member>9 - column</member>
                <member>10 - index</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEPENDED_ON_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Identifies the type of the object depended on:
              <simplelist type="horiz" columns="1">
                <member>0 - table (or a column in it)</member>
                <member>1 - view</member>
                <member>2 - trigger</member>
                <member>3 - computed column</member>
                <member>4 - CHECK constraint</member>
                <member>5 - procedure (or its parameter[s])</member>
                <member>6 - index expression</member>
                <member>7 - exception</member>
                <member>8 - user</member>
                <member>9 - column</member>
                <member>10 - index</member>
                <member>14 - generator (sequence)</member>
                <member>15 - UDF</member>
                <member>17 - collation</member>
              </simplelist>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$dependencies -->

  <section id="fblangref-appx04-exceptions">
    <title>RDB$EXCEPTIONS</title>
    <para>RDB$EXCEPTIONS stores custom database exceptions.</para>
    <informaltable id="fblangref25-appx04-tbl-exceptions" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$EXCEPTION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Custom exception name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EXCEPTION_NUMBER</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The unique number of the exception assigned by the system</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MESSAGE</database></entry>
            <entry align="center"><database>VARCHAR(1021)</database></entry>
            <entry align="left">Exception message text</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store text description of the exception</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag: 
              <simplelist type="horiz" columns="1">
                <member>user-defined = 0</member>
                <member>system-defined = 1 or higher</member>
              </simplelist>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$exceptions -->

  <section id="fblangref-appx04-fields">
    <title>RDB$FIELDS</title>
    <para>RDB$FIELDS stores definitions of columns and domains, both system and custom.
    This is where the detailed data attributes are stored for all columns.  
      <note>
        <para>The column RDB$FIELDS.RDB$FIELD_NAME links to
        RDB$RELATION_FIELDS.RDB$FIELD_SOURCE, not to RDB$RELATION_FIELDS.RDB$FIELD_NAME.</para>
      </note>
    </para>
    <informaltable id="fblangref25-appx04-tbl-fields" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The unique name of the domain created by the user or of 
            the domain automatically built for the table column by the system. System-created
            domain names start with the 'RDB$' prefix</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$QUERY_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$VALIDATION_BLR</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">The binary language representation (BLR) of the SQL
            expression specifying the check of the CHECK value in the domain</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$VALIDATION_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">The original source text in the SQL language specifying the
            check of the CHECK value</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$COMPUTED_BLR</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">The binary language representation (BLR) of the SQL
            expression the database server uses for evaluation when accessing a
            COMPUTED BY column</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$COMPUTED_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">The original source text of the expression that defines a COMPUTED BY 
            column</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFAULT_VALUE</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">The default value, if any, for the field or domain, in binary language 
            representation (BLR)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFAULT_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">The default value in the source code, as an SQL constant
            or expression</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_LENGTH</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Column size in bytes. FLOAT, DATE, TIME, INTEGER occupy 4 
            bytes. DOUBLE PRECISION, BIGINT, TIMESTAMP and BLOB identifier occupy 8 bytes. 
            For the CHAR and VARCHAR data types, the column stores the maximum number of
            bytes specified when a string domain (column) is defined</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_SCALE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The negative number that specifies the scale for DECIMAL and
            NUMERIC columns&mdash;the number of digits after the decimal point</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Data type code for the column:
              <simplelist type="horiz" columns="1">
                <member>7 = SMALLINT</member>
                <member>8 = INTEGER</member>
                <member>10 = FLOAT</member>
                <member>12 = DATE</member>
                <member>13 = TIME</member>
                <member>14 = CHAR</member>
                <member>16 = BIGINT</member>
                <member>27 = DOUBLE PRECISION</member>
                <member>35 = TIMESTAMP</member>
                <member>37 = VARCHAR</member>
                <member>261 = BLOB</member>
                <member>Codes for DECIMAL and NUMERIC are the same as for the integer
                types used to store them</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_SUB_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">
              <para>Specifies the subtype for the BLOB data type:
                <simplelist type="horiz" columns="1">
                  <member>0 - untyped</member>
                  <member>1 - text</member>
                  <member>2 - BLR</member>
                  <member>3 - access control list</member>
                  <member>4 - reserved for future use</member>
                  <member>5 - encoded table metadata description</member>
                  <member>6 - for storing the details of a cross-database transaction
                  that ends abnormally</member>
                </simplelist>
              </para>
              <para>Specifies for the CHAR data type:
                <simplelist type="horiz" columns="1">
                  <member>0 - untyped data</member>
                  <member>1 - fixed binary data</member>
                </simplelist>
              </para>
              <para>Specifies the particular data type for the integer data types
              (SMALLINT, INTEGER, BIGINT) and for fixed-point numbers (NUMERIC, DECIMAL):
                <simplelist type="horiz" columns="1">
                  <member>0 or NULL - the data type matches the value in the RDB$FIELD_TYPE field</member>
                  <member>1 - NUMERIC</member>
                  <member>2 - DECIMAL</member>
                </simplelist>
              </para>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MISSING_VALUE</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MISSING_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Any domain (table column) comment text</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag: the value of 1 means the domain is automatically created by
            the system, the value of 0 means that the domain is defined by the user</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$QUERY_HEADER</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SEGMENT_LENGTH</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Specifies the length of the BLOB buffer in bytes for BLOB columns.
            Stores NULL for all other data types</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EDIT_STRING</database></entry>
            <entry align="center"><database>VARCHAR(127)</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EXTERNAL_LENGTH</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The length of the column in bytes if it belongs
            to an external table. Always NULL for regular tables</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EXTERNAL_SCALE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The scale factor of an integer-type field in an external
            table; represents the power of 10 by which the integer is multiplied</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EXTERNAL_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The data type of the field as it is represented in
            an external table:
              <simplelist type="horiz" columns="1">
                <member>7 = SMALLINT</member>
                <member>8 = INTEGER</member>
                <member>10 = FLOAT</member>
                <member>12 = DATE</member>
                <member>13 = TIME</member>
                <member>14 = CHAR</member>
                <member>16 = BIGINT</member>
                <member>27 = DOUBLE PRECISION</member>
                <member>35 = TIMESTAMP</member>
                <member>37 = VARCHAR</member>
                <member>261 = BLOB</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DIMENSIONS</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Defines the number of dimensions in an array if 
            the column is defined as an array. Always NULL for columns that are 
            not arrays</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$NULL_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Specifies whether the column can take an empty 
            value (the field will contain NULL) or not (the field will contain 
            the value of 1)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CHARACTER_LENGTH</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The length of CHAR or VARCHAR columns in characters (not in bytes)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$COLLATION_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The identifier of the collation sequence for a character 
            column or domain. If it is not defined, the value of the field will be 0</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CHARACTER_SET_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The identifier of the character set for a character column,
            BLOB TEXT column or domain</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_PRECISION</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Specifies the total number of digits for the fixed-point
            numeric data type (DECIMAL and NUMERIC). The value is 0 for the integer data
            types, NULL is for other data types</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$fields -->

  <section id="fblangref-appx04-fielddims">
    <title>RDB$FIELD_DIMENSIONS</title>
    <para>RDB$FIELD_DIMENSIONS stores the dimensions of array columns.</para>
    <informaltable id="fblangref25-appx04-tbl-fielddims" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the array column. It must be present in the 
            RDB$FIELD_NAME field of the RDB$FIELDS table</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DIMENSION</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Identifies one dimension in the array column. The numbering
            of dimensions starts with 0</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$LOWER_BOUND</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The lower bound of this dimension</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$UPPER_BOUND</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The upper bound of this dimension</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$field_dimensions -->

  <section id="fblangref-appx04-files">
    <title>RDB$FILES</title>
    <para>RDB$FILES stores information about secondary files and shadow files.</para>
    <informaltable id="fblangref25-appx04-tbl-files" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$FILE_NAME</database></entry>
            <entry align="center"><database>VARCHAR(255)</database></entry>
            <entry align="left">The full path to the file and the name of either
              <itemizedlist spacing="compact">
                <listitem>the database secondary file in a multi-file database, or</listitem>
                <listitem>the shadow file</listitem>
              </itemizedlist>
              </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FILE_SEQUENCE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The sequential number of the secondary file in a sequence or
            of the shadow file in a shadow file set</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FILE_START</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The initial page number in the secondary file or shadow file</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FILE_LENGTH</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">File length in database pages</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FILE_FLAGS</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">For internal use</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SHADOW_NUMBER</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Shadow set number. If the row describes a database secondary file, the
            field will be NULL or its value will be 0</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$files -->

  <section id="fblangref-appx04-filters">
    <title>RDB$FILTERS</title>
    <para>RDB$FILTERS stores information about BLOB filters.</para>
    <informaltable id="fblangref25-appx04-tbl-filters" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$FUNCTION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The unique identifier of the BLOB filter</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Documentation about the BLOB filter and the two
            subtypes it is used with, written by the user</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MODULE_NAME</database></entry>
            <entry align="center"><database>VARCHAR(255)</database></entry>
            <entry align="left">The name of the dynamic library or shared object where the
            code of the BLOB filter is located</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$ENTRYPOINT</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The exported name of the BLOB filter in the filter library.  Note, this
            is often not the same as RDB$FUNCTION_NAME, which is the identifier with which the
            BLOB filter is declared to the database</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$INPUT_SUB_TYPE</database></entry>
            <entry align="center"><database>SMALLINT	</database></entry>
            <entry align="left">The BLOB subtype of the data to be converted by the
            function</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$OUTPUT_SUB_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The BLOB subtype of the converted data</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag indicating whether the filter is user-defined
            or internally defined:
              <itemizedlist spacing="compact">
                <listitem>0 = user-defined</listitem>
                <listitem>1 or greater = internally defined</listitem>
              </itemizedlist>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$filters -->

  <section id="fblangref-appx04-formats">
    <title>RDB$FORMATS</title>
    <para>RDB$FORMATS stores information about changes in tables. Each
    time any metadata change to a table is committed, it gets a new format number.
    When the format number of any table reaches 255, the entire database becomes
    inoperable. To return to normal, the database must be backed up with the
    <emphasis>gbak</emphasis> utility and restored from that backup copy.</para>
    <informaltable id="fblangref25-appx04-tbl-formats" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Table or view identifier</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FORMAT</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Table format identifier&mdash;maximum 255.  The critical time
            comes when this number approaches 255 for <emphasis>any</emphasis> table or
            view</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTOR</database></entry>
            <entry align="center"><database>BLOB FORMAT</database></entry>
            <entry align="left">Stores column names and data attributes as BLOB, as they were
            at the time the format record was created</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$formats -->

  <section id="fblangref-appx04-functions">
    <title>RDB$FUNCTIONS</title>
    <para>RDB$FUNCTIONS stores the information needed by the engine about external functions
    (user-defined functions, UDFs).
    <note>
      <para>In future major releases (Firebird 3.0 +) RDB$FUNCTIONS will also store the information
      about stored functions:  user-defined functions written in PSQL.</para>
      </note>
    </para>
    <informaltable id="fblangref25-appx04-tbl-functions" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$FUNCTION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The unique (declared) name of the external function</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FUNCTION_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Not currently used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$QUERY_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Not currently used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Any text with comments related to the external function</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MODULE_NAME</database></entry>
            <entry align="center"><database>VARCHAR(255)</database></entry>
            <entry align="left">The name of the dynamic library or shared object where the
            code of the external function is located</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$ENTRYPOINT</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The exported name of the external function in the function 
            library.  Note, this is often not the same as RDB$FUNCTION_NAME, which is the 
            identifier with which the external function is declared to the database</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RETURN_ARGUMENT</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The position number of the returned argument in the list of
            parameters corresponding to input arguments</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag indicating whether the filter is user-defined
            or internally defined:
              <itemizedlist spacing="compact">
                <listitem>0 = user-defined</listitem>
                <listitem>1 = internally defined</listitem>
              </itemizedlist>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$functions -->

  <section id="fblangref-appx04-funcargs">
    <title>RDB$FUNCTION_ARGUMENTS</title>
    <para>RDB$FUNCTION_ARGUMENTS stores the parameters of external functions and
    their attributes.</para>
    <informaltable id="fblangref25-appx04-tbl-funcargs" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$FUNCTION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The unique name (declared identifier) of the external
            function</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$ARGUMENT_POSITION</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The position of the argument in the list of arguments</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MECHANISM</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag: how this argument is passed:
              <itemizedlist spacing="compact">
                <listitem>0 = by value</listitem>
                <listitem>1 = by reference</listitem>
                <listitem>2 = by descriptor</listitem>
                <listitem>3 = by BLOB descriptor</listitem>
              </itemizedlist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Data type code defined for the column:
              <simplelist type="horiz" columns="1">
                <member>7 = SMALLINT</member>
                <member>8 = INTEGER</member>
                <member>12 = DATE</member>
                <member>13 = TIME</member>
                <member>14 = CHAR</member>
                <member>16 = BIGINT</member>
                <member>27 = DOUBLE PRECISION</member>
                <member>35 = TIMESTAMP</member>
                <member>37 = VARCHAR</member>
                <member>261 = BLOB</member>
                <member>40 = CSTRING (null-terminated text)</member>
                <member>45 = BLOB_ID</member>
                <member>261 = BLOB</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_SCALE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The scale of an integer or a fixed-point argument. It is an exponent of 10</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_LENGTH</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Argument length in bytes:
              <simplelist type="horiz" columns="1">
                <member>SMALLINT = 2</member>
                <member>INTEGER = 4</member>
                <member>DATE = 4</member>
                <member>TIME = 4</member>
                <member>BIGINT = 8</member>
                <member>DOUBLE PRECISION = 8</member>
                <member>TIMESTAMP = 8</member>
                <member>BLOB_ID = 8</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_SUB_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Stores the BLOB subtype for an argument of a BLOB data type</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CHARACTER_SET_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The identifier of the character set for a character argument</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_PRECISION</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The number of digits of precision available for the data type 
            of the argument</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CHARACTER_LENGTH</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The length of a CHAR or VARCHAR argument in characters (not 
            in bytes)</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$function_arguments -->

  <section id="fblangref-appx04-generators">
    <title>RDB$GENERATORS</title>
    <para>RDB$GENERATORS stores generators (sequences) and keeps them up-to-date.</para>
    <informaltable id="fblangref25-appx04-tbl-generators" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$GENERATOR_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The unique name of the generator</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$GENERATOR_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The unique identifier assigned to the generator by the system</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag: 
              <simplelist type="horiz" columns="1">
                <member>0 = user-defined</member>
                <member>1 or greater = system-defined</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store comments related to the generator</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$generators -->

  <section id="fblangref-appx04-indices">
    <title>RDB$INDICES</title>
    <para>RDB$INDICES stores definitions of both system- and user-defined indexes. The
    attributes of each column belonging to an index are stored in one row of the table
    RDB$INDEX_SEGMENTS.</para>
    <informaltable id="fblangref25-appx04-tbl-indices" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$INDEX_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The unique name of the index specified by the user or
            automatically generated by the system</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the table to which the index belongs. It corresponds
            to an identifier in RDB$RELATION_NAME.RDB$RELATIONS</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$INDEX_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The internal (system) identifier of the index</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$UNIQUE_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Specifies whether the index is unique:
              <simplelist type="horiz" columns="1">
                <member>1 - unique</member>
                <member>0 - not unique</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store comments concerning the index</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SEGMENT_COUNT</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The number of segments (columns) in the index</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$INDEX_INACTIVE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the index is currently active:
              <simplelist type="horiz" columns="1">
                <member>1 - inactive</member>
                <member>0 - active</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$INDEX_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Distinguishes between an expression index (1) 
            and a regular index (0 or null).  Not used in databases created 
            before Firebird 2.0; hence, regular indexes in upgraded databases
            are more more likely to store null in this column</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FOREIGN_KEY</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the associated Foreign Key constraint, if any</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the index is system-defined
            or user-defined:
              <simplelist type="horiz" columns="1">
                <member>1 or greater - system-defined</member>
                <member>0 - user-defined</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EXPRESSION_BLR</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">Expression for an expression index, written in the binary language
            representation (BLR), used for calculating the values for the index at runtime.</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EXPRESSION_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">The source code of the expression for an expression index</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$STATISTICS</database></entry>
            <entry align="center"><database>DOUBLE PRECISION</database></entry>
            <entry align="left">Stores the last known selectivity of the entire index, calculated
            by execution of a <database>SET STATISTICS</database> statement over the index.
            It is also recalculated whenever the database is first opened by the server.
            The selectivity of each separate segment of the index is stored in
            RDB$INDEX_SEGMENTS.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$indices -->

  <section id="fblangref-appx04-idxsegments">
    <title>RDB$INDEX_SEGMENTS</title>
    <para>RDB$INDEX_SEGMENTS stores the segments (table columns) of indexes and 
    their positions in the key. A separate row is stored for each column in an index.</para>
    <informaltable id="fblangref25-appx04-tbl-idxsegments" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$INDEX_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the index this segment is related to.
            The master record is RDB$INDICES.RDB$INDEX_NAME.</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of a column belonging to the index, corresponding 
            to an identifier for the table and that column in RDB$RELATION_FIELDS.RDB$FIELD_NAME
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_POSITION</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The column position in the index. Positions are numbered left-to-right, 
            starting at zero</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$STATISTICS</database></entry>
            <entry align="center"><database>DOUBLE PRECISION</database></entry>
            <entry align="left">The last known (calculated) selectivity of this column in the index.
            The higher the number, the lower the selectivity.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$index_segments -->

  <section id="fblangref-appx04-logfiles">
    <title>RDB$LOG_FILES</title>
    <para>RDB$LOG_FILES is not currently used. </para>
  </section> <!-- rdb$log_files -->

  <section id="fblangref-appx04-pages">
    <title>RDB$PAGES</title>
    <para>RDB$PAGES stores and maintains information about database pages
    and their usage.</para>
    <informaltable id="fblangref25-appx04-tbl-pages" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$PAGE_NUMBER</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The unique number of a physically created database page</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The identifier of the table to which the page is allocated</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PAGE_SEQUENCE</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The number of the page in the sequence of all pages allocated to
            this table</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PAGE_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates the page type (data, index, BLOB, etc.). For system use</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$pages -->

  <section id="fblangref-appx04-procedures">
    <title>RDB$PROCEDURES</title>
    <para>RDB$PROCEDURES stores the definitions of stored procedures, including their
    PSQL source code and the binary language representation (BLR) of it.  The next table, 
    RDB$PROCEDURE_PARAMETERS, stores the definitions of input and output parameters.</para>
    <informaltable id="fblangref25-appx04-tbl-procedures" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$PROCEDURE_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Stored procedure name (identifier)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PROCEDURE_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The procedure's unique, system-generated identifier</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PROCEDURE_INPUTS</database></entry>
            <entry align="center"><database></database>SMALLINT</entry>
            <entry align="left">Indicates the number of input parameters.  NULL if there are
            none</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PROCEDURE_OUTPUTS</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates the number of output parameters.  NULL if there are
            none</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Any text comments related to the procedure</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PROCEDURE_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">The PSQL source code of the procedure</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PROCEDURE_BLR</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">The binary language representation (BLR) of the procedure code</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SECURITY_CLASS</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">May point to the security class defined in the system table
            RDB$SECURITY_CLASSES in order to apply access control limits</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$OWNER_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The user name of the procedure's Owner&mdash;the user who
            was CURRENT_USER when the procedure was first created.  It may or may not be
            the user name of the author</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RUNTIME</database></entry>
            <entry align="center"><database>BLOB</database></entry>
            <entry align="left">A metadata description of the procedure, used internally for
            optimization</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the procedure is defined by a user (value 0)
            or by the system (a value of 1 or greater)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PROCEDURE_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Procedure type:
              <simplelist type="horiz" columns="1">
                <member>1 - selectable stored procedure (contains a SUSPEND statement)</member>
                <member>2 - executable stored procedure</member>
                <member><constant>NULL</constant> - not known *</member>
              </simplelist>
              <para> * for procedures created before Firebird 1.5</para>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$VALID_BLR</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the source PSQL of the stored procedure remains 
            valid after the latest ALTER PROCEDURE modification</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEBUG_INFO</database></entry>
            <entry align="center"><database>BLOB</database></entry>
            <entry align="left">Contains debugging information about variables used in the stored procedure</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$procedures -->

  <section id="fblangref-appx04-procparams">
    <title>RDB$PROCEDURE_PARAMETERS</title>
    <para>RDB$PROCEDURE_PARAMETERS stores the parameters of stored procedures and
    their attributes.  It holds one row for each parameter.</para>
    <informaltable id="fblangref25-appx04-tbl-procparams" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$PARAMETER_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Parameter name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PROCEDURE_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the procedure where the parameter is defined</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PARAMETER_NUMBER</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The sequential number of the parameter</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PARAMETER_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the parameter is for input (value 0) or
            output (value 1)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_SOURCE</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the user-created domain, when
            a domain is referenced instead of a data type.  If the name starts
            with the prefix 'RDB$', it is the name of the domain automatically
            generated by the system for the parameter.</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store comments related to the parameter</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the parameter was defined by the system (value or
            greater) or by a user (value 0)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFAULT_VALUE</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">The default value for the parameter, in the binary language representation (BLR)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFAULT_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">The default value for the parameter, in PSQL code</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$COLLATION_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The identifier of the collation sequence used for a character parameter</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$NULL_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The flag indicating whether NULL is allowable</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PARAMETER_MECHANISM</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag: indicates how this parameter is passed:
              <itemizedlist spacing="compact">
                <listitem>0 = by value</listitem>
                <listitem>1 = by reference</listitem>
                <listitem>2 = by descriptor</listitem>
                <listitem>3 = by BLOB descriptor</listitem>
              </itemizedlist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the column the parameter references, if it was 
            declared using TYPE OF COLUMN instead of a regular data type.  Used in 
            conjunction with RDB$RELATION_NAME (see next).</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the table the parameter references, if it was
            declared using TYPE OF COLUMN instead of a regular data type</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$procedure_parameters -->

  <section id="fblangref-appx04-refconstr">
    <title>RDB$REF_CONSTRAINTS</title>
    <para>RDB$REF_CONSTRAINTS stores the attributes of the referential 
    constraints&mdash;Foreign Key relationships and referential actions.</para>
    <informaltable id="fblangref25-appx04-tbl-refconstr" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$CONSTRAINT_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Foreign key constraint name, defined by the user or
            automatically generated by the system</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CONST_NAME_UQ</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the primary or unique key constraint linked by the 
            REFERENCES clause in the constraint definition</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MATCH_OPTION</database></entry>
            <entry align="center"><database>CHAR(7)</database></entry>
            <entry align="left">Not used. The current value is FULL in all cases</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$UPDATE_RULE</database></entry>
            <entry align="center"><database>CHAR(11)</database></entry>
            <entry align="left">Referential integrity actions applied to the foreign key 
            record[s] when the primary (unique) key of the parent table is updated:
            RESTRICT, NO ACTION, CASCADE, SET NULL, SET DEFAULT</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DELETE_RULE</database></entry>
            <entry align="center"><database>CHAR(11)</database></entry>
            <entry align="left">Referential integrity actions applied to th foreign key
            record[s] when the primary (unique) key of the parent table is deleted:
            RESTRICT, NO ACTION, CASCADE, SET NULL, SET DEFAULT</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$ref_constraints -->

  <section id="fblangref-appx04-relations">
    <title>RDB$RELATIONS</title>
    <para>RDB$RELATIONS stores the top-level definitions and attributes of all
    tables and views in the system.</para>
    <informaltable id="fblangref25-appx04-tbl-relations" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$VIEW_BLR</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">Stores the query specification for a view, in the binary
            language representation (BLR). The field stores NULL for a table</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$VIEW_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Contains the original source text of the query for
            a view, in SQL language.  User comments are included. The field stores
            NULL for a table</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store comments related to the table or view</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Internal identifier of the table or view</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">indicates whether the table or view is user-defined (value 0)
            or system-defined (value 1 or greater)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DBKEY_LENGTH</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The total length of the database key.
            For a table: 8 bytes. For a view, the length is 8 multiplied by
            the number of tables referenced by the view</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FORMAT</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Internal use, points to the relation's record
            in <database>RDB$FORMATS</database>&mdash;do not modify</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The field ID for the next column to be added. The number is not
            decremented when a column is dropped.</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Table or view name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SECURITY_CLASS</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">May reference a security class defined in the table
            RDB$SECURITY_CLASSES, in order to apply access control limits to all users
            of this table or view</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EXTERNAL_FILE</database></entry>
            <entry align="center"><database>VARCHAR(255)</database></entry>
            <entry align="left">The full path to the external data file if the table
            is defined with the EXTERNAL FILE clause</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RUNTIME</database></entry>
            <entry align="center"><database>BLOB</database></entry>
            <entry align="left">Table metadata description, used internally for
            optimization</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EXTERNAL_DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB</database></entry>
            <entry align="left">Could store comments related to the external file of an external
            table</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$OWNER_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The user name of the user who created the table or view 
            originally</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFAULT_CLASS</database></entry>
            <entry align="center"><database></database>CHAR(31)</entry>
            <entry align="left">Default security class, used when a new column is 
            added to the table</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FLAGS</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Internal flags</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The type of the relation object being described:
              <simplelist type="horiz" columns="1">
                <member>0 - system or user-defined table</member>
                <member>1 - view</member>
                <member>2 - external table</member>
                <member>3 - monitoring table</member>
                <member>4 - connection-level GTT (PRESERVE ROWS)</member>
                <member>5 - transaction-level GTT (DELETE ROWS)</member>
              </simplelist>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$relations -->

  <section id="fblangref-appx04-relconstr">
    <title>RDB$RELATION_CONSTRAINTS</title>
    <para>RDB$RELATION_CONSTRAINTS stores the definitions of all table-level constraints: primary, 
    unique, foreign key, CHECK, NOT NULL constraints.</para>
    <informaltable id="fblangref25-appx04-tbl-relconstr" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$CONSTRAINT_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the table-level constraint defined by the user, or
            otherwise automatically generated by the system</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CONSTRAINT_TYPE</database></entry>
            <entry align="center"><database>CHAR(11)</database></entry>
            <entry align="left">The name of the constraint type: PRIMARY KEY, UNIQUE, FOREIGN KEY,
            CHECK or NOT NULL</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the table this constraint applies to</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFERRABLE</database></entry>
            <entry align="center"><database>CHAR(3)</database></entry>
            <entry align="left">Currently NO in all cases: Firebird does not yet support 
            deferrable constraints</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$INITIALLY_DEFERRED</database></entry>
            <entry align="center"><database>CHAR(3)</database></entry>
            <entry align="left">Currently NO in all cases</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$INDEX_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the index that supports this constraint.  For a CHECK 
            or a NOT NULL constraint, it is NULL.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- RDB$RELATION_CONSTRAINTS -->

  <section id="fblangref-appx04-relfields">
    <title>RDB$RELATION_FIELDS</title>
    <para>RDB$RELATION_FIELDS stores the definitions of table and view columns.</para>
    <informaltable id="fblangref25-appx04-tbl-relfields" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Column name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the table or view that the column belongs to</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_SOURCE</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Domain name on which the column is based, either a user-defined one 
            specified in the table definition or one created automatically by the system using the 
            set of attributes defined.  The attributes are in the table RDB$FIELDS: this
            column matches RDB$FIELDS.RDB$FIELD_NAME.</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$QUERY_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Not currently used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$BASE_FIELD</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Only populated for a view, it is the name of the column from the base table</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$EDIT_STRING</database></entry>
            <entry align="center"><database>VARCHAR(127)</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_POSITION</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The zero-based ordinal position of the column in the table or view, 
            numbering from left to right</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$QUERY_HEADER</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$UPDATE_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the column is a regular one (value 1) or a 
            computed one (value 0)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">An ID assigned from <database>RDB$RELATIONS.RDB$FIELD_ID</database>
            at the time the column was added to the table or view. It should always be treated as
            transient</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$VIEW_CONTEXT</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">For a view column, the internal identifier of the base table from which 
            this field derives</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Comments related to the table or view column</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFAULT_VALUE</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">The value stored for the DEFAULT clause for this column,
            if there is one, written in binary language representation (BLR)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the column is user-defined (value 0) or
            system-defined (value 1 or greater)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SECURITY_CLASS</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">May reference a security class defined in RDB$SECURITY_CLASSES,
            in order to apply access control limits to all users of this column</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$COMPLEX_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$NULL_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the column is nullable (NULL) non-nullable (value 1)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEFAULT_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">The source text of the DEFAULT clause, if any</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$COLLATION_ID</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The identifier of the collation sequence in the character set
            for the column, if it is not the default collation</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- RDB$RELATION_FIELDS -->

  <section id="fblangref-appx04-roles">
    <title>RDB$ROLES</title>
    <para>RDB$ROLES stores the roles that have been defined in this database.</para>
    <informaltable id="fblangref25-appx04-tbl-roles" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$ROLE_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Role name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$OWNER_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The user name of the role owner</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store comments related to the role</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">System flag</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$roles -->

  <section id="fblangref-appx04-secclasses">
    <title>RDB$SECURITY_CLASSES</title>
    <para>RDB$SECURITY_CLASSES stores the access control lists</para>
    <informaltable id="fblangref25-appx04-tbl-secclasses" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$SECURITY_CLASS</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Security class name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$ACL</database></entry>
            <entry align="center"><database>BLOB ACL</database></entry>
            <entry align="left">The access control list related to the security class.
            It enumerates users and their privileges</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Could store comments related to the security class</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$security_classes -->

  <section id="fblangref-appx04-transacs">
    <title>RDB$TRANSACTIONS</title>
    <para>RDB$TRANSACTIONS stores the states of distributed transactions and other transactions 
    that were prepared for two-phase commit with an explicit prepare message</para>
    <informaltable id="fblangref25-appx04-tbl-transacs" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$TRANSACTION_ID</database></entry>
            <entry align="center"><database>INTEGER</database></entry>
            <entry align="left">The unique identifier of the transaction being tracked</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TRANSACTION_STATE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Transaction state:
              <simplelist>
                <member>0 - in limbo</member>
                <member>1 - committed</member>
                <member>2 - rolled back</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TIMESTAMP</database></entry>
            <entry align="center"><database>TIMESTAMP</database></entry>
            <entry align="left">Not used</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TRANSACTION_DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB</database></entry>
            <entry align="left">Describes the prepared transaction and could be a custom
            message supplied to <function>isc_prepare_transaction2</function>, even if it is not
            a distributed transaction. It may be used when a lost connection cannot be restored</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$transactions -->

  <section id="fblangref-appx04-triggers">
    <title>RDB$TRIGGERS</title>
    <para>RDB$TRIGGERS stores the trigger definitions for all tables and views.</para>
    <informaltable id="fblangref25-appx04-tbl-triggers" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <spanspec spanname="spanAll" namest="colColumn" nameend="colDesc"></spanspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$TRIGGER_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Trigger name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the table or view the trigger applies
            to. NULL if the trigger is applicable to a database event (<quote>database
            trigger</quote>)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TRIGGER_SEQUENCE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Position of this trigger in the sequence. Zero usually means
            that no sequence position is specified</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TRIGGER_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The event the trigger fires on:
              <simplelist>
                <member>1 - before insert</member>
                <member>2 - after insert</member>
                <member>3 - before update</member>
                <member>4 - after update</member>
                <member>5 - before delete</member>
                <member>6 - after delete</member>
                <member>17 - before insert or update</member>
                <member>18 - after insert or update</member>
                <member>25 - before insert or delete</member>
                <member>26 - after insert or delete</member>
                <member>27 - before update or delete</member>
                <member>28 - after update or delete</member>
                <member>113 - before insert or update or delete</member>
                <member>114 - after insert or update or delete</member>
                <member>8192 - on connect</member>
                <member>8193 - on disconnect</member>
                <member>8194 - on transaction start</member>
                <member>8195 - on transaction commit</member>
                <member>8196 - on transaction rollback</member>
              </simplelist>
            </entry>
          </row>
          <row spanname="spanAll" valign="top">
            <entry>Identification of the exact <database>RDB$TRIGGER_TYPE</database> code is a little
            more complicated, since it is a bitmap, calculated according to which phase and events
            are covered and the order in which they are defined. For the curious, the calculation is
            explained in <ulink url="http://tinyurl.com/fb-triggertype">this blog by Mark 
            Rotteveel</ulink>.</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TRIGGER_SOURCE</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Stores the source code of the trigger in PSQL</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TRIGGER_BLR</database></entry>
            <entry align="center"><database>BLOB BLR</database></entry>
            <entry align="left">Stores the trigger in the binary language representation (BLR)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Trigger comment text</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TRIGGER_INACTIVE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the trigger is currently inactive (1) or active (0)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag: indicates whether the trigger is user-defined (value 0) or
            system-defined (value 1 or greater)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FLAGS</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Internal use</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$VALID_BLR</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Indicates whether the text of the trigger remains valid after
            the latest modification by the the ALTER TRIGGER statement</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DEBUG_INFO</database></entry>
            <entry align="center"><database>BLOB</database></entry>
            <entry align="left">Contains debugging information about variables used in the trigger</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$triggers -->

  <section id="fblangref-appx04-trigmsgs">
    <title>RDB$TRIGGER_MESSAGES</title>
    <para>RDB$TRIGGER_MESSAGES stores the trigger messages.</para>
    <informaltable id="fblangref25-appx04-tbl-trigmsgs" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$TRIGGER_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the trigger the message is associated with</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MESSAGE_NUMBER</database></entry>
            <entry align="center"><database></database>SMALLINT</entry>
            <entry align="left">The number of the message within this trigger (from 1 to 32,767)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$MESSAGE</database></entry>
            <entry align="center"><database>VARCHAR(1023)</database></entry>
            <entry align="left">Text of the trigger message</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$trigger_messages -->

  <section id="fblangref-appx04-types">
    <title>RDB$TYPES</title>
    <para>RDB$TYPES stores the defining sets of enumerated types used throughout the 
    system.</para>
    <informaltable id="fblangref25-appx04-tbl-types" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">Enumerated type name. Each type name masters its own set of
            types, e.g., object types, data types, character sets, trigger types, blob subtypes, etc.</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The object type identifier. A unique series of numbers is used within
            each separate enumerated type.  For example, in this selection from the set mastered
            under RDB$OBJECT_TYPE in RDB$FIELD_NAME, some object types are enumerated:
              <simplelist>
                <member>0 - TABLE</member>
                <member>1 - VIEW</member>
                <member>2 - TRIGGER</member>
                <member>3 - COMPUTED_FIELD</member>
                <member>4 - VALIDATION</member>
                <member>5 - PROCEDURE</member>
                <member> ... </member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$TYPE_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of a member of an enumerated type, e.g., TABLE, VIEW,
            TRIGGER, etc. in the example above.  In the RDB$CHARACTER_SET enumerated
            type, RDB$TYPE_NAME stores the names of the character sets.</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$DESCRIPTION</database></entry>
            <entry align="center"><database>BLOB TEXT</database></entry>
            <entry align="left">Any text comments related to the enumerated type</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$SYSTEM_FLAG</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Flag: indicates whether the type-member is user-defined (value 0) 
            or system-defined (value 1 or greater)</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- rdb$types -->

    <section id="fblangref-appx04-userprivs">
    <title>RDB$USER_PRIVILEGES</title>
    <para>RDB$USER_PRIVILEGES stores the SQL access privileges for Firebird users 
    and privileged objects.</para>
    <informaltable id="fblangref25-appx04-tbl-userprivs" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$USER</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The user or object that is granted this privilege</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$GRANTOR</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The user who grants the privilege</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$PRIVILEGE</database></entry>
            <entry align="center"><database>CHAR(6)</database></entry>
            <entry align="left">The privilege granted hereby:
              <simplelist type="horiz" columns="1">
                <member>A - all (all privileges)</member>
                <member>S - select (selecting data)</member>
                <member>I - insert (inserting rows)</member>
                <member>D - delete (deleting rows)</member>
                <member>R - references (foreign key)</member>
                <member>U - update (updating data)</member>
                <member>E - executing (procedure)</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$GRANT_OPTION</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Whether the WITH GRANT OPTION authority is included 
            with the privilege:
              <simplelist type="horiz" columns="1">
                <member>1 - included</member>
                <member>0 - not included</member>
              </simplelist>
            </entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the object (table, view, procedure or role) the 
            privilege is granted ON</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$FIELD_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the column the privilege is applicable to, for a column-level
            privilege (an UPDATE or REFERENCES privilege)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$USER_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Identifies the type of user the privilege is granted TO
            (a user, a procedure, a view, etc.)</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$OBJECT_TYPE</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">Identifies the type of the object the privilege is granted ON</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- RDB$USER_PRIVILEGES -->

  <section id="fblangref-appx04-viewrelns">
    <title>RDB$VIEW_RELATIONS</title>
    <para>RDB$VIEW_RELATIONS stores the tables that are referred to in view definitions.
    There is one record for each table in a view. </para>
    <informaltable id="fblangref25-appx04-tbl-viewrelns" frame="all" rowsep="1" colsep="1">
    <?dbfo keep-together='auto'?>
      <tgroup cols="3">
        <colspec colname="colColumn" colwidth="4*"></colspec>
        <colspec colname="colType" colwidth="3*"></colspec>
        <colspec colname="colDesc" colwidth="5*"></colspec>
        <thead>
          <row valign="middle">
            <entry align="center">Column Name</entry>
            <entry align="center">Data Type</entry>
            <entry align="center">Description</entry>
          </row>
        </thead>
        <tbody>
          <row valign="middle">
            <entry align="left"><database>RDB$VIEW_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">View name</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$RELATION_NAME</database></entry>
            <entry align="center"><database>CHAR(31)</database></entry>
            <entry align="left">The name of the table the view references</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$VIEW_CONTEXT</database></entry>
            <entry align="center"><database>SMALLINT</database></entry>
            <entry align="left">The alias used to reference the view column in the
            BLR code of the query definition</entry>
          </row>
          <row valign="middle">
            <entry align="left"><database>RDB$CONTEXT_NAME</database></entry>
            <entry align="center"><database>CHAR(255)</database></entry>
            <entry align="left">The text associated with the alias reported in the RDB$VIEW_CONTEXT
            column</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section> <!-- RDB$VIEW_RELATIONS -->

</appendix>
