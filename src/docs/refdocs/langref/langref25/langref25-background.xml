<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../../../tools/docbook-dtd/docbookx.dtd">
<chapter id="langref25-background">
  <title>Background</title>
  <section id="langref25-background-flavors">
    <title>SQL flavors</title>
    <para>This reference describes the SQL language supported by Firebird. However, there are
    different subsets of SQL that apply to different areas and thus should be distinguished.
    Namely, they are:</para>
    <para><itemizedlist>
        <listitem>
          <para>Dynamic SQL (DSQL)</para>
        </listitem>
        <listitem>
          <para>Procedural SQL (PSQL)</para>
        </listitem>
        <listitem>
          <para>Embedded SQL (ESQL)</para>
        </listitem>
        <listitem>
          <para>Interactive SQL (ISQL)</para>
        </listitem>
      </itemizedlist></para>
    <para>Dynamic SQL is the major part of the language which corresponds to the Part 2
    (SQL/Foundation) part of the SQL specification. DSQL represents statements passed by client
    applications through the public Firebird API and processed by the database engine.</para>
    <para>Procedural SQL is the extention to the Dynamic SQL which additionally allows compound
    statements containing local variables, assignments, conditions, loops and other procedural
    constructs. PSQL corresponds to the Part 4 (SQL/PSM) part of the SQL specifications.
    Originally, PSQL extenstions were available in persistent stored modules (procedures and
    triggers) only, but recently they became surfaced in Dynamic SQL as well (see EXECUTE
    BLOCK).</para>
    <para>Embedded SQL defines the DSQL subset supported by Firebird GPRE - the application which
    allows you to embed SQL constructs into your host programming language (C, C++, Pascal, Cobol,
    etc) and preprocess those embedded constructs into the proper Firebird API calls. Please note
    that only a part of DSQL statements and expressions are supported in ESQL.</para>
    <para>Interactive ISQL means the language that can be executed using Firebird ISQL - the
    command-line application for interactive SQL access to databases. As it's a regular client
    application, its native language is DSQL. But it also offers a few additional commands</para>
    <para>Both DSQL and PSQL subsets are completely presented in this reference. Neither ESQL nor
    ISQL flavors are described here unless mentioned explicitly.</para>
  </section>
  <section id="langref25-background-dialects">
    <title>SQL dialects</title>
    <para>The SQL dialect is a term that defines the specific features of the SQL language that
    are available when accessing the database. SQL dialects can be defined at the database level
    and at the connection level. There are three dialects available:</para>
    <para><itemizedlist>
        <listitem>
          <para>Dialect 1 stores both date and time information in a DATE data type and has a
          TIMESTAMP data type which is identical to DATE. Double quotes are used to delimit string
          data. The precision for NUMERIC and DECIMAL data types is less than in dialect 3 and if
          the precision is greater than 9, Firebird internally stores these as long floating point
          values. BIGINT is not permitted as a data type. Identifiers are case-insensitive.
          Generator values are stored as 32-bit integers.</para>
        </listitem>
        <listitem>
          <para>Dialect 2 is available only on the Firebird client connection and cannot be set in
          the database. It is intended to assist debugging of possible problems with legacy data
          when migrating a database from dialect 1 to 3.</para>
        </listitem>
        <listitem>
          <para>Dialect 3 databases allow numbers (DECIMAL and NUMERIC data types) to be
          internally stored as long fixed point values (scaled integers) when the precision is
          greater than 9. The TIME data type is able to be used and stores time data only. The
          DATE data type stores on date information. BIGINT is available as a 64-bit integer data
          type. Double quotes can be used but only for identifiers that are case-sensitive, not
          for string data which has to use single quotes. Generator values are stored as 64-bit
          integers.</para>
        </listitem>
      </itemizedlist></para>
    <para>Dialect 1 is targeted to provide support for legacy (pre-v6) InterBase applications so
    that they would work the same way with Firebird. Dialect 2 is used as a transition dialect
    intended to highlight the issues while migrating to dialect 3. Newly developed databases and
    applications are highly recommended to use dialect 3. Both database and connection dialects
    should match, except the migration case with Dialect 2.</para>
    <para>This reference describes the semantics of SQL dialect 3 unless specified
    otherwise.</para>
  </section>
  <section id="langref25-background-errors">
    <title>Error conditions</title>
    <para>Processing of the every SQL statement either completes successfully or fails due to a
    specific error condition.</para>
  </section>
</chapter>
