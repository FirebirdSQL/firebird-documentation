<?xml version='1.0' encoding='UTF-8'?>
<article id="fbcache-de">
  <title>Firebird Database Cache Buffer</title>
  <titleabbrev>Firebird Database Cache Buffer - Funktionsweise</titleabbrev>
  <articleinfo>
    <date>02. Januar 2010</date>
    <author>
      <firstname>Norman</firstname>
      <surname>Dunbar</surname>
    </author>
    <othercredit class="translator">
      <firstname>Martin</firstname>
      <surname>Köditz</surname>
      <contrib>Übersetzung ins Deutsche</contrib>
    </othercredit>
    <edition>20. Juli 2013 – Version 1.3.1-de - deutsche Version</edition>
  </articleinfo>
  <section id="fbcache-intro">
    <title>Einleitung</title>
    <para>Firebird nutzt einen Seiten-Cache (engl. page cache), um die Seiten im Speicher vorzuhalten.
  Diese sind deutlich schneller aus dem RAM zu laden als jedesmal von der Festplatte zu lesen. 
  Die folgende Beschreibung wie Firebird den eigenen Cache verwendet, stammt aus einem Posting von 
  Ann Harrison aus der Firebird-Support-Mailing-List.</para>
    <para>Das Posting war eine Antwort auf die Frage ob es einen Weg gibt, den Speicher-Cache zu reduzieren, ohne zuviel Performance aufzugeben (engl.  
      <emphasis>if there is a way to reduce the memory cache without giving up too much performance?</emphasis>)
      Dieses Posting bezog sich auf ein System, dass sehr lange benötigte, um aus dem Schlafmodus zu erwachen. Dies wurde als Grund vermutet, dass einige Zeit benötigt wurde, um alle
        Cache-Seiten vor dem Ausführen der ersten Abfrage von der Festplatte zu lesen. Dieser Grund wurde bestätigt und der verantwortliche DBA fragte über die Liste, wie er den
        Puffer soweit wie möglich reduzieren könne, zeitgleich aber noch ein vernünftig laufendes System erhielte.</para>
    <para>Ann gab ihr Einverständnis das Posting formal als Teil des Firebird-Dokumentations-Projektes aufzunehmen.</para>
  </section>
  <section id="fbcache-cache">
    <title>Der Firebird-Cache</title>
    <para>Alles in der Datenbank ist in Seiten mit fester Größe vorgegebener Struktur abgelegt - es gibt neun verschiedene Seitentypen. Der Seiten-Cache ist ein Zwischenzustand zwischen dem &quot;Arbeits&quot;-Bereich und der Festplattenspeicher.</para>
    <para>Beim Start liest Firebird die Datenbank-Header-Seite (engl. database header page), dann die erste Zeiger-Seite (pointer page) der Systemtabelle RDB$PAGES. Hiermit erfährt Firebird, 
	wo die Zeiger-Seiten, neben anderen Dingen, für die System- und Benutzertabellen zu finden sind.</para>
    <para>Sobald die <emphasis>Anwendung</emphasis> auf die Datenbank zugreift, beginnt eine Transaktion. Firebird liest die Zeiger-Seiten, die erzählen wo die Daten-Seiten für die innerhalb der Transaktion betroffenen Tabellen zu finden sind. Alle Seiten wandern in den Cache und bleiben dort bis der Cache voll ist. Wenn kein Platz für eine neue Seite vorhanden ist, wird Firebird die am wenigsten genutzte Seite entfernt - <emphasis>nicht</emphasis> die erste gelesene, sondern die wenigst genutzte, die nicht geändert wurde.</para>
    <para>Wenn ein Commit für eine Transaktion durchgeführt wird - und bei einigen anderen Dingen - schreibt Firebird die durch diese Transaktion geänderten Seiten auf die Festplatte, entfernt sie aber nicht aus dem Cache - dies verhindert, dass die Seiten nochmals eingelesen werden müssen, wenn sie baldmöglichst benötigt werden.</para>
    <para>Mit der Zeit und etwas Glück, werden  zum Schluss die am häufigsten geänderten und genutzten Seiten im Cache verbleiben - das wären Transaktions-Inventar-Seiten, Zeiger-Seiten für aktive Tabellen, die Header-Seite, die Top-Level-Indexes, etc.. Daten und Lower-Level-Index-Seiten werden rein- und rausgeladen, je nach Gebrauch - aber der Cache wird immer gefüllt sein.</para>
    <para>Sie können die  MON$-Tabellen  (seit Firebird 2.1, insbesondere
        <database>MON$IO_STATS</database>) nutzen, um herauszufinden, wie gut Ihr Cache ausgelastet ist. Sie zeigen die Anzahl der Fetches gegenüber den Reads, wie oft auf Seiten zugegriffen wurde und wie oft diese von der Festplatte gelesen wurden. Wenn die Anzahl der Reads dramatisch in die Höhe geht, haben Sie den Cache zu sehr reduziert.</para>
    <para>Die MON$-Tabellen zeigen Ihnen außerdem die Anzahl der Marks gegen die Anzahl der Writes, welche angeben, wie oft Seiten geändert wurden gegenüber der Anzahl von Seiten, die auf die Festplatte geschrieben wurden. Wenn Sie sehen, dass die Writes in die Höhe schnellen, haben Sie vermutlich den Cache zu sehr reduziert.</para>
  </section>
  <section id="fbcache-mon-io-stats">
    <title>MON$IO_STATS verwenden</title>
    <para>Wie oben bereits angegeben, kann die Tabelle  <database>MON$IO_STATS</database> genutzt werden, um zu bestimmen, wie gut Ihr Buffer-Cache arbeitet. Die Tabelle hat folgende Struktur:</para>
    <formalpara>
      <title>MONS$STAT_ID</title>
      <para>Die Statistik-ID.</para>
    </formalpara>
    <formalpara>
      <title>MONS$STAT_GROUP</title>
      <para>Die statistische Gruppe. Statistiken werden in folgende Gruppen unterteilt:</para>
    </formalpara>
    <itemizedlist spacing="compact">
      <listitem>
        <para>0: Die Datenbank als Ganzes.</para>
      </listitem>
      <listitem>
        <para>1: Attachments.</para>
      </listitem>
      <listitem>
        <para>2: Transaktionen.</para>
      </listitem>
      <listitem>
        <para>3: Statements.</para>
      </listitem>
      <listitem>
        <para>4: Aufrufe (Calls).</para>
      </listitem>
    </itemizedlist>
    <formalpara>
      <title>MON$PAGE_READS</title>
      <para>Die Anzahl der gelesenen Seiten. Dies sind die Seiten, die von der Festplatte und nicht aus dem Arbeitsspeicher gelesen wurden.</para>
    </formalpara>
    <formalpara>
      <title>MON$PAGE_WRITES</title>
      <para>Die Anzahl der auf die Festplatte zurückgeschriebenen Seiten.</para>
    </formalpara>
    <formalpara>
      <title>MON$PAGE_FETCHES</title>
      <para>Die Anzahl der Seiten, die aus dem Cache geleseln wurden, Gegensatz zu denen von der Festplatte.</para>
    </formalpara>
    <formalpara>
      <title>MON$PAGE_MARKS</title>
      <para>Die Anzahl der im Cache geänderten Seiten. Es ist möglich, dass nicht alle zurück auf die Festplatte geschrieben wurden.</para>
    </formalpara>
    <para>Um die derzeitigen Statistiken für die gesamte Datenbank zu untersuchen, verwenden wir folgende Abfrage in isql:</para>
    <screen>tux&gt; isql employee
Database:  employee

SQL&gt; SELECT MON$PAGE_READS, MON$PAGE_WRITES, MON$PAGE_FETCHES, MON$PAGE_MARKS
CON&gt; FROM MON$IO_STATS
CON&gt; WHERE MON$STAT_GROUP = 0;

     MON$PAGE_READS     MON$PAGE_WRITES    MON$PAGE_FETCHES      MON$PAGE_MARKS
=================== =================== =================== ===================
                134                 526               13851                 529
</screen>
    <para>Das erzeugte Resultat zeigt, dass:</para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>134 Seiten von der Festplatte in den Cache gelesen werden mussten.</para>
      </listitem>
      <listitem>
        <para>13.851 Seiten, auf der anderen Seite, wurden direkt aus dem Cache gelesen.</para>
      </listitem>
      <listitem>
        <para>529 Seiten im Cache, wurden auf irgendeinem Wege geändert.</para>
      </listitem>
      <listitem>
        <para>526 geänderte Seiten wurden vom Cache auf die Festplatte kopiert.</para>
      </listitem>
    </itemizedlist>
    <para>Hieraus können wir erkennen, dass obwohl eine kleine Anzahl Seiten in den Cache gelesen wurde, wir nichts tun können, um dies zu vermeiden. Sobald die Datenbank gestartet wird, ist der Cache leer, wenn aber eine Anwendung eine Verbindung herstellt, werden verschiedene Seiten gelesen und in der Cache gefüllt, wodurch physikalische Leseoperationen durchgeführt werden. In diesem Beispiel scheint es so zu sein, dass sobald Seiten im Cache vorhanden sind, diese auch relativ häufig verwendet werden. Für jeden physikalischen Read wurden ungeführ 103 Reads aus dem Cache durchgeführt.</para>
    <para>Von den  529 aktualisierten Seiten - und dies sind sowohl System- wie auch Benutzerseiten - wurden  526
zurück auf die Festplatte geschrieben, während 3 Seiten immer noch im Cache verbleiben, noch nicht geschrieben.</para>
    <para>Das obige Beispiel zeigt die Performance des Caches während der Datenbanklaufzeit. Wir können dies auf unsere aktuelles Attachment herunterbrechen, indem wir die Abfrage etwas verändern. Wir holen nur die Datensätze, wo 
        <database>MON$STAT_GROUP</database> gleich 1 ist.</para>
    <screen>SQL&gt; SELECT MON$PAGE_READS, MON$PAGE_WRITES, MON$PAGE_FETCHES, MON$PAGE_MARKS
CON&gt; FROM MON$IO_STATS
CON&gt; WHERE MON$STAT_GROUP = 1;

     MON$PAGE_READS     MON$PAGE_WRITES    MON$PAGE_FETCHES      MON$PAGE_MARKS
=================== =================== =================== ===================
                  0                   4                  87                   5
                134                 520               13619                 522
</screen>
    <para>Die Interpretation der neuen Statistiken ist die gleiche wie für die gesamte Datenbank.</para>
    <para>Wir können außerdem eine  Statistikdiagnose für Transaktionen durchfühen:</para>
    <screen>SQL&gt; SELECT MON$PAGE_READS, MON$PAGE_WRITES, MON$PAGE_FETCHES, MON$PAGE_MARKS
CON&gt; FROM MON$IO_STATS
CON&gt; WHERE MON$STAT_GROUP = 2;

     MON$PAGE_READS     MON$PAGE_WRITES    MON$PAGE_FETCHES      MON$PAGE_MARKS
=================== =================== =================== ===================
                  0                   0                  60                   0
                  0                   0                   1                   0
                  0                   0                   1                   0
                  0                   0                  69                   0
                  0                   0                  93                   0
                  0                   0                  85                   0
                  0                   0                   1                   0
                  0                   0                   1                   0
</screen>
    <para>Und auch für Statements:</para>
    <screen>SQL&gt; SELECT MON$PAGE_READS, MON$PAGE_WRITES, MON$PAGE_FETCHES, MON$PAGE_MARKS
CON&gt; FROM MON$IO_STATS
CON&gt; WHERE MON$STAT_GROUP = 3;

     MON$PAGE_READS     MON$PAGE_WRITES    MON$PAGE_FETCHES      MON$PAGE_MARKS
=================== =================== =================== ===================
                  0                   0                   1                   0
                  0                   0                  38                   0
                  0                   0                   4                   0
                  0                   0                  18                   0
                  0                   0                 158                   0
                  0                   0                   1                   0
                  0                   0                   1                   0
                  0                   0                   1                   0
                  0                   0                   1                   0
                  0                   0                   1                   0
                  0                   0                   0                   0
                  0                   0                   1                   0
                  1                   0                  12                   0
                  0                   0                   2                   0
                  3                   0                1436                   0
                  0                   0                 101                   0
                  7                   0                 613                   0
</screen>
    <para>Schlussendlich ist es möglich - und vermutlich äußerst nützlich - die Statistiken für Ihre eigene Sitzung zu bestimmen. Sie finden Ihre Attachment-ID mittels         <database>CURRENT_CONNECTION</database> unter der Verwendung eines Joins mit
        <database>MON$IO_STATS</database> und der Spalte <database>MON$STAT_ID</database>.</para>
    <screen>SQL&gt; SET LIST;

SQL&gt; SELECT T.MON$ATTACHMENT_ID, T.MON$TRANSACTION_ID,
CON&gt; IO.MON$PAGE_READS, IO.MON$PAGE_WRITES, 
CON&gt; IO.MON$PAGE_FETCHES, IO.MON$PAGE_MARKS
CON&gt; FROM MON$TRANSACTIONS AS T
CON&gt; JOIN MON$IO_STATS as IO
CON&gt; ON (IO.MON$STAT_ID = T.MON$STAT_ID)
CON&gt; WHERE T.MON$ATTACHMENT_ID = CURRENT_CONNECTION;

MON$ATTACHMENT_ID               12
MON$TRANSACTION_ID              218
MON$PAGE_READS                  5
MON$PAGE_WRITES                 0
MON$PAGE_FETCHES                66
MON$PAGE_MARKS                  0

MON$ATTACHMENT_ID               12
MON$TRANSACTION_ID              217
MON$PAGE_READS                  0
MON$PAGE_WRITES                 0
MON$PAGE_FETCHES                1
MON$PAGE_MARKS                  0
</screen>
  </section>
  <appendix id="fbcache-dochist">
    <title>Dokumenthistorie</title>
    <para>Die exakte Dateihistorie ist im <filename
      class="directory">manual</filename>-Module unseres CVS-Baumes aufgenommen; Siehe <ulink
        url="http://sourceforge.net/cvs/?group_id=9028">http://sourceforge.net/cvs/?group_id=9028</ulink>
        Die vollständige URL des CVS-Logs dieser Datei kann unter dem Link <ulink url="http://firebird.cvs.sourceforge.net/viewvc/firebird/manual/src/docs/firebirddocs/fbcache.xml?view=log" userlevel="">http://firebird.cvs.sourceforge.net/viewvc/firebird/manual/src/docs/firebirddocs/fbcache.xml?view=log</ulink> gefunden werden.</para>
    <para><revhistory>
        <revision>
          <revnumber>1.0</revnumber>
          <date>05. Januar 2010</date>
          <authorinitials>ND</authorinitials>
          <revdescription>
            <para>Neues Dokument auf Basis eines Postings von Ann Harrison an den Firebird-support.</para>
          </revdescription>
        </revision>
        <revision>
          <revnumber>1.1</revnumber>
          <date>21. Juni 2010</date>
          <authorinitials>ND</authorinitials>
          <revdescription>
            <para>Ergänzt, dass es möglich <emphasis>ist</emphasis>,
            			die Statistiken für die aktuelle Verbindung zu erhalten. Im Gegensatz zur vorigen Behauptung.</para>
          </revdescription>
        </revision>
        <revision>
          <revnumber>1.1-de</revnumber>
          <date>02. September 2013</date>
          <authorinitials>MK</authorinitials>
          <revdescription>
            <para>Deutsche Übersetzung.</para>
          </revdescription>
        </revision>
      </revhistory></para>
  </appendix>
  <appendix id="fbcache-license">
    <title>Lizenzhinweis</title>
    
    <para>Der Inhalt dieser Dokumentation unterliegt der "Public Documentation
      License Version 1.0" (der <quote>Lizenz</quote>); die Dokumentation darf
      nur unter Respektierung dieser Lizenz genutzt werden. Kopien der Lizenz
      sind verfügbar unter <ulink
        url="http://www.firebirdsql.org/pdfmanual/pdl.pdf">http://www.firebirdsql.org/pdfmanual/pdl.pdf</ulink>
      (PDF) und <ulink
        url="http://www.firebirdsql.org/manual/pdl.html">http://www.firebirdsql.org/manual/pdl.html</ulink>
      (HTML).</para>
    <para>Die Original-Dokumentation trägt den Titel <citetitle>Firebird Database Cache Buffer</citetitle>.</para>
    <para>Der ursprünglich Autor der Original-Dokumentation ist: Norman Dunbar unter Verwendung der durch Ann Harrison zur Verfügung gestellten Daten.</para>
    <para>Copyright (C) 2010. Alle Rechte vorbehalten. Kontakt zum
      Original-Autor: NormanDunbar at users dot sourceforge dot net.
    </para>
  </appendix>
</article>
