<chapter id="rnfbtwo-install">
  <chapterinfo>
    <title>INSTALLATION NOTES</title>
  </chapterinfo>
  <para>Please read the previous chapter, <xref linkend="rnfbtwo-compat"/> before you set out to install 
  Firebird 2.0.</para>
  
  <section id="install2-win"><!-- Level 1 section -->
    <title>Windows 32-bit Installs</title>

    <section id="install2-win-readfirst"><!-- Level 2 section -->
    <title>READ THIS FIRST!</title>

    <para>On Windows, you have three server models to choose from:  Superserver, Classic and Embedded Server.  This
    means you have some decisions to make before installing Firebird 2.0.</para>

    <itemizedlist>
      <listitem>
        <para>Make sure you are logged in as Administrator (doesn't apply on Win9x or ME)</para>
        
      </listitem>
      <listitem>
        <para>Check to make sure that there is no FIREBIRD environment variable defined that is visible to
        Administrator-level users or to the LocalSystem user--see <xref linkend="compat-firebirdvar"/> at the 
        start of the previous chapter.</para>
     </listitem>
      <listitem>
        <para>The Superserver and Classic models, as well as server tools-only and client-only, can
        be installed using the Windows installer application.  For a full-release install, it is highly recommended
        to use the installer if there is one available.</para>
        
      </listitem>
      <listitem>
        <para>Use gbak to back up your old security.fdb (or, for a previous Firebird 1.0 installation, isc4.gdb)
        security database.  You can restore it later as security2.fdb, using the directions in the chapter 
        entitled <xref linkend="rnfbtwo-sec"/>.</para>
        
      </listitem>
      <listitem>
        <para>If you have special settings in your existing firebird.conf (ibconfig, for Firebird 1.0) there may
        be some values that you want to transfer to equivalent parameters in the new firebird.conf. When you use
        the Windows control panel applet <quote>Add/Remove Programs</quote> to uninstall Firebird 1.5.x
        (recommended!), the uninstaller should preserve your existing firebird.conf and aliases.conf. However,
        it won't hurt to take the precaution of backing up these files to your home directory.  The Firebird 1.0.x
        ibconfig file (if applicable) should certainly be backed up.</para>
        <note>
          <para>If you are upgrading from Firebird 1.0.x, go to the Downloads/Firebird Database Engine page at the
          Firebird website and download the Firebird 1.5.3 releasenotes for details of the correlation between
          settings in ibconfig and firebird.conf.  Study the notes about firebird.conf to work out what can be
          copied directly and what parameters require new syntax.</para>
        </note>
        
      </listitem>
      <listitem>
        <para>When reinstalling Firebird 2.0, certain configuration files in the installation directory will be
        preserved if you run the installer and OVERWRITTEN if you decompress a zip kit into the default location.
        The files are</para>
        <literallayout>
    security.fdb
    firebird.log
    firebird.conf
    aliases.conf
        </literallayout>
        
      </listitem>
      <listitem>
        <para>Each model can be installed from a zipfile.  This method will be faster than the installer if you have
        plenty of experience installing Firebird from zipfiles.  It will be highly exasperating if you are a
        Firebird newbie.</para>
        
      </listitem>
      <listitem>
        <para>It is assumed that.-</para>
        <orderedlist>
          <listitem>
            <para>you understand how your network works</para>
          </listitem>
          <listitem>
            <para>you understand why a client/server system needs both a server and clients</para>
          </listitem>
          <listitem>
            <para>you have read the rest of these release notes--or at least realise that you need to read them if
            something seems to have gone wrong</para>
          </listitem>
          <listitem>
            <para>you know to go to the firebird-support list if you get stuck.  Join at
            <ulink url="http://www.yahoogroups.com/groups/firebird-support">http://www.yahoogroups.com/groups/firebird-support</ulink></para>
          </listitem>
        </orderedlist>
      </listitem>
    </itemizedlist>

    <para>If you already have an earlier version of Firebird or InterBase&reg; on your server and you think you might
    want to go back to it, set up your fall-back position before you begin.</para>
    <itemizedlist>
      <listitem>
        <para>Use the existing version of GBAK to back up your database files in transportable format</para>
        
      </listitem>
      <listitem>
        <para>Go to your System directory and make backup copies of fbclient.dll and/or gds32.dll if you have
        applications that rely on finding those libraries there.  You might want to name the backup
        &quot;gds32.dll.fb15&quot; or &quot;gds32.dll.fb103&quot; or something similarly informative;
        or hide it in another directory</para>
        
      </listitem>
      <listitem>
        <para>It might be a good idea to make a backup of the Microsoft C++ runtime, msvcp60.dll, too.
        The installer shouldn't overwrite your version of this file, but strange things have been known to
        happen.</para>
        
      </listitem>
      <listitem>
        <para>STOP ANY FIREBIRD OR INTERBASE SERVER THAT IS RUNNING</para>
        <para>The installer will try to detect if an existing version of Firebird or InterBase is installed and/or
        running.  In a non-installer install, you are on your own!</para>
        
      </listitem>
      <listitem>
        <para>Provided you do not have a FIREBIRD environment variable defined, the default root location of
        Firebird 2.0 will be C:\Program Files\Firebird\Firebird_2_0.</para>
        
      </listitem>
      <listitem>
        <para>For installing Firebird as a service:  if you want to make use of the secure login feature,
        create a &quot;firebird service user&quot; on the system--any name and password you like--as an ordinary
        user with appropriate privileges.</para>
        <para>You should read the document named README.instsvc.txt first.  If you have a zip kit, you will find it
        in the /doc directory of the zipfile's root.  If you don't have a zip kit available, the file won't be
        available until after the installation.  You can read the same document at this URL:
        <ulink url="http://firebird.cvs.sourceforge.net/viewcvs.py/firebird/firebird2/doc/README.instsvc">http://
        firebird.cvs.sourceforge.net/viewcvs.py/firebird/firebird2/doc/README.instsvc</ulink></para>
      </listitem>
    </itemizedlist>

      <section id="install2-win-readfirst-dbname"><!-- Level 3 section -->
      <title>Naming databases on Windows</title>
      <para>Note that the recommended extension for database files on Windows ME and XP is &quot;.fdb&quot;
      to avoid possible conflicts with &quot;System Restore&quot; feature of these Windows versions.  Failure to
      address this issue on these platforms will give rise to the known problem of delay on first connection to a
      database whose primary file and/or secondary files are named using the &quot;.gdb&quot; extension that used to
      be the Borland convention for suffixing InterBase database file names.</para>
      <para>The issue is described in more detail in <xref linkend="install2-win-other"/> at the end of the Windows
      installation notes.</para>
      </section>
    </section>

    <section id="install2-win-otherpre"><!-- Level 2 section -->
    <title>Other Pre-installation Issues</title>

      <section id="install2-win-readnext-multiserv"><!-- Level 3 section -->
      <title>Installing Multiple Servers</title>
      <para>One of the design goals, since Firebird 1.5, has been to prepare the way for running multiple Firebird
      servers simultaneously on the same host machine.  Firebird 2.0 does support this, although it is not
      well documented and very much requires intervention from a skilled user. A future sub-release of Firebird 2.0
      will make this process far less complicated to install and manage.</para>
      <para>If you are experienced with Firebird and have a requirement to run multiple Firebird servers side by
      side, please consult the Firebird 1.5.3 release notes for details of how to achieve it.</para>
      </section>

      <section id="install2-win-readnext-mslibs"><!-- Level 3 section -->
      <title>Installation of Microsoft system libraries</title>
      <para>The problems associated with installing different versions of Microsoft system libraries are so
      notorious that it has acquired the name 'DLL Hell'. From the release of Windows 2000 onwards Microsoft have
      made it almost impossible to upgrade system dll's. To resolve this Microsoft now recommends that each
      application installs local copies of any system libraries that are required.</para>

      <para>Firebird 1.5 follows this practice and places the required libraries in the \bin directory along with
      the server.</para>
      </section>

      <section id="install2-win-readnext-client"><!-- Level 3 section -->
      <title>Installation of fbclient.dll</title>
      <para>Since Firebird 1.5, gds32.dll is not the <quote>native</quote> name of the client library.  It is now
      called fbclient.dll.  Given the problems that Microsoft have had with DLL hell it wouldn't make much sense
      if we continued to store the Firebird client library in the system directory. Furthermore, as we want to
      allow multiple engines to run simultaneously we would be creating our own DLL hell if we continued the
      practice of using the system directory for the client library.</para>
      <para>So, from Firebird 1.5 on, the client library resides in the \bin directory along with all the other
      binaries.  The installer provides the option (unchecked) to copy the client to the system directory for those
      who have applications that require to load them from there.</para>
      </section>

      <section id="install2-win-readnext-regkey"><!-- Level 3 section -->
      <title>Registry Key</title>
      <para>A Registry key has been added and all Firebird 2.0 compliant applications should use this key if they
      need to read a Registry key to locate the correct version of Firebird that they wish to use. The new
      key is:</para>

      <literallayout class="monospaced">
  HKEY_LOCAL_MACHINE\SOFTWARE\Firebird Project\Firebird Server\Instances
      </literallayout>

      <para>Firebird will guarantee that one entry under this key always exists. It will be known as</para>

      <literallayout class="monospaced">
  &quot;DefaultInstance&quot;
      </literallayout>

      <para>and will store the path to the root directory of (yes, you've guessed it) the default installation.
      Those that don't care about particular installations can always use the default instance to locate the
      fbclient.dll.</para>

      <para>Future versions of Firebird will see other entries under Instances.  Applications will be able to
      enumerate the Registry entries to determine which Server instance they wish to load.</para>
      </section>

      <section id="install2-win-readnext-legacy"><!-- Level 3 section -->
      <title>Supporting legacy applications and drivers</title>
      <para>Traditionally, applications that use InterBase or Firebird have expected to load the gds32.dll client
      library from the system directory. Firebird 2.0 ships with a tool named 'instclient.exe' that can install a
      clone of fbclient.dll to the Windows System directory. This clone gets patched on the fly so that its file
      version information begins with &quot;6.3&quot;, to provide compatibility for old applications that check the
      GDS32.DLL file version and can not make sense of a number string such as &quot;2.0&quot;.</para>
      </section>

      <section id="install2-win-readnext-instclient"><!-- Level 3 section -->
      <title>InstClient.exe Tool</title>
      <para>This 'instclient.exe' tool can also install the FBCLIENT.DLL itself in the Windows system directory,
      if required.  This will take care of tools or applications that need to load it from there.</para>
      <para>The instclient.exe utility should be located in the 'bin' directory of your Firebird installation
      and must be run from there in a command shell.</para>

      <para><emphasis role="bold">Usage of instclient.exe:</emphasis></para>
      <programlisting>
  instclient i[nstall] [ -f[orce] ] library
             q[uery] library
             r[emove] library
      </programlisting>
      <para>where library is:  <function>fbclient | gds32</function></para>
      <para><function>'-z'</function> can be used with any other option, prints version.</para>
      <para>Version information and shared library counts are handled automatically. You may provide
      the <function>-f[orce]</function> option to override version checks.</para>
      <caution>
        <para>If you <function>-f[orce]</function> the installation, it could break another Firebird or
        InterBase&reg; version already installed.  You might have to reboot the machine in order to finalize the
        copy.</para>
      </caution>

      <para>For more details, see the document README.Win32LibraryInstallation.txt which is located in ..\doc.</para>
      </section>

      <section id="install2-win-readnext-cleanup"><!-- Level 3 section -->
      <title>Cleaning up release candidate installs</title>
      <para>It should be noted that the installer removes fbclient.dll from the &lt;system&gt; directory if
      the file is found there. The installer also removes any deprecated HKLM\Software\Firebird* Registry
      keys.</para>
      </section><!-- level 3 -->
    </section><!-- level 2 -->

    <section id="install2-win-installer"><!-- Level 2 section -->
    <title>Using the Win32 Firebird Installer</title>
    <important>
      <para>Don't overlook the need to have the Microsoft&reg; Visual C and Visual C++ runtimes (msvcrt.dll and
      msvcpp60.dll, respectively) present in the system directory of all Windows servers and clients, including
      Windows Embedded installations.  For your convenience, copies of these libraries will be placed in the \bin
      directory of the Firebird install.  However, you should check first whether later versions of these libraries
      are already present.  Don't overwrite later versions.</para>
    </important>

    <para>This is really the easy part:  the actual install.  Just run the executable and respond to the dialogs.
    After you have answered a few dialogs about licensing and installation notes, you should see one where you
    decide on the location of the Firebird root directory.</para>

    <variablelist>
      <varlistentry>
      <term>Installation (Root) directory</term>
      <listitem>
        <para>The installer should be showing <quote>c:\Program Files\Firebird\Firebird_2_0</quote> by default.
        If you decide not to use the default root location, browse to a location you have pre-created;  or just
        type in the full path and let the installer find it.  The path you type in doesn't have to exist:
        the installer will prompt you and create it if it doesn't exist.</para>
        <para>Here you can also opt not to have the installer create Startup Menu icons by checking off the
        option.  If you are installing on Windows 9x or WinMe, or you plan to run the server as an application in
        another Win32 environment, keep the icons option checked on.</para>
      </listitem>
      </varlistentry>
    </variablelist>

    <para>Next, you should see a screen where you choose the installation you want:</para>
    <informalfigure>
    <mediaobject>
      <imageobject float="0">
        <imagedata fileref="images/win_setup_02.png" width="501" depth="383"></imagedata>
      </imageobject>
      <caption><para>Choose the installation you want and hit the &quot;Next&quot; button to carry on responding to
      dialogs.</para></caption>
    </mediaobject>
    </informalfigure>
    <note>
      <para>If you're installing a server, you should choose Superserver (preselected by the installer) or
      Classic (as seen in the image above).  Leave <quote>Server components</quote> and <quote>Developer and
      admin tools components</quote> checked on.</para>
      <para>For a client-only install, check off <quote>Server components</quote>, leaving <quote>Client
      components</quote> and, optionally, <quote>Developer and admin tools components</quote> checked on.</para>

      <para>There is also a drop-down for a custom installation which new users can safely ignore.</para>
    </note>
    <para>The next screen of interest enables you to set up how you want the server to run.</para>

    <informalfigure>
    <mediaobject>
      <imageobject float="0">
        <imagedata fileref="images/win_setup_04_SS.png" width="501" depth="383"></imagedata>
      </imageobject>
      <caption><para>Choose the options you want, according to your choice of server model.</para></caption>
    </mediaobject>
    </informalfigure>

     <variablelist>
      <varlistentry><term>Use the Guardian...</term>
      <listitem>
        <para>Guardian is a utility than can run &quot;over the top&quot; of Superserver and restart it if it
        crashes for any reason.  If you chose the Classic server, the Guardian option won't appear.</para>

        <para>For deployment of Superserver on Win9x, WinME and WinNT 4.0, using Guardian can avoid the situation
        where the server stops serving and nobody can find the DBA to restart it.  On other Win32 platforms, you
        can set the operating system to restart the service instead and not bother with the Guardian.</para>
      </listitem></varlistentry>

      <varlistentry><term>Service or application?</term>
      <listitem>
        <para>If you select to install Superserver or Classic, and your OS version supports services, you will
        be asked to choose whether to run Firebird as a service or as an application.  Unless you have a
        compelling need to run the server as an application, choose service.</para>
      </listitem></varlistentry>
      <varlistentry><term>Manual or automatic?</term>
      <listitem>
        <para>With the automatic option, Firebird will start up whenever you boot the host machine.  With the
        manual option you can start the server on demand from the Services applet in the Settings/Control Panel/
        Administration Tools selection.</para>
      </listitem></varlistentry>
      <varlistentry><term>Use Control Panel Applet (Superserver only)</term>
      <listitem>
        <para>If Superserver is being installed, you will see an option to <quote>Install Control Panel
        applet?</quote>.  It's a good idea to keep this as it places an applet in the Control Panel from which you
        can stop and [re]start the server.</para>
      </listitem></varlistentry>
    </variablelist>
    <para>Eventually, the dialogs will stop, you will press <quote>Install</quote> and the server will either
    silently start the server (if you requested it) or prompt you for permission to reboot.  Reboot will be needed
    if the installer was unable to update a DLL due to its being already loaded when the installer started up.</para>

      <section id="install2-win-installer-uninstall"><!-- Level 3 section -->
      <title>Uninstallation</title>
      <para>If you are going to uninstall Firebird, first shut down all connections to databases and then, if you
      are running Superserver, shut down the server.  The Firebird uninstall routine (run from Add/Remove
      Programs in the Control Panel) preserves and renames the following key files:</para>
      <literallayout>
    preserves security2.fdb or renames it to security2.fbnnnn
    preserves firebird.log
    preserves firebird.conf or renames it to firebird.confnnnn
    preserves aliases.conf or renames it to aliases.confnnnn
      </literallayout>
      <para><emphasis>&quot;nnnn&quot;</emphasis> is the build number of the old installation.</para>
      <para>No attempt is made to uninstall files that were not part of the original installation.</para>
      <para>Shared files such as fbclient.dll and gds32.dll will be deleted if the share count indicates
      that no other application is using them.</para>
      <para>The Registry keys that were created will be removed.</para>
      </section><!-- level 3 -->
    </section><!-- level 2 -->

    <section id="install2-win-zipkit"><!-- Level 2 section -->
    <title>Installing Superserver from a zip kit</title>
    <para>The installation of FB 2.0 is similiar in principle to previous versions.  If you don't have a
    special setup program (it's distributed separately) the steps are the following:</para>
    <itemizedlist>
      <listitem>
        <para>unzip the archive into a new directory</para>
        
      </listitem>
      <listitem>
        <para>change the current directory to $FIREBIRD\bin (here and below, $FIREBIRD refers to the directory
        where the v.2.0 files are located)</para>
        
      </listitem>
      <listitem>
        <para>run instreg.exe:</para>
        <literallayout class="monospaced">
    instreg.exe install
        </literallayout>
        <para>It causes the installation path of the directory above to be written into the registry
    (HKLM\Software\Firebird Project\Firebird Server\Instances\DefaultInstance)</para>
        
      </listitem>
      <listitem>
        <para>if you want to register a service, also run instsvc.exe:</para>
        <literallayout class="monospaced">
    instsvc.exe install
        </literallayout>
        
      </listitem>
      <listitem>
        <para>optionally, you may need to run instclient.exe to copy fbclient.dll or a specially-generated clone as
        gds32.dll to the OS system directory</para>
      </listitem>
    </itemizedlist>

      <section id="install2-win-zipkit-classic"><!-- Level 3 section -->
      <title>Installing Classic Server from a zip kit</title>
      <para>To install the CS engine, the only difference is the additional switch for instsvc.exe:</para>
      <literallayout class="monospaced">
    instsvc.exe install -classic
      </literallayout>

      <important>
        <para>Notice that this means that you may have only one architecture of the engine--either fbserver.exe
        (Superserver) or fb_inet_server.exe (the parent process for Classic)--installed as a service.</para>
        <para>The Control Panel applet is not installed with Classic--deliberately.  Don't try to install and
        use it.  The concept of terminating a service does not apply to the Classic model.</para>
      </important>

        <section id="install2-win-zipkit-simplified"><!-- Level 4 section -->
        <title>Simplified setup</title>
        <para>If you don't need a registered service, then you may avoid running both instreg.exe and instsvc.exe.
        In this case you should just unzip the archive into a separate directory and run the server as an
        application:</para>
        <literallayout class="monospaced">
    fbserver.exe -a
        </literallayout>
        <para>It should treat its parent directory as the root directory in this case.</para>
        </section><!-- level 4 -->
      </section><!-- level 3 -->

      <section id="install2-win-zipkit-uninstall"><!-- Level 3 section -->
      <title>Uninstallation</title>
      <para>To remove FB 1.5 without a Windows Uninstaller you should:</para>
      <itemizedlist>
        <listitem>
          <para>stop the server</para>
          
        </listitem>
        <listitem>
          <para>run &quot;instreg.exe remove&quot;</para>
          
        </listitem>
        <listitem>
          <para>run &quot;instsvc.exe remove&quot;</para>
          
        </listitem>
        <listitem>
          <para>delete installation directory</para>
          
        </listitem>
        <listitem>
          <para>delete fbclient.dll and gds32.dll from the OS system directory</para>
        </listitem>
      </itemizedlist>
      </section><!-- level 3 -->
    </section><!-- level 2 -->

    <section id="install2-win-other" xreflabel="Other Win32 Issues"><!-- Level 2 section -->
    <title>Other Win32 Issues</title>
    <variablelist>
        <varlistentry><term>Winsock2</term>
        <listitem>
          <para>Firebird requires WinSock2. All Win32 platforms should have this, except for Win95. A test for
          the Winsock2 library is made during install. If it is not found the install will fail.  To find out how
          to go about upgrading,
          <ulink url="http://support.microsoft.com/default.aspx?scid=kb;EN-US;q177719">visit this
          link</ulink>.</para>
         </listitem></varlistentry>
        <varlistentry><term>Windows ME and XP</term>
        <listitem>
          <para>Windows ME and XP (Home and Professional editions) there is a feature called <firstterm>System
          Restore</firstterm>, that causes auto-updating (backup caching?) of all files on the system having
          a &quot;.gdb&quot; suffix.  The effect is to slow down InterBase/Firebird database access to a virtual
          standstill as the files are backed up every time an I/O operation occurs. (On XP there is no System
          Restore on the .NET Servers).</para>
          <para>A file in the Windows directory of ME, c:\windows\system\filelist.xml, contains &quot;protected
          file types&quot;.  &quot;.gdb&quot; is named there. Charlie Caro originally recommended deleting the
          GDB extension from the &quot;includes&quot; section of this file.  However, since then, it has been
          demonstrated that WinME might be rebuilding this list.  In XP, it is not possible to edit filelist.xml
          at all.</para>

          <para>On ME, the permanent workarounds suggested are one of:</para>
          <itemizedlist>
            <listitem>
              <para>use FDB (Firebird DB) as the extension for your primary database files--RECOMMENDED</para>
            </listitem>
            <listitem>
              <para>move databases to C:\My Documents, which is ignored by System Restore</para>
            </listitem>
            <listitem>
              <para>switch off System Restore entirely (consult Windows doc for instructions).</para>
            </listitem>
          </itemizedlist>

          <para>On Windows XP Home and Professional editions you can move your databases to a separate partition
          and set System Restore to exclude that volume.</para>
          <para>Windows XP uses smart copy, so the overhead seen in Windows ME may be less of an issue on XP,
          for smaller files at least.  For larger files (e.g. Firebird database files, natch!) there doesn't seem
          to be a better answer as long as you have &quot;.gdb&quot; files located in the general filesystem.</para>
        </listitem></varlistentry>
      </variablelist>

      </section><!-- level 2 -->


      <section id="install2-win32-embed" xreflabel="Windows Embedded"><!-- Level 2 section -->
      <title>Updated Notes for Windows Embedded</title>
      <para>Some changes between Firebird 1.5 and Firebird 2.0 mean the existing docs are slightly out-of-date.
      For convenience, the following are the updated notes.</para>

      <para>The embedded server is a fully functional server linked as a dynamic library (fbembed.dll). It has
      exactly the same features as the usual Superserver and exports the  standard Firebird API entrypoints.</para>

      <para>The embedded server acts as a true local server for a single client accessing databases on a
      local machine.  It can also act as a remote gateway that redirects all network calls to other hosts,
      just as the regular client library does.</para>

        <section id="install2-win32-embed-regstry"><!-- level 3 -->
        <title>Registry</title>
        <para>The Firebird Registry entries are ignored. The root directory of the embedded server is the same
        directory as the one where the embedded library binary is located.</para>
        </section>

        <section id="install2-win32-embed-dbaccess"><!-- level 3 -->
        <title>Database Access</title>
        <para>Client access can be only via the local (XNET) protocol, i.e. NOT a TCP/IP local loopback connection
        string that includes the server name <quote>localhost</quote> or the IP address 127.0.0.1.  The embedded
        server supports only the local connect to an absolute database file path without a server name.</para>
        <para>The client program gets exclusive access to the database file after successful connect.</para>
        </section>

        <section id="install2-win32-embed-authent"><!-- level 3 -->
        <title>Authentication and Security</title>
        <para>The security database (security2.fdb) is not used in connecting to the embedded server. Hence it is
        not required. Any user is able to attach to any database. Since both the server and the client run in
        the same address space, security becomes just an agreement between the accessor and the accessed,
        which can be easily compromised.</para>

        <note>
          <para>SQL privileges are still checked and enforced.  Users that are assigned privileges in a Firebird
          database are not dependent on the existence of the user in the security database.</para>
        </note>
        </section>

        <section id="install2-win32-embed-compat"><!-- level 3 -->
        <title>Compatibility</title>
        <para>You may run any number of applications with the embedded server without any conflicts. Having
        a full Firebird or InterBase server running on the same machine is not a problem either.</para>

        <para>However, be aware that you cannot access a single database from a number of embedded servers
        simultaneously, regardless of whether they be embedded or full servers.  An embedded server has the
        SuperServer architecture and hence exclusively locks attached databases.</para>
        </section>

        <section id="install2-win32-embed-install"><!-- level 3 -->
        <title>Installing an Embedded Server Application</title>
        <variablelist>
          <varlistentry>
          <term><emphasis role="bold">Application Root</emphasis></term>
          <listitem>
            <para>Just copy fbembed.dll, icudt30.dll, icuin30.dll and icuuc30.dll into the directory with
            your application exectable.</para>
            <para>You should also copy firebird.msg and firebird.conf (if necessary) to the same directory.</para>
            <note>
              <para>You will need firebird.conf only if it is necessary to set some non-default configuration
              parameter for the embedded server.</para>
            </note>
          </listitem>
          <listitem>
            <para>If <emphasis role="bold">external libraries</emphasis> are required for your application, such
            as INTL support (fbintl.dll and fbintl.conf) or UDF libraries, create subdirectories beneath the
            application root for them, emulating the Firebird server ones, e.g. /intl or /udf,
            respectively.</para>
          </listitem>
          </varlistentry>
           <varlistentry>
          <term><emphasis role="bold">Rename fbembed.dll</emphasis></term>
          <listitem>
            <para>Rename fbembed.dll to either fbclient.dll or gds32.dll, according to which is required by your
            database connectivity software.</para>
          </listitem>
          </varlistentry>
          <varlistentry>
          <term><emphasis role="bold">Start your application</emphasis></term>
          <listitem>
            <para>Now start your application and it will use the embedded server as a both a client library and a
            server and will be able to access local datasases via the XNET network emulation protocol.</para>
          </listitem>
          </varlistentry>
        </variablelist>
        </section>
        <section id="install2-win32-embed-installexample"><!-- level 3 -->
        <title>Installation Structure Examples</title>
        <programlisting>
  c:\my_app\app.exe
  c:\my_app\gds32.dll
  c:\my_app\ib_util.dll
  c:\my_app\icudt30.dll
  c:\my_app\icuin30.dll
  c:\my_app\icuuc30.dll
  c:\my_app\firebird.conf
  c:\my_app\firebird.msg
  c:\my_app\intl\fbintl.dll
  c:\my_app\intl\fbintl.conf
  c:\my_app\udf\fbudf.dll
        </programlisting>
        <para>Suppose you want to place the Firebird files (excluding the renamed fbembed.dll) in another
        directory.  In that case, you need to modify your firebird.conf and set RootDirectory to the Firebird
        directory tree that is parent to the Firebird files.</para>
        <para><emphasis role="bold">Example</emphasis></para>
        <programlisting>
  c:\my_app\app.exe
  c:\my_app\gds32.dll
  c:\my_app\ib_util.dll
  c:\my_app\icudt30.dll
  c:\my_app\icuin30.dll
  c:\my_app\icuuc30.dll
  c:\my_app\firebird.conf
  d:\fb\firebird.msg
  d:\fb\intl\fbintl.dll
  d:\fb\intl\fbintl.conf
  d:\fb\udf\fbudf.dll
        </programlisting>
        <para>In firebird.conf:</para>
        <programlisting>
  RootDirectory = d:\fb
        </programlisting>
      </section>
    </section>

  </section><!-- level 1 -->

  <section id="install2-posx"><!-- Level 1 section -->
  <sectioninfo>
    <title>POSIX Platforms</title>
    <author><firstname>(Originally by Mark O'Donohue,</firstname><surname> revised for 2.0)</surname></author>
  </sectioninfo>

  <para>The Firebird server comes in two forms, Classic,  which runs as a service, and SuperServer, which runs
  as a background daemon. Classic is the more traditional UNIX service, while Superserver uses threads, rather
  than processes. For the user just starting out with Firebird, either will do, although the Classic server is
  likely to prove a better platform for initially experimenting with Firebird.</para>

    <section id="install2-posx-readfirst"><!-- Level 2 section -->
    <title>READ THIS FIRST</title>
     <itemizedlist>
      <listitem>
        <para>You will need to be root user to install Firebird.</para>

      </listitem>
      <listitem>
        <para>Installation on Linuxen requires a glibc package installed that is equal to or greater than
        glibc-2.2.5 and a libstdc++.so equal to or greater than libstdc++-5.0.</para>
        <note>
          <para>Some higher distros, e.g. Mandriva 10.2, might fail to complete the password-setting script at the 
          end of a Classic installation because the local client, libfbembed.so needs libstdc++.so.5 and the 
          installed version of this runtime is missing.  An &quot;impure&quot; solution that should solve the 
          immediate problem, at least, is to Google for <quote>compat-libstdc++</quote> and find one that was built 
          for your kernel version.</para>
          <para>The <emphasis>pure</emphasis> solution of course is to compile Firebird on the same system that
          you are going to run it on!  This might be necessary, anyway, if the compatibility runtimes cause problems
          with other applications.</para>
        </note>
      </listitem>

      <listitem>
        <para>Do not try to use <emphasis>rpm --update</emphasis> to bring any existing Firebird package installation
        up to date.  <emphasis>The Firebird packages do not support it.</emphasis></para>
      </listitem>

      <listitem>
        <para>If you are installing Superserver on a Linux that supports the <quote>new POSIX threading
        library </quote> (NPTL) then choose the NPTL build of Firebird.  Most distros with the 2.6 kernel are
        built with NPTL enabled;  some with later 2.4 kernels also enabled it, but it may be wise to prepare to
        revert to the regular build and set up to export the LD_ASSUME_KERNEL=2.2.5 variable if the 2.4
        implementation of the NPTL causes problems.  Details for doing this follow below.</para>
       </listitem>
      <listitem>
          <para>64-bit builds are available for both Classic and Superserver.  These should be installed only on a
          64-bit Linux system.  NPTL support is native on 64-bit Linux.</para>
         </listitem>
      </itemizedlist>
        <section id="install2-posx-readfirst-oldthreading"><!-- Level 3 section -->
        <title>Setting Linux to Use the Old Threading Model</title>
        <para>If the NPTL causes problems for SuperServer and locally compiled programs, including utilities such
        as gbak throwing a <emphasis>Broken Pipe</emphasis> error, you can try to solve the problem by forcing Linux
        to use the old threading model.  To fix.-</para>

        <orderedlist>
          <listitem>
            <para>In /etc/init.d/firebird</para>
            <literallayout class="monospaced">
  LD_ASSUME_KERNEL=2.2.5
  export LD_ASSUME_KERNEL
            </literallayout>
            <para>That takes care of the server instance.</para>

          </listitem>
          <listitem>
            <para>You need to have the <function>LD_ASSUME_KERNEL</function> environment variable set up within
            the local environment as well, so add the following to /etc/profile, to ensure every user picks it
            up for the command line utilities.</para>
            <para>after</para>
            <literallayout class="monospaced">
  HISTSIZE=1000
            </literallayout>
            <para>add</para>
            <literallayout class="monospaced">
  LD_ASSUME_KERNEL=2.2.5
            </literallayout>
            <para>On the following line, export it (this is all in one line):</para>
            <literallayout class="monospaced">
 export PATH USER LOGNAME MAIL HOSTNAME
     HISTSIZE INPUT_RC LD_ASSUME_KERNEL
            </literallayout>
          </listitem>
        </orderedlist>
        </section><!-- level 3 -->
      </section>

      <section id="install2-posx-linux"><!-- Level 2 section -->
      <title>Installing on Linux</title>
      <para>The following instructions describe the Classic installation. For installation of Superserver
      the &quot;CS&quot; in the package name is replaced by &quot;SS&quot;. For example, the package
      <function>FirebirdCS-2.0.0-nnnnn.i686.rpm</function> is replaced
      by <function>FirebirdSS-2.0.0-nnnnn.i686.rpm.</function></para>

      <note>
        <para>For those who, in the past, have had trouble installing Firebird on Slackware, the good news is that
        the installers in this version <emphasis>do</emphasis> include Slackware support.</para>
      </note>
      <para>Log in as root, or open a root shell.  In the example filenames, replace <emphasis>nnnnn</emphasis>
      with the build number of the kit you actually have.</para>

        <section id="install2-posx-linux-rpm"><!-- Level 3 section -->
        <title>RPM Installer</title>
        <para>For the RPM installer, type:</para>
        <literallayout class="monospaced">
  $rpm -ivh FirebirdCS-2.0.0-nnnnn.i686.rpm
        </literallayout>
        </section>

        <section id="install2-posx-linux-targz"><!-- Level 3 section -->
        <title>Installing the Tarball</title>
        <para>To install the tarball, place the &quot;.tar.gz&quot; file and type:</para>
        <literallayout class="monospaced">
  $tar -xzf FirebirdCS-2.0.0-nnnnn.tar.gz
  $cd FirebirdCS-2.0.0-nnnnn.i686
  $./install.sh
        </literallayout>
        </section>

      <para><emphasis role="bold">What the Linux install scripts will do</emphasis></para>
      <para>The Linux install scripts will</para>

      <orderedlist>
        <listitem>
          <para>Attempt to stop any currently running server</para>
          
        </listitem>
        <listitem>
          <para>Add the user 'firebird' and the group 'firebird' if they do not already exist.</para>
          
        </listitem>
        <listitem>
          <para>Install the software into the directory /opt/firebird and create links for libraries in /usr/lib
          and header files in /usr/include</para>
          
        </listitem>
        <listitem>
          <para>Automatically add gds_db for port 3050 to /etc/services if the entry does not already exist</para>
          
        </listitem>
        <listitem>
          <para>Automatically add localhost.localdomain and HOSTNAME to /etc/gds_hosts.equiv</para>
          
        </listitem>
        <listitem>
          <orderedlist type="a">
            <listitem>
              <para>SuperServer only installs a /etc/rc.d/init.d/firebird server start script.</para>
            </listitem>
            <listitem>
              <para>Classic server installs a /etc/xinetd.d/firebird start script or, for older inetd systems,
              adds an entry to the /etc/inetd file</para>
            </listitem>
          </orderedlist>
          
        </listitem>
        <listitem>
          <para>Specific to SuSE, a new rcfirebird link is created in /usr/bin for the init.d script and
          an /etc/rc.config Firebird entry is created.</para>
          
        </listitem>
        <listitem>
          <para>Starts the server/service. Firebird should start automatically in runlevel 2, 3 or 5</para>
          
        </listitem>
        <listitem>
          <para>Generates and sets a new random SYSDBA password and stores it in the
          file /opt/firebird/SYSDBA.password.</para>
          
        </listitem>
        <listitem>
          <para>Adds an entry to aliases.conf for the sample database, employee.fdb.</para>
        </listitem>
      </orderedlist>
      </section>

      <section id="install2-posx-test"><!-- Level 2 section -->
      <title>Testing your Linux installation</title>

        <section id="install2-posx-test-step1"><!-- Level 3 section -->
        <title>Step 1 - Accessing a database</title>
        <para>In a shell:</para>
        <literallayout class="monospaced">
 $cd /opt/firebird/bin
 $./isql -user sysdba -password &lt;password&gt;<superscript>1</superscript>

 SQL&gt;connect localhost:employee.fdb /* this is an aliased path */

 SQL&gt;select * from sales;
 SQL&gt;select rdb$relation_name from rdb$relations;
 SQL&gt;help;

 SQL&gt;quit;
        </literallayout>
        <note>
          <para><superscript>1</superscript>A password has been generated for you on installation.  It can be
          obtained from the /opt/firebird/SYSDBA.password file, located in the Firebird root directory.</para>
        </note>
        </section><!-- level 3 -->

        <section id="install2-posx-test-step2"><!-- Level 3 section -->
        <title>Step 2 - Creating a database</title>
        <para>The Firebird server runs by default as the user 'firebird'. While this has
        always been the recommended configuration, the previous default was for the server to run as 'root' user.
        When running as root user, the server had quite wide-ranging ability to read, create and delete database
        files anywhere on the POSIX filesystem.</para>

        <para>For security reasons, the service should have a more limited ability to read/delete and create
        files.</para>

        <para>While the new configuration is better from a security perspective, it requires some special
        considerations to be taken into account for creating new databases:</para>
        <orderedlist type="a">
          <listitem>
            <para>the user 'firebird' has to have write permission to the directory in which you want to create
            the database.</para>
            
          </listitem>
          <listitem>
            <para>the recommended value of the DatabaseAccess attribute in the /opt/firebird/firebird.conf file
            should be set to None, to permit access only through entries in the aliases.conf file.</para>
            
          </listitem>
          <listitem>
            <para>use entries in aliases.conf to abstract users from the physical locations of databases.
            More notes on aliases are to be found in the topic <xref linkend="config-db-alias"/>.</para>
          </listitem>
        </orderedlist>

        <para>Procedures for creating a new database can vary with different configurations but the
        following configuration and steps are recommended:</para>

        <orderedlist>
          <listitem>
            <para>If a directory that is owned by the user 'firebird' does not exist, then change to root user
            and create the directory:</para>
            <literallayout class="monospaced">
 $su - root
 $mkdir -p /var/firebird
 $chown firebird:firebird /var/firebird
            </literallayout>
            
          </listitem>
          <listitem>
            <para>Create a new physical database and set up an alias entry to point to it.  As root or firebird
            user, run the following script:</para>
            <literallayout class="monospaced">
 $cd /opt/firebird/bin
 $./createAliasDB.sh test.fdb /var/firebird/test.fdb
            </literallayout>
            <para>(Usage is: createAliasDB.sh &lt;dbname&gt; &lt;pathtodb&gt;)</para>
            
          </listitem>
          <listitem>
            <para>As an alternative (for step 2) the steps in the createAliasDB.sh script can be performed
            manually by:</para>
            <literallayout class="monospaced">
 $vi /opt/firebird/aliases.conf
            </literallayout>
             <para>and add the line at the end of the file:</para>
            <literallayout class="monospaced">
 test.fdb /var/firebird/test.fdb
            </literallayout>
            
          </listitem>
          <listitem>
            <para>Then create the database:</para>
            <literallayout class="monospaced">
$/opt/firebird/bin/isql -u sysdba -p &lt;password&gt;
SQL&gt;create database 'localhost:test.fdb';
SQL&gt;quit;
            </literallayout>

          </listitem>
          <listitem>
            <para>If the <emphasis>DatabaseAccess</emphasis> value in /opt/firebird/firebird.conf is set to Full
            or a restricted path value (for example: DatabaseAccess=/var/firebird) another alternative to step 2
            is to create the physical database file directly, using the absolute path with the filename:</para>

            <literallayout class="monospaced">
 $/opt/firebird/bin/isql -u sysdba -p &lt;password&gt;
 SQL&gt;create database '/var/firebird/test.fdb';
 SQL&gt;quit;
            </literallayout>
            <para>If you use this configuration, the database file can also be directly accessed without an entry
            in the aliases file:</para>
            <literallayout class="monospaced">
$/opt/firebird/bin/isql -u sysdba -p &lt;password&gt;
SQL&gt;connect '/var/firebird/test.fdb';
SQL&gt;quit;
            </literallayout>
          </listitem>
        </orderedlist>
        </section><!-- level 3 -->
      </section><!-- level 2 -->

      <section id="install2-posx-scripts"><!-- Level 2 section -->
      <title>Utility Scripts</title>
      <para>In addition to the standard install files the following scripts are provided in the bin directory of
      this release.-</para>

      <variablelist>
        <varlistentry><term><function>changeDBAPassword.sh</function></term>
        <listitem>
          <para>Change the Firebird SYSDBA user password. For Superserver, this script will change the init
          script /etc/rc.d/init.d/firebird to use the new password as well.</para>
        </listitem></varlistentry>
        <varlistentry><term><function>createAliasDB.sh</function></term>
        <listitem>
          <para>Usage:  <function>createAliasDB.sh &lt;dbname&gt; &lt;dbpath&gt;</function></para>
          <para>This script creates a new physical database and adds an entry in the aliases.conf file.</para>
        </listitem></varlistentry>
        <varlistentry><term><function>fb_config</function></term>
        <listitem>
          <para>A script that can be used in makefiles to generate the required include paths and lib include
          directives for the installed version of Firebird.  <function>fb_config -help</function> will give a
          complete list of options.</para>
        </listitem></varlistentry>
        <varlistentry><term><function>changeGdsLibraryCompatibleLink.sh</function></term>
        <listitem>
          <para>Classic only-Change the client library link for libgds.so between the multithreaded libfbclient.so
          and the single threaded libfbembed.so library that allows an embedded direct open of the db file.
          For compatibility with previous installs, libgds.so by default points to libfbembed.so.</para>
        </listitem></varlistentry>
      </variablelist>
      </section>

      <section id="install2-posx-tips"><!-- Level 2 section -->
      <title>Linux Server Tips</title>

        <section id="install2-posx-tips-direct"><!-- Level 3 section -->
        <title>&quot;Embedded&quot; or direct access to database files</title>
        <para>The Classic install offers an &quot;embedded&quot; mode of access that allows programs to open
        database files directly. To operate in this mode, a database-enabled user requires privileged access to
        some of the Firebird configuration and status files.</para>
        <para>Now that it is the 'firebird' user (not root) that is the default user to run the software, you need
        to know how to get a user into the firebird group to enable direct access to databases.  It is documented
        in the readme notes, but the following steps should get you where you need to be.</para>
        <para>To add a user (e.g. skywalker) to the firebird group, the root user needs to do:</para>
        <literallayout class="monospaced">
   $ usermod -G firebird skywalker
        </literallayout>
        <para>Next time 'skywalker' logs on, he can start working with firebird databases.</para>
        <para>To list the groups that a user belongs to, type the following at the command line:</para>
        <literallayout class="monospaced">
   $ groups
        </literallayout>
        </section><!-- level 3 -->

      </section><!-- level 2 -->

      <section id="install2-posx-uninstall"><!-- Level 2 section -->
      <title>Uninstalling on Linux</title>
      <para>If you need to uninstall, do it as root user. The following examples use Classic server but the same
      holds true for SuperServer by replacing the CS with SS.</para>

        <section id="install2-posx-uninstall-rpm"><!-- Level 3 section -->
        <title>Uninstalling an RPM package</title>
        <para>For rpm packages:</para>
        <literallayout class="monospaced">
  $rpm -e FirebirdCS-2.0.0
        </literallayout>
        </section>

        <section id="install2-posx-uninstall-tar"><!-- Level 3 section -->
        <title>Uninstalling a tarball installation</title>
        <para>for the .tar.gz install:</para>
        <literallayout class="monospaced">
  $/opt/firebird/bin/uninstall.sh
        </literallayout>
        </section>
      </section>

      <section id="install2-posx-solaris"><!-- Level 2 section -->
      <title>Solaris</title>
      <para>Install Firebird Classic &amp; SuperServer on Solaris 2.7 Sparc, not currently available.  Please
      refer older releasenotes as a reference to 2.0 installations.</para>
      </section>

      <section id="install2-posx-mac"><!-- Level 2 section -->
      <title>MacOS X</title>
      <para>Install Firebird Classic on MacOS X / Darwin, not currently available.  Please
      refer to older releasenotes as a reference to 2.0 installations.</para>
      </section>

      <section id="install2-posx-bsd"><!-- Level 2 section -->
      <title>FreeBSD</title>
      <para>Not currently available.  Please refer to older releasenotes as a reference to 2.0 installations.</para>
      </section>

      <section id="install2-posx-debian"><!-- Level 2 section -->
      <title>Debian</title>
      <para>Not currently available.  Please refer to the relevant pages at the Debian site for your Debian version
      and Firebird 2.0 build.</para>
    </section><!-- level 2 -->
  </section><!-- level 1 -->
</chapter>