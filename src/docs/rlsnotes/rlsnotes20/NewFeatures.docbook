  <chapter id="rnfbtwo-new">
  <chapterinfo>
    <title>New in Firebird 2.0</title>
  </chapterinfo>
    <section id="new-derived-tables"><!-- Level 1 section -->
    <sectioninfo>
      <title>Derived Tables</title>
      <author><firstname>A.</firstname><surname>Brinkman</surname></author>
    </sectioninfo>
    <para>Implemented support for derived tables in DSQL (subqueries in FROM clause) as defined by SQL200X.  A derived
 table is a set, derived from a dynamic SELECT statement.  Derived tables can be nested, if required, to build complex
 queries and they can be involved in joins as though they were normal tables or views.</para>
 
    <para>More details under <xref linkend="dml-dsql-derived-tables"/> in the DML chapter.</para>
    </section>
    
    <section id="new-explicit-cursors"><!-- Level 1 section -->
    <sectioninfo>
      <title>PSQL Now Supports Named Cursors</title>
      <author><firstname>D.</firstname><surname>Yemanov</surname></author>
    </sectioninfo>
    <para>Multiple named (i.e. explicit) cursors are now supported in PSQL and in DSQL EXECUTE BLOCK statements.  More 
    information in the chapter <xref linkend="psql-cursors"/>.</para>
    </section>
    
    <section id="new-win-protocol"><!-- Level 1 section -->
    <sectioninfo>
      <title>Reimplemented Protocols on Windows</title>
      <author><firstname>D.</firstname><surname>Yemanov</surname></author>
    </sectioninfo>
    <para>Two significant changes have been made to the Windows-only protocols.-</para>
      <section id="new-win-protocol-xnet"><!-- Level 2 section -->
      <title>Local Protocol--XNET</title>
      <para>XNET is now used as the default local protocol for Windows and is supported also for connecting to a Classic
      server.  More information to come.</para>
      </section>
      <section id="new-win-protocol-wnet"><!-- Level 2 section -->
      <title>Change to WNET ("NetBEUI") Protocol</title>
      <para>WNET (a.k.a. NetBEUI) protocol no longer performs client impersonation.
      More information to come.</para>
      </section>
    </section>

    <section id="new-garbage-collect"><!-- Level 1 section -->
    <sectioninfo>
      <title>Reworking of Garbage Collection</title>
      <author><firstname>V.</firstname><surname>Horsun</surname></author>
    </sectioninfo>
    <para>New GC thread implementation and combined cooperative + background activity.  More information to come.</para>
    </section>

    <section id="new-raw-device"><!-- Level 1 section -->
    <sectioninfo>
      <title>Storing Databases on Raw Devices</title>
      <author><firstname>E.</firstname><surname>Kunze, N. Samofatov</surname></author>
    </sectioninfo>
    <para>You can now store databases on raw devices and refer to the devices using database aliases.
    More information to come.</para>
    </section>

    <section id="new-serv-api"><!-- Level 1 section -->
    <sectioninfo>
      <title>Porting of the Services API to Classic is Complete</title>
      <author><firstname>N.</firstname><surname>Samofatov</surname></author>
    </sectioninfo>
    <para>Porting of the Services API to Classic architecture is now complete.  All Services API functions are now
    available on both Linux and Windows Classic servers. More information to come.</para>
    </section>

    <section id="new-constraint-checks"><!-- Level 1 section -->
    <sectioninfo>
      <title>Reworking of Constraint Checking</title>
      <author><firstname>V.</firstname><surname>Horsun</surname></author>
    </sectioninfo>
    <para>More precise checks for PK/UK/FK constraints.  More information to come.</para>
    </section>

    <section id="new-lock-timeout"><!-- Level 1 section -->
    <sectioninfo>
      <title>Lock Timeout for WAIT Transactions</title>
      <author><firstname>A.</firstname><surname>Karyakin, D. Yemanov</surname></author>
    </sectioninfo>
    <para>Added lock timeouts for WAIT transactions (see new TPB value isc_tpb_lock_timeout).
    More information to come.</para>
    </section>

    <section id="new-search-ops"><!-- Level 1 section -->
    <sectioninfo>
      <title>New Implementation of String Search Operators</title>
      <author><firstname>N.</firstname><surname>Samofatov</surname></author>
    </sectioninfo>
    <orderedlist>
    <listitem><para>The operators now work correctly with BLOBs</para></listitem>
    <listitem><para>Pattern matching now uses a single-pass Knuth-Morris-Pratt algorithm</para></listitem>
    <listitem><para>The engine no longer crashes when NULL is used as ESCAPE character for LIKE</para></listitem>
    </orderedlist>
    <para>More information to come.</para>
    </section>

    <section id="new-updatable-views"><!-- Level 1 section -->
    <sectioninfo>
      <title>Reworking of Updatable Views</title>
      <author><firstname>D.</firstname><surname>Yemanov</surname></author>
    </sectioninfo>
    <para>A reworking has been done to resolve problems with views that are implicitly updatable, but still have update
    triggers.  More information to come.</para>
    </section>

    <section id="new-shutdown-modes"><!-- Level 1 section -->
    <sectioninfo>
      <title>Additional Database Shutdown Modes Introduced</title>
      <author><firstname>N.</firstname><surname>Samofatov</surname></author>
    </sectioninfo>
    <para>Single-user and full shutdown modes are implemented using new <firstterm>[state]</firstterm> parameters for
    the <function>gfix -shut</function> and <function>gfix -online</function> commands.</para>

    <para><emphasis role="bold">Syntax Pattern</emphasis></para>
    <programlisting>
    gfix &lt;command&gt; [&lt;state&gt;] [&lt;options&gt;]
    &lt;command&gt;> ::= {-shut | -online}
    &lt;state&gt; ::= {normal | multi | single | full}
    &lt;options&gt; ::= {-force &lt;timeout&gt; | -tran | -attach}
    </programlisting>
    <itemizedlist>
    <listitem><para><emphasis>normal</emphasis> state = online database</para></listitem>
    <listitem><para><emphasis>multi</emphasis> state = multi-user shutdown mode (the legacy one, unlimited
attachments of SYSDBA/owner are allowed)</para></listitem>
    <listitem><para><emphasis>single</emphasis> state = single-user shutdown (only one attachment is allowed,
used by the restore process)</para></listitem>
    <listitem><para><emphasis>full</emphasis> state = full/exclusive shutdown (no attachments are allowed)</para></listitem>
    </itemizedlist>

    <para>For more details, refer to the section on Gfix <xref linkend="util-gfix-shut"/>, in the Utilities chapter.</para>
    </section>

    <section id="new-udf"><!-- Level 1 section -->
    <sectioninfo>
      <title>UDFs Improved re NULL Handling</title>
      <author><firstname>C.</firstname><surname>Valderrama</surname></author>
    </sectioninfo>
      <section id="new-udf-null"><!-- Level 2 section -->
      <title>Signalling SQL NULL</title>
      <itemizedlist>
      <listitem><para>Ability to signal SQL NULL via a NULL pointer (see <xref linkend="udf-nullpointer"/>).</para></listitem>
      <listitem><para>External function library ib_udf upgraded to allow the string functions ASCII_CHAR, LOWER, LPAD,
      LTRIM, RPAD, RTIM, SUBSTR and SUBSTRLEN to return NULL and have it interpreted correctly.</para>

      <para>The script <function>ib_udf_upgrade.sql</function> can be applied to pre-v.2 databases that have these 
      functions declared, to upgrade them to work with the upgraded library.  This script should be used only when 
      you are using the new ib_udf library with Firebird v2 and operation requests are modified to anticipate 
      nulls. <emphasis>(Coming in Beta 2.)</emphasis></para></listitem>
      </itemizedlist>
      </section>
    </section>

    <section id="new-concat-checking"><!-- Level 1 section -->
    <sectioninfo>
      <title>Run-time Checking for Concatenation Overflow</title>
      <author><firstname>D.</firstname><surname>Yemanov</surname></author>
    </sectioninfo>
    <para>Compile-time checking for concatenation overflow has been replaced by run-time checking.
    More information to come.</para>
    </section>

    <section id="new-synchro-logic"><!-- Level 1 section -->
    <sectioninfo>
      <title>Changes to Synchronisation Logic</title>
      <author><firstname>N.</firstname><surname>Samofatov</surname></author>
    </sectioninfo>
    <orderedlist>
    <listitem><para>Lock contention in the lock manager and in the SuperServer thread pool manager has been reduced
significantly</para></listitem>
    <listitem><para>A rare race condition was detected and fixed, that could cause Superserver to hang during request
    processing until the arrival of the next request</para></listitem>
    <listitem><para>Lock manager memory dumps have been made more informative and OWN_hung is detected
    correctly</para></listitem>
<listitem><para>Decoupling of lock manager synchronization objects for different engine instances was
implemented</para></listitem>
    </orderedlist>
    </section>

    <section id="new-sixty-four-bit"><!-- Level 1 section -->
    <sectioninfo>
      <title>Experimental Support for 64-bit Platforms</title>
      <author><firstname>A.</firstname><surname>Peshkov, D. Yemanov</surname></author>
    </sectioninfo>
    <title></title>
    <para>Details to come.</para>
    </section>

    <section id="new-record-enumerators"><!-- Level 1 section -->
    <sectioninfo>
      <title>Record Enumeration Limits Increased</title>
      <author><firstname>N.</firstname><surname>Samofatov</surname></author>
    </sectioninfo>
    <para>40-bit (64-bit internally) record enumerators have been introduced to overcome the ~30GB table size limit
    imposed by 32-bit record enumeration.</para>
    </section>

    <section id="new-debug"><!-- Level 1 section -->
    <sectioninfo>
      <title>Debugging Improvements</title>
      <author><firstname>Various</firstname><surname>Contributors</surname></author>
    </sectioninfo>

      <section id="new-debug-bugcheck"><!-- Level 2 section -->
      <title>Improved Reporting from Bugchecks</title>
      <para>BUGCHECK log messages now include file name and line number. (A. Brinkman)</para>
      </section>

      <section id="new-debug-struc-reports"><!-- Level 2 section -->
      <title>Updated Internal Structure Reporting</title>
      <para>Routines that print out various internal structures (DSQL node tree, BLR, DYN, etc) have been
      updated. (N. Samofatov)</para>
      </section>

      <section id="new-debug-logging"><!-- Level 2 section -->
      <title>New Debug Logging Facilities</title>
      <para>Thread-safe and signal-safe debug logging facilities have been implemented. (N. Samofatov)</para>
      </section>
    </section>

    <section id="new-connx"><!-- Level 1 section -->
    <sectioninfo>
      <title>Improved Connection Handling on POSIX Superserver</title>
      <author><firstname>A.</firstname><surname>Peshkov</surname></author>
    </sectioninfo>
    <para>Posix SS builds now handle SIGTERM and SIGINT to shutdown all connections gracefully. (A. Peshkov)</para>
    </section>

    <section id="new-invariant"><!-- Level 1 section -->
    <sectioninfo>
      <title>PSQL Invariant Tracking Reworked</title>
      <author><firstname>N.</firstname><surname>Samofatov</surname></author>
    </sectioninfo>
    <para>Invariant tracking in PSQL and request cloning logic were reworked to fix a number of issues with recursive
    procedures, for example SF bug #627057.</para>
    <para>Invariant tracking is the process performed by the BLR compiler and the optimizer to decide whether an
    &quot;invariant&quot; (an expression, which might be a nested subquery) is independent from the parent context.
    It is used to perform one-time evaluations of such expressions and then cache the result.</para>
    <para>If some invariant is not determined, we lose in performance. If some variant is wrongly treated as invariant,
    we see wrong results.</para>

    <para><emphasis role="bold">Example</emphasis></para>
    <programlisting>
  select * from rdb$relations
    where rdb$relation_id &lt;
      ( select rdb$relation_id from rdb$database )
    </programlisting>
    <para>This query performs only one fetch from rdb$database instead of evaluating the subquery for every row of
    rdb$relations.</para>
    </section>

    <section id="new-rb-retain"><!-- Level 1 section -->
    <sectioninfo>
      <title>ROLLBACK RETAIN Syntax Support</title>
      <author><firstname>D.</firstname><surname>Yemanov</surname></author>
    </sectioninfo>
    <para>The ROLLBACK RETAIN statement is now supported in DSQL.  More information to come.</para>
    </section>

    <section id="new-ods-changes"><!-- Level 1 section -->
    <sectioninfo>
      <title>ODS Changes</title>
      <author><firstname>Various</firstname><surname>Contributors</surname></author>
    </sectioninfo>
    <para>The new On-Disk Structure (ODS) is ODS11.</para>
    <!-- INSERT A REFERENCE HERE -->
    <para>For more information, see the chapter <xref linkend="apiods-ods"/>.</para>
    </section>

  </chapter>
