  <chapter id="rnfbtwo-optimi">
  <chapterinfo>
    <title>Optimizations</title>
  </chapterinfo>
    <section id="optimi-user-plans"><!-- Level 1 section -->
    <sectioninfo>
      <title>Improved PLAN Clause</title>
      <author><firstname>D.</firstname><surname>Yemanov</surname></author>
    </sectioninfo>
    <para>A PLAN clause optionally allows you to provide your own instructions to the engine and have it ignore 
    the plan supplied by the optimizer.  Firebird 2 enhancements allow you to specify more possible paths for the 
    engine.  For example:</para>
    <programlisting>
   PLAN (A ORDER IDX1 INDEX (IDX2, IDX3))
    </programlisting>
    <para>For more details, please refer to the topic in the DML section, 
    <xref linkend="dml-dsql-plans"/>, Improvements in Handling User-specified Query Plans. </para>
    </section>

    <section id="optimi-cache"><!-- Level 1 section -->
    <sectioninfo>
      <title>Buffer Cache Improvements</title>
      <author><firstname>O. Loa,</firstname><surname>D. Yemanov</surname></author>
    </sectioninfo>
    <itemizedlist>
    <listitem><para>Better choice of streams order in joins and better index usage in general</para></listitem>
    <listitem><para>Much faster algorithms to process the dirty pages tree</para></listitem>
    <listitem><para>Increased maximum page cache size to 128K pages (2GB for 16K page size)</para></listitem>
    </itemizedlist>
    <para>More information to come.</para>
    </section>

    <section id="optimi-optimizer"><!-- Level 1 section -->
    <title>Optimizer Improvements</title>
    <para>Content</para>
      <section id="optimi-ods-all"><!-- Level 2 section -->
      <title>For All Databases</title>
      <para>Content</para>
        <section id="optimi-ods-all-optimizer-in-or"><!-- Level 3 section -->
        <sectioninfo>
          <title>Faster Evaluation of IN() and OR</title>
          <author><firstname>O.</firstname><surname>Loa</surname></author>
        </sectioninfo>
        <para>Constant IN predicate or multiple OR booleans are now evaluated faster.
        More information to come.</para>
        </section>

        <section id="optimi-ods-all-optimizer-unique"><!-- Level 3 section -->
        <sectioninfo>
          <title>Improved UNIQUE Retrieval</title>
          <author><firstname>A.</firstname><surname>Brinkman</surname></author>
        </sectioninfo>
        <para>The optimizer will now use a more realistic cost value for unique retrieval.
        More information to come.</para>
        </section>

        <section id="optimi-ods-all-optimizer-not"><!-- Level 3 section -->
        <sectioninfo>
          <title>More Optimization of NOT Conditions</title>
          <author><firstname>D.</firstname><surname>Yemanov</surname></author>
        </sectioninfo>
        <para>NOT conditions are simplified and optimized via an index when possible.</para>
        <para><emphasis role="bold">Example</emphasis></para>
        <programlisting>
        (NOT NOT A = 0) -&gt; (A = 0)
        (NOT A &gt; 0) -&gt; (A &lt;= 0)
        </programlisting>
        </section>

        <section id="optimi-ods-all-having"><!-- Level 3 section -->
        <title>Distribute HAVING Conjunctions to the WHERE Clause</title>
        <para>Distribute HAVING clause conjunctions to the WHERE clause when possible.
        More info to come.</para>
        </section>
        <section id="optimi-ods-all-union"><!-- Level 3 section -->
        <title>Distribute UNION Conjunctions to the Inner Streams</title>
        <para>Distribute UNION conjunctions to the inner streams when possible.</para>
        </section>
        <section id="optimi-ods-all-cross"><!-- Level 3 section -->
        <title>Improved Handling of CROSS JOIN and Merge/SORT</title>
        <para>Improved cross join and merge/sort handling</para>
        </section><!-- Level 3 -->
        <section id="optimi-mixed"><!-- Level 3 section -->
        <title>Better Choice of Join Order for Mixed Inner/Outer Joins</title>
        <para>Let's choose a reasonable join order for intermixed inner and outer joins</para>
        </section><!-- Level 3 -->
        <section id="optimi-merge"><!-- Level 3 section -->
        <title>Equality Comparison on Expressions</title>
        <para>MERGE PLAN may now be generated for joins using equality comparsion on expressions</para>
        </section><!-- Level 3 -->
      </section><!-- Level 2 -->

      <section id="optimi-ods-eleven"><!-- Level 2 section -->
      <title>For ODS 11 Databases only</title>
      <para>Content</para>
        <section id="optimi-ods-eleven-segment"><!-- Level 3 section -->
        <title>Segment-level Selectivities are Used</title>
        <para>Info to come.</para>
        </section>
        <section id="optimi-ods-eleven-isnull"><!-- Level 3 section -->
        <title>Better Support for IS NULL</title>
        <para>Info to come.</para>
        </section>
        <section id="optimi-ods-eleven-starting"><!-- Level 3 section -->
        <title>Better Support for STARTING WITH</title>
        <para>Info to come.</para>
        </section>
        <section id="optimi-ods-eleven-or-and"><!-- Level 3 section -->
        <title>Matching of Both OR and AND Nodes to Indexes</title>
        <para>Info to come.</para>
        </section>
        <section id="optimi-ods-eleven-joinorder"><!-- Level 3 section -->
        <title>Better JOIN Orders</title>
        <para>Cost estimations have been improved in order to improve JOIN orders.</para>
        </section>
        <section id="optimi-ods-eleven-outer-join"><!-- Level 3 section -->
        <title>Indexed Order Enabled for Outer Joins</title>
        <para>It is now possible for indexed order to be utilised for outer joins, i.e. navigational walk.</para>
        </section><!-- Level 3 -->
      </section><!-- Level 2 -->
    </section><!-- Level 1 -->
  </chapter>