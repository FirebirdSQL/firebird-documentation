  <chapter id="rnfbtwo-util">
    <chapterinfo>
      <title>Command-line Utilities</title>
    </chapterinfo>

    <section id="util-backup">
      <!-- Level 1 section -->

      <title>Backup Tools</title>

      <para>Firebird 2 brings plenty of enhancements to backing up databases:
      a new utility for running on-line incremental backups and some
      improvements to <emphasis>gbak</emphasis> to avoid some of the traps that sometimes befall
      end-users.</para>

      <section id="util-backup-nbak">
        <!-- Level 2 section -->

        <sectioninfo>
          <title>New On-line Incremental Backup</title>

          <author><firstname>N.</firstname><surname>Samofatov</surname></author>
        </sectioninfo>

        <para>Fast, on-line, page-level incremental backup facilities have
        been implemented.</para>

        <para>The backup engine comprises two parts:</para>

        <itemizedlist>
          <listitem>
            <para>NBak, the engine support module</para>
          </listitem>

          <listitem>
            <para>NBackup, the tool that does the actual backups</para>
          </listitem>
        </itemizedlist>

        <section id="util-backup-nbak-nbak">
          <!-- Level 3 section -->

          <title>Nbak</title>

          <para>The functional responsibilities of NBAK are:</para>

          <orderedlist>
            <listitem>
              <para>to redirect writes to difference files when asked
              (<function>ALTER DATABASE BEGIN BACKUP</function>
              statement)</para>
            </listitem>

            <listitem>
              <para>to produce a GUID for the database snapshot and write it
              into the database header before the <function>ALTER DATABASE
              BEGIN BACKUP</function> statement returns</para>
            </listitem>

            <listitem>
              <para>to merge differences into the database when asked
              (<function>ALTER DATABASE END BACKUP</function>
              statement)</para>
            </listitem>

            <listitem>
              <para>to mark pages written by the engine with the current SCN
              [page scan] counter value for the database</para>
            </listitem>

            <listitem>
              <para>to increment SCN on each change of backup state</para>
            </listitem>
          </orderedlist>

          <para>The backup state cycle is:</para>

          <para><emphasis role="bold">nbak_state_normal -&gt; nbak_state_stalled -&gt; nbak_state_merge -&gt;
          nbak_state_normal</emphasis></para>


          <itemizedlist>
            <listitem>
              <para>In <emphasis>normal</emphasis> state writes go directly to
              the main database files.</para>
            </listitem>

            <listitem>
              <para>In <emphasis>stalled</emphasis> state writes go to the
              difference file only and the main files are read-only.</para>
            </listitem>

            <listitem>
              <para>In <emphasis>merge</emphasis> state new pages are not
              allocated from difference files. Writes go to the main database
              files. Reads of mapped pages compare both page versions and
              return the version which is fresher, because we don't know if it
              is merged or not.</para>

              <note>
                <para>This merge state logic has one quirky part. Both
                Microsoft and Linux define the contents of file growth as
                "undefined" i.e., garbage, and both zero-initialize
                them.</para>

                <para>This is why we don't read mapped pages beyond the
                original end of the main database file and keep them current
                in difference file until the end of a merge. This is almost
                half of NBak fetch and write logic, tested by using modified
                PIO on existing files containing garbage.</para>
              </note>
            </listitem>
          </itemizedlist>
        </section>

        <section id="util-backup-nbak-nbackup">
          <!-- Level 3 section -->

          <title>NBackup</title>

          <para>The functional responsibilities of NBackup are</para>

          <orderedlist>
            <listitem>
              <para>to provide a convenient way to issue ALTER DATABASE
              BEGIN/END BACKUP</para>
            </listitem>

            <listitem>
              <para>to fix up the database after filesystem copy (physically
              change <function>nbak_state_diff</function> to
              <function>nbak_state_normal</function> in the database
              header)</para>
            </listitem>

            <listitem>
              <para>to create and restore incremental backups.</para>

              <para>Incremental backups are multi-level. That means if you do
              a Level 2 backup every day and a Level 3 backup every hour, each
              Level 3 backup contains all pages changed from the beginning of
              the day till the hour when the Level 3 backup is made.</para>
            </listitem>
          </orderedlist>

          <section id="util-backup-nbak-nbackup-backup">
            <!-- Level 4 section -->

            <title>Backing Up</title>

            <para>Creating incremental backups has the following
            algorithm:</para>

            <orderedlist>
              <listitem>
                <para>Issue <function>ALTER DATABASE BEGIN BACKUP</function>
                to redirect writes to the difference file</para>
              </listitem>

              <listitem>
                <para>Look up the SCN and GUID of the most recent backup at
                the previous level</para>
              </listitem>

              <listitem>
                <para>Stream database pages having SCN larger than was found
                at step 2 to the backup file.</para>
              </listitem>

              <listitem>
                <para>Write the GUID of the previous-level backup to the
                header, to enable the consistency of the backup chain to be
                checked during restore.</para>
              </listitem>

              <listitem>
                <para>Issue <function>ALTER DATABASE END
                BACKUP</function></para>
              </listitem>

              <listitem>
                <para>Add a record of this backup operation to
                <function>RDB$BACKUP_HISTORY</function>. Record current level,
                SCN, snapshot GUID and some miscellaneous stuff for user
                consumption.</para>
              </listitem>
            </orderedlist>
          </section>

          <!-- Level 4 -->

          <section id="util-backup-nbak-nbackup-restore">
            <!-- Level 4 section -->

            <title>Restoring</title>

            <para>Restore is simple: we reconstruct the physical database
            image for the chain of backup files, checking that the backup_guid
            of each file matches prev_guid of the next one, then fix it up
            (change its state in header to nbak_state_normal).</para>
          </section>

          <!-- Level 4 -->

          <section id="util-backup-nbak-nbackup-usage">
            <!-- Level 4 section -->

            <title>Usage</title>

            <programlisting>
    nbackup &lt;options&gt;
          </programlisting>

            <section id="util-backup-nbak-nbackup-usage-options">
              <!-- Level 5 section -->

              <title>Valid Options</title>

              <programlisting>
   -L &lt;database&gt;   Lock database for filesystem copy
   -N &lt;database&gt;       Unlock previously locked database
   -F &lt;database&gt;              Fixup database after filesystem copy
   -B &lt;level&gt; &lt;database&gt; [&lt;filename&gt;]  Create incremental backup
   -R &lt;database&gt; [&lt;file0&gt; [&lt;file1&gt;...]]   Restore incremental backup
   -U &lt;user&gt;             User name
   -P &lt;password&gt;         Password
            </programlisting>

              <note>
                <orderedlist>
                  <listitem>
                    <para>&lt;database&gt; may specify a database alias</para>
                  </listitem>

                  <listitem>
                    <para>incremental backups of multi-file databases are not
                    supported yet</para>
                  </listitem>

                  <listitem>
                    <para>"stdout" may be used as a value of &lt;filename&gt;
                    for the -B option</para>
                  </listitem>
                </orderedlist>
              </note>
            </section>

            <!-- Level 5 -->
          </section>

          <!-- Level 4 -->

         <section id="util-backup-nbak-nbackup-improve"><!-- Level 4 section -->
         <title>Improvements</title>
         <para><emphasis role="bold">(V.2.0.6)</emphasis> An improvement has been done for POSIX 
         versions to address a problem whereby the full backup tool of the <emphasis>nBackup</emphasis> 
         would hog I/O resources when backing up large databases, bringing production work
         to a standstill.  Now, nBackup tries to read from the operating system cache before
         attempting to read from disk, thus reducing the I/O load substantially.</para>
         <note>
           <para>The <quote>cost</quote> may be a 10 to 15 percent increase in the time taken
           to complete the full backup under high-load conditions.</para>
         </note>
         <para>Tracker reference <ulink url="http://tracker.firebirdsql.org/browse/CORE-2316">CORE-2316</ulink>.</para>

        </section><!-- Level 4 -->

        </section>

        <!-- Level 3 -->

        <section id="util-backup-nbak-manual">
          <!-- Level 3 section -->

          <sectioninfo>
            <title>User Manual</title>

            <author><firstname>P.</firstname><surname>Vinkenoog</surname></author>
          </sectioninfo>

          <para>A user manual for NBak/NBackup has been prepared. It can be downloaded from the documentation area at
          the Firebird website: 
          <ulink url="http://www.firebirdsql.org/pdfmanual/">www.firebirdsql.org/pdfmanual/</ulink> - the file name
          is <function>Firebird-nbackup.pdf</function>. </para>
        </section>

        <!-- Level 3 -->
      </section>

      <!-- Level 2 -->

      <section id="util-backup-gbak">
        <!-- Level 2 section -->

        <title>gbak Backup/Porting/Restore Utility</title>

        <para>Content</para>

        <section id="util-backup-gbak-sw">
          <!-- Level 3 section -->

          <sectioninfo>
<!-- Section title and some of content changed in 2.0.1 -->
            <title>Changed Behaviours, New Switches</title>

            <author><firstname>V.</firstname><surname>Horsun</surname></author>
          </sectioninfo>

          <para>The new gbak switch</para>
          <literallayout class="monospaced">
  -RECREATE_DATABASE [OVERWRITE]
          </literallayout>
          <para>is a separate switch designed to make harder for the unsuspecting to overwrite a database
          accidentally, as could occur easily with the shortened form of the old switch:</para>
          <literallayout class="monospaced">
  -R[EPLACE_DATABASE]
          </literallayout>
          <para><emphasis role="bold">In summary:</emphasis></para>
          <itemizedlist>
            <listitem>
              <para>gbak -R (or gbak -r) now applies to the new -R[ECREATE_DATABASE] switch and will never
              overwrite an existing database if the O[VERWRITE] argument is absent</para>
            </listitem>

            <listitem>
              <para>The short form of the old gbak -R[EPLACE_DATABASE] is now -REP[LACE_DATABASE].  This switch
              does not accept the O[VERWRITE] argument.</para>
            </listitem>

            <listitem>
              <para>The -REP[LACE_DATABASE] switch should be considered as deprecated, i.e. it will become
              unavailable in some future Firebird release.</para>
            </listitem>

          </itemizedlist>

          <para>This change means that, if you have any legacy batch or cron scripts that rely 
          on <quote>gbak -r</quote> or <quote>gbak -R</quote> without modification, then the operation will 
          except if the database exists.</para>

          <para>If you want to retain the ability of your script to overwrite your database unconditionally, 
          you will need to modify the command to use either the new switch with the OVERWRITE argument or the 
          new short form for the old -REPLACE_DATABASE switch.</para>
        </section>

<!-- New section added in 2.0.1 -->
        <section id="util-backup-gbak-nosw"><!-- Level 3 section -->
          <title>gbak -V and the <quote>Counter</quote> Parameter</title>
          <para>During Firebird 1 development, an optional numeric <emphasis>&lt;counter&gt;</emphasis>
          argument was added to the -V[erbose] switch of gbak for both backup and restore.  It was
          intended to allow you to specify a number and get a running count of rows processed as the row
          counter passed each interval of that number of rows. It caused undesirable side-effects and was
          removed before Firebird 1.0 was ever released.  So, although it never happened, it was documented
          as <quote>implemented</quote> in the release notes and other places.</para>
        </section>
        <!-- Level 3 -->
      </section>

  <title>SQL Migration Issues</title>


      <!-- Level 2 -->
    </section>

    <!-- Level 1 -->

    <section id="util-isql">
      <!-- Level 1 section -->

      <title>ISQL Query Utility</title>

      <para>Work on ISQL has involved a lot of bug-fixing and the introduction of a few new, useful features.</para>

      <para>One trick to note is that CHAR and VARCHAR types defined in character set OCTETS (alias BINARY) now
      display in hex format.  Currently, this feature cannot be toggled off.</para>

        <section id="util-isql-sw"><!-- Level 2 section -->
        <title>New Switches</title>
        <para>The following command-line switches were added:</para>

          <section id="util-isql-sw-bail"><!-- Level 3 section -->
          <sectioninfo>
            <title>-b[ail] &quot;Bail out&quot;</title>
            <author><firstname>D. Ivanov,</firstname><surname>C. Valderrama</surname></author>
          </sectioninfo>

          <para>Command line switch -b to instruct isql to bail out on error
          when used in non-interactive mode, returning an error code to the
          operating system.</para>

          <para>When using scripts as input in the command line, it may be
          totally unappropriate to let isql continue executing a batch of
          commands after an error has happened. Therefore, the "-b[ail]"
          option will cause script execution to stop at the first error it
          detects. No further statements in the input script will be executed
          and isql will return an error code to the operating system.</para>

          <itemizedlist>
            <listitem>
              <para>Most cases have been covered, but if you find some error
              that is not recognized by isql, you should inform the project,
              as this is a feature in progress.</para>
            </listitem>

            <listitem>
              <para>Currently there is no differentiation by error code---any
              non-zero return code should be interpreted as failure. Depending
              on other options (like -o, -m and -m2) , isql will show the
              error message on screen or will send it to a file.</para>
            </listitem>
          </itemizedlist>

              <section id="util-isql-sw-bail=features"><!-- Level 4 section -->
              <title>Some Features</title>
              <itemizedlist>
              <listitem>
                <para>Even if isql is executing nested scripts, it will cease
                all execution and will return to the operating system when it
                detects an error. Nested scripts happen when a script A is
                used as isql input but in turn A contains an INPUT command to
                load script B an so on. Isql doesn't check for direct or
                indirect recursion, thus if the programmer makes a mistake and
                script A loads itself or loads script B that in turn loads
                script A again, isql will run until it exhaust memory or an
                error is returned from the database, at whose point -bail if
                activated will stop all activity.</para>
              </listitem>

              <listitem>
                <para>DML errors will be caught when being prepared or
                executed, depending on the type of error.</para>
              </listitem>

              <listitem>
                <para>In many cases, isql will return the line number of a DML statement that fails during execution 
                of a script. (More about <xref linkend="util-isql-cmd-errors"/> ...)</para>
              </listitem>
                
              <listitem>
                <para>DDL errors will be caught when being prepared or
                executed by default, since isql uses AUTODDL ON by default.
                However, if AUTO DLL is OFF, the server only complains when
                the script does an explicit COMMIT and this may involve
                several SQL statements.</para>
              </listitem>

              <listitem>
                <para>The feature can be enabled/disabled interactively or
                from a script by means of the command</para>

                <programlisting>
  SET BAIL [ON | OFF]
                </programlisting>

                <para>As is the case with other SET commands, simply using SET
                BAIL will toggle the state between activated and deactivated.
                Using SET will display the state of the switch among many
                others.</para>
              </listitem>

              <listitem>
                <para>Even if BAIL is activated, it doesn't mean it will change
                isql behavior. An additional requirement should be met: the
                session should be non-interactive. A non-interactive session
                happens when the user calls isql in batch mode, giving it a
                script as input.</para>

                <para>
                  <emphasis role="bold">Example</emphasis>
                </para>

                <programlisting>
  isql -b -i my_fb.sql -o results.log -m -m2
          </programlisting>

                <tip>
                  <para>However, if the user loads isql interactively and
                  later executes a script with the input command, this is
                  considered an interactive session even though isql knows it
                  is executing a script.</para>
                </tip>

                <para>
                  <emphasis role="bold">Example</emphasis>
                </para>

                <programlisting>
  isql
  Use CONNECT or CREATE DATABASE to specify a database
  SQL&gt; set bail;
  SQL&gt; input my_fb.sql;
  SQL&gt; ^Z
                </programlisting>

                <para>Whatever contents the script has, it will be executed
                completely, errors and all, even if the BAIL option is
                enabled.</para>
              </listitem>
            </itemizedlist>
            </section><!-- Level 4 -->
          </section><!-- Level 3 -->

          <section id="util-isql-sw-stats">
          <!-- Level 3 section -->
          <sectioninfo>
            <title>-m2 to Output Stats and Plans</title>
            <author><firstname>C.</firstname><surname>Valderrama</surname></author>
          </sectioninfo>

          <para>This is a command-line option -M2 to send the statistics and
          plans to the same output file as the other output (via the -o[utput]
          switch).</para>

          <para>When the user specifies that the output should be sent to a
          file, two possibilities have existed for years: either</para>

          <itemizedlist>
            <listitem>
              <para>at the command line, the switch -o followed by a file name
              is used</para>
            </listitem>

            <listitem>
              <para>the command OUTput followed by a file name is used, either
              in a batch session or in the interactive isql shell. (In either
              case, simply passing the command OUTput is enough to have the
              output returned to the console). However, although error
              messages are shown in the console, they are not output to the
              file.</para>
            </listitem>
          </itemizedlist>

          <para>The -m command line switch was added, to meld (mix) the error
          messages with the normal output to wherever the output was being
          redirected.</para>

          <para>This left still another case: statistics about operations (SET
          STATs command) and SQL plans as the server returns them. SET PLAN
          and SET PLANONLY commands have been treated as diagnostic messages
          and, as such, were always sent to the console.</para>

          <para>What the -m2 command line switch does is to ensure that stats
          and plans information go to the same file the output has been
          redirected to.</para>

          <note>
            <para>Neither -m nor -m2 has an interactive counterpart through a
            SET command. They are for use only as command-line isql
            options.</para>
          </note>
        </section><!-- level 3 -->

        <section id="util-isql-sw-role">
        <!-- Level 3 section -->

        <sectioninfo>
          <title>-r2 to Pass a Case-Sensitive Role Name</title>
          <author><firstname>C.</firstname><surname>Valderrama</surname></author>
        </sectioninfo>
        <para>The sole objective of this parameter is to specify a case-sensitive role name.</para>
        <itemizedlist>
        <listitem><para>The default switch for this parameter is -r.  Roles provided in the command line are
        uppercased</para></listitem>
        <listitem><para>With -r2, the role is passed to the engine exactly as typed in the
        command line.</para></listitem>
        </itemizedlist>
        </section><!-- Level 3 -->
      </section><!-- Level 2 -->

      <!-- Level 2 -->

      <section id="util-isql-cmd"><!-- Level 2 section -->
        <title>New Commands</title>
        <para>The following commands have been added or enhanced.</para>

          <section id="util-isql-cmd-sethead"><!-- Level 3 section -->
          <sectioninfo>
            <title>SET HEAD[ing] toggle</title>
            <author><firstname>C.</firstname><surname>Valderrama</surname></author>
          </sectioninfo>

          <para>Some people consider it useful to be able to do a SELECT
          inside isql and have the output sent to a file, for additional
          processing later, especially if the number of columns makes isql
          display impracticable. However, isql by default prints column
          headers and. in this scenario, they are a nuisance.</para>

          <para>Therefore, printing the column headers -- previously a fixed
          feature -- can now be enabled/disabled interactively or from a
          script by means of the</para>

          <programlisting>
  SET HEADing [ON | OFF]
          </programlisting>

          <para>command in the isql shell. As is the case with other SET
          commands, simply using SET HEAD will toggle the state between
          activated and deactivated.</para>

          <note>
            <para>There is no command line option to toggle headings
            off.</para>
          </note>

          <para>Using SET will display the state of SET HEAD, along with other
          switches that can be toggled on/off in the isql shell.</para>

          </section><!-- Level 3 -->

          <section id="util-isql-cmd-system"><!-- Level 3 section -->
          <title>SHOW SYSTEM now shows predefined UDFs</title>
          <para>The SHOW &lt;object_type&gt; command is meant to show user
          objects of that type. The SHOW SYSTEM commmand is meant to show
          system objects but, until now, it only showed system tables. Now it
          lists the predefined system UDFs incorporated into FB 2.</para>

          <para>It may be enhanced to list system views if we create some of
          them in the future.</para>
          </section><!-- Level 3 -->

          <section id="util-isql-cmd-sqlda"><!-- Level 3 section -->
          <sectioninfo>
            <title>SET SQLDA_DISPLAY ON/OFF</title>

            <author><firstname>A.</firstname><surname>dos Santos Fernandes</surname></author>
          </sectioninfo>

          <para>This SQLDA_DISPLAY command shows the input SQLDA parameters of INSERTs, UPDATEs and DELETEs.  It 
          was previously available only in DEBUG builds and has now been promoted to the public builds.  It shows 
          the information for raw SQLVARs. Each SQLVAR represents a field in the XSQLDA, the main structure used 
          in the FB API to talk to clients transferring data into and out of the server.
          </para> 
          <note>
            <para>The state of this option is not included in the output when you type 
            <literal>&nbsp;SET;&nbsp;</literal> in isql to see the current settings of most options.</para>
          </note>
          </section><!-- Level 3 -->

          <section id="util-isql-cmd-settrans"><!-- Level 3 section -->
          <sectioninfo>
            <title>SET TRANSACTION Enhanced</title>

            <author><firstname>C.</firstname><surname>Valderrama</surname></author>
          </sectioninfo>

          <para>The SET TRANSACTION statement has been enhanced so that, now, all TPB options are supported:</para>
          <itemizedlist>
            <listitem>
              <para>NO AUTO UNDO</para>
            </listitem>
            <listitem>
              <para>IGNORE LIMBO</para>
            </listitem>
            <listitem>
              <para>LOCK TIMEOUT &lt;number&gt;</para>
            </listitem>
          </itemizedlist>
          <para><emphasis>Example</emphasis></para>
          <programlisting>
  SET TRANSACTION WAIT SNAPSHOT NO AUTO UNDO LOCK TIMEOUT 10
          </programlisting>
          <para>See also the document <citetitle>doc/sql.extensions/README.set_transaction.txt</citetitle>.</para>
          </section>

          <section id="util-isql-cmd-version"><!-- Level 3 section -->
          <sectioninfo>
            <title>SHOW DATABASE now Returns ODS Version Number</title>
            <author><firstname>C.</firstname><surname>Valderrama</surname></author>
          </sectioninfo>

          <para>ODS (On-Disk Structure) version is now returned in the SHOW
          DATABASE command (C. Valderrama)</para>
          </section><!-- Level 3 -->

          <section id="util-isql-cmd-errors" xreflabel="error line numbers"><!-- Level 3 section -->
          <sectioninfo>
            <title>Ability to show the line number where an error happened in
            a script</title>
            <author><firstname>C.</firstname><surname>Valderrama</surname></author>
          </sectioninfo>

          <para>In previous versions, the only reasonable way to know where a
          script had caused an error was using the switch -e for echoing
          commands, -o to send the output to a file and -m to merge the error
          output to the same file. This way, you could observe the commands
          isql executed and the errors if they exist. The script continued
          executing to the end. The server only gives a line number related to
          the single command (statement) that it's executing, for some DSQL
          failures. For other errors, you only know the statement caused
          problems.</para>

          <para>With the addition of -b for bail as described in (1), the user
          is given the power to tell isql to stop executing scripts when an
          error happens, but you still need to echo the commands to the output
          file to discover which statement caused the failure.</para>

          <para>Now, the ability to signal the script-related line number of a
          failure enables the user to go to the script directly and find the
          offending statement. When the server provides line and column
          information, you will be told the exact line of DML in the script that
          caused the problem. When the server only indicates a failure, you
          will be told the starting line of the statement that caused the
          failure, related to the whole script.</para>

          <para>This feature works even if there are nested scripts, namely,
          if script SA includes script SB and SB causes a failure, the line
          number is related to SB. When SB is read completely, isql continues
          executing SA and then isql continues counting lines related to SA,
          since each file gets a separate line counter. A script SA includes
          SB when SA uses the INPUT command to load SB.</para>

          <para>Lines are counted according to what the underlying IO layer
          considers separate lines. For ports using EDITLINE, a line is what
          readline() provides in a single call. The line length limit of 32767
          bytes remains unchanged.</para>
          </section><!-- Level 3 -->

          <section id="util-isql-cmd-help"><!-- Level 3 section -->
          <sectioninfo>
            <title>Enhanced Command-line Help</title>
            <author><firstname>M.</firstname><surname>Kubecek</surname></author>
          </sectioninfo>
          <para>When unknown parameters are used, isql now shows all of the command-line parameters and their 
          explanations instead of just a simple list of allowed switches.</para>
          <programlisting>
opt/firebird/bin] isql -?
Unknown switch: ?
usage:    isql [options] [&lt;database&gt;]
        -a(all)                 extract metadata incl. legacy non-SQL tables
        -b(ail)                 bail on errors (set bail on)
        -c(ache) &lt;num&gt;          number of cache buffers
        -ch(arset) &lt;charset&gt;    connection charset (set names)
        -d(atabase) &lt;database&gt;  database name to put in script creation
        -e(cho)                 echo commands (set echo on)
        -ex(tract)              extract metadata
        -i(nput) &lt;file&gt;         input file (set input)
        -m(erge)                merge standard error
        -m2                     merge diagnostic
        -n(oautocommit)         no autocommit DDL (set autoddl off)
        -now(arnings)           do not show warnings
        -o(utput) &lt;file>        output file (set output)
        -pag(elength) &lt;size&gt;    page length
        -p(assword) &lt;password&gt;  connection password
        -q(uiet)                do not show the message "Use CONNECT..."
        -r(ole) &lt;role&gt;          role name
        -r2 &lt;role&gt;              role (uses quoted identifier)
        -sqldialect &lt;dialect&gt;   SQL dialect (set sql dialect)
        -t(erminator) &lt;term&gt;    command terminator (set term)
        -u(ser) &lt;user&gt;          user name
        -x                      extract metadata
        -z                      show program and server version
          </programlisting>
          </section><!-- Level 2 -->
        </section>
        <section id="util-isql-bugfixes"><!-- Level 2 section -->
        <title>ISQL Bugs Fixed</title>

    <para><emphasis>SF #910430</emphasis><function>&nbsp;&nbsp;&nbsp;&nbsp;</function>
    ISQL and database dialect</para>
    <para><emphasis>fixed by C. Valderrama, B. Rodriguez Somoza</emphasis></para>
    <para><emphasis>What was fixed</emphasis><function>&nbsp;&nbsp;&nbsp;&nbsp;</function>When ISQL disconnected from a
    database, either by dropping it or by trying to connect to a non-existent database, it remembered the SQL
    dialect of the previous connection, which could lead to some inappropriate warning messages.</para>
    <para><function>&nbsp;&nbsp;&nbsp;&nbsp;~ ~ ~ &nbsp;&nbsp;&nbsp;&nbsp;</function></para>

        <para><emphasis>SF #223126</emphasis><function>&nbsp;&nbsp;&nbsp;&nbsp;</function>
    Misplaced collation when extracting metadadata with ISQL</para>
    <para><emphasis>fixed by B. Rodriguez Somoza</emphasis></para>
    <para><function>&nbsp;&nbsp;&nbsp;&nbsp;~ ~ ~ &nbsp;&nbsp;&nbsp;&nbsp;</function></para>

        <para><emphasis>SF #223513</emphasis><function>&nbsp;&nbsp;&nbsp;&nbsp;</function>
    Ambiguity between tables and views</para>
    <para><emphasis>fixed by B. Rodriguez Somoza</emphasis></para>
    <para><function>&nbsp;&nbsp;&nbsp;&nbsp;~ ~ ~ &nbsp;&nbsp;&nbsp;&nbsp;</function></para>

        <para><emphasis>SF #518349</emphasis><function>&nbsp;&nbsp;&nbsp;&nbsp;</function>
    ISQL SHOW mangles relationship</para>
    <para><emphasis>fixed by B. Rodriguez Somoza</emphasis></para>
    <para><function>&nbsp;&nbsp;&nbsp;&nbsp;~ ~ ~ &nbsp;&nbsp;&nbsp;&nbsp;</function></para>

        <para><emphasis>Unregistered bug</emphasis><function>&nbsp;&nbsp;&nbsp;&nbsp;</function>
    Possible crashes with long terminators</para>
    <para><emphasis>fixed by C. Valderrama</emphasis></para>
    <para><function>&nbsp;&nbsp;&nbsp;&nbsp;~ ~ ~ &nbsp;&nbsp;&nbsp;&nbsp;</function></para>

        <para><emphasis>Unregistered bug</emphasis><function>&nbsp;&nbsp;&nbsp;&nbsp;</function>
    Avoided several SQL&gt; prompts when using the INPUT command interactively.</para>
    <para><emphasis>implemented by C. Valderrama</emphasis></para>
    <para><function>&nbsp;&nbsp;&nbsp;&nbsp;~ ~ ~ &nbsp;&nbsp;&nbsp;&nbsp;</function></para>

        <para><emphasis>Unregistered bugs</emphasis><function>&nbsp;&nbsp;&nbsp;&nbsp;</function>
    Some memory leaks</para>
    <para><emphasis>fixed by C. Valderrama</emphasis></para>
    <para><function>&nbsp;&nbsp;&nbsp;&nbsp;~ ~ ~ &nbsp;&nbsp;&nbsp;&nbsp;</function></para>

      </section><!-- End of ISQL bugs section --><!-- Level 2 -->

    </section><!-- Level 1 -->

    <section id="util-gsec"><!-- Level 1 section -->
    <title>gsec Authentication Manager</title>
    <para>Changes to the <emphasis>gsec</emphasis> utility include:</para>

      <section id="util-gsec-returncode"><!-- Level 2 section -->
      <sectioninfo>
        <title>gsec return code</title>
        <author><firstname>C.</firstname><surname>Valderrama</surname></author>
      </sectioninfo>

      <para><emphasis>gsec</emphasis> now returns an error code when used as a non-interactive
        utility. Zero indicates success; any other code indicates
        failure.</para>
      </section><!-- Level 2 -->
    </section><!-- Level 1 -->

    <section id="util-gfix"><!-- Level 1 section -->
      <title>gfix Server Utility</title>

      <para>Changes to the gfix utility include:</para>
        <section id="util-gfix-shut" xreflabel="New Shutdown Modes"><!-- Level 2 section -->
        <sectioninfo>
          <title>New Shutdown States (Modes)</title>
          <author><firstname>N. Samofatov,</firstname><surname>D. Yemanov</surname></author>
        </sectioninfo>

        <para>The options for <function>gfix -shut[down]</function> have been
          extended to include two extra states or modes to govern the
          shutdown.</para>

        <para>
        <emphasis role="bold">New Syntax Pattern</emphasis>
        </para>

        <programlisting>
      gfix &lt;command&gt; [&lt;state&gt;] [&lt;options&gt;]

  &lt;command&gt; ::= {-shut | -online}
  &lt;state&gt; ::= {normal | multi | single | full}
  &lt;options&gt; ::= {[-force | -tran | -attach] &lt;timeout&gt;}
        </programlisting>

        <para>- <quote>normal</quote> state = online database</para>

        <para>- <quote>multi</quote> state = multi-user shutdown mode (the legacy one,
        unlimited attachments of SYSDBA/owner are allowed)</para>

        <para>- <quote>single</quote> state = single-user shutdown (only one attachment is
        allowed, used by the restore process)</para>

        <para>- <quote>full</quote> state = full/exclusive shutdown (no attachments are
        allowed)</para>

        <note>
          <para><quote>Multi</quote> is the default state for -shut, <quote>normal</quote> is the
          default state for -online.</para>
        </note>

        <para>The modes can be switched sequentially:</para>

        <blockquote>
          <para>normal &lt;-&gt; multi &lt;-&gt; single &lt;-&gt; full</para>
        </blockquote>

        <para>
        <emphasis role="bold">Examples</emphasis>
        </para>

        <programlisting>
  gfix -shut single -force 0
  gfix -shut full -force 0
  gfix -online single
  gfix -online
        </programlisting>

       <para>You cannot use <function>-shut</function> to bring a database
        one level <quote>more online</quote> and you cannot use
        <function>-online</function> to make a database more protected (an
        error will be thrown).</para>

        <para>For example, these sequence-pairs are prohibited:</para>

        <programlisting>
  gfix -shut single -force 0
  gfix -shut multi -force 0
::
  gfix -online
  gfix -online full
::
  gfix -shut -force 0
  gfix -online single
        </programlisting>

        <important id="util-gfix-shut-impt">
          <title>Timeout</title>
          <para>As before, the timeout is in seconds.  In the case of the -attach and
          -tran timeouts, the timeout determines how long the engine will wait for any
          attached clients to complete their work and log off.  The shutdown request should
          return the SQLCode -902 message <function>shutfail</function> (ISC code 335544557),
          <quote>Database shutdown unsuccessful</quote> if there are still active attachments
          when the timeout expires.</para>

          <para>However, there is a known issue with the implementation of the new modes.  A
          regression occurred, whereby the said message is returned but the engine does not
          revert the database to the <emphasis>online</emphasis> state, as it should.  It affects
          all versions of Firebird up to and including v.2.0.5 and v.2.1.3, and all v.2.5 alphas,
          betas and release candidates.</para>
        </important>
      </section><!-- Level 2 -->
    </section><!-- Level 1 -->
  </chapter>