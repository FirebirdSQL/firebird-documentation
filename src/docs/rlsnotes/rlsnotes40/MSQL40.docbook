<chapter id="rnfb40-msql">
  <chapterinfo>
    <title>Management Statements</title>
  </chapterinfo>

  <para>Over the more recent releases of Firebird a new class of DSQL statement
    has emerged in Firebird's SQL lexicon, usually for administering aspects of the
    client/server environment.  Typically, such statements commence with the
    verb <code>SET</code>, especially those introduced in Firebird 4.</para>

  <note>
    <para>Some statements of this class, introduced earlier, use the 
    verb <code>ALTER</code>, although management statements should not be confused 
    with DDL <code>ALTER</code> statements that modify database objects like tables, 
    views, procedures, roles, et al.</para>
  </note>

  <para>Management statements can run anywhere DSQL can run but, typically, the developer
  will want to run a management statement in a database trigger.  In past releases, management
  statements were treated in PSQL like DDL, precluding them from running directly inside a 
  PSQL module.  From Firebird 4 forward, a pre-determined set of them can be used directly in 
  PSQL modules without the need to wrap them in an <code>EXECUTE STATEMENT</code> block.  
  For more details of the current set,
  see <link linkend="rnfb40-psql-mngment-stmts">Allow Management Statements in 
  PSQL Blocks</link> in the PSQL chapter.</para>
    
  <para>Most of the management statements introduced in Firebird 4 affect the current 
  connection (<quote>session</quote>) only, and do not require any authorization over and 
  above the login privileges of a current user without elevated privileges.</para>

  <para>Some management statements operate beyond the scope of the current session. Examples are 
  the <code>ALTER DATABASE ..</code> statements to control <emphasis>nBackup</emphasis> or 
  the <code>ALTER EXTERNAL CONNECTIONS POOL</code> statements introduced in Firebird 4 to manage 
  connection pooling.  A new set of <firstterm>system privileges,</firstterm> analogous with 
  SQL privileges granted for database objects, is provided for assignment to a role, to enable the
  required authority to run a specific management statement in this category.  For details,
  refer to <link linkend="rnfb4-enhancedprivs">Enhanced System Privileges</link>
  in the Security chapter.</para>
    
  <section id="rnfb40-msql-connpooling"><!-- Level 1 -->
    <title>Connections Pooling Management</title>

    <para>A group of management statements for use with connections pooling.
    <important>
      <title>Authorization</title>
      <para>A role carrying the new system privilege <code>MODIFY_EXT_CONN_POOL</code> is
      required to run the statements.</para>
    </important>
    </para>

    <section id="rnfb40-msql-connpooling-alter-ext"><!-- Level 2 -->
      <title>ALTER EXTERNAL CONNECTIONS POOL</title>

      <para>The new statement <code>ALTER EXTERNAL CONNECTIONS POOL </code> has
      been added to the repertoire for managing the external connections pool.</para>
      <para>The syntax is:
        <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL { &lt;parameter variants&gt; }
        </literallayout>
      </para>
      <para>When prepared it is described like a DDL statement but its effect
      is immediate&mdash;it is executed immediately and completely,
      without waiting for transaction commit.</para>
      <para>The statements can be issued from any connection and changes are
      applied to the in-memory instance of the pool in the current Firebird
      process. If the process is a Classic one, a change submitted there
      does not affect other Classic processes.</para>
      <para>Changes made with <code>ALTER EXTERNAL CONNECTIONS POOL</code> are
      not persistent:  after a restart, Firebird will use the pool settings
      configured in <filename>firebird.conf</filename> by
      <code>ExtConnPoolSize</code> and <code>ExtConnPoolLifeTime</code>.
      </para>

      <bridgehead renderas="sect4">Full Syntax</bridgehead>
      <para>Full syntax for the variants follows.</para>
      <para>To set the maximum number of idle connections:
      <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL SET SIZE &lt;int&gt;
      </literallayout>
      Valid values are from 0 to 1000.  Setting it to zero disables
      the pool.  The default value is set using the parameter
      <code>ExtConnPoolSize</code> in <filename>firebird.conf</filename>.
      </para>

      <para>To set the lifetime of an idle connection:
      <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL SET LIFETIME &lt;int&gt; &lt;time_part&gt;
      </literallayout>
      where <code>&lt;time_part&gt;</code> is <code>SECOND | MINUTE | HOUR</code>.

      Valid values are from <code>1 SECOND</code> to <code>24 HOUR</code>. The
      default value (in seconds) is set using the parameter <code>ExtConnPoolLifetime</code>
      in <filename>firebird.conf</filename>.
      </para>

      <para>To close all idle connections and instigate dissociation of all
      active connections immediately they become unused:
      <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL CLEAR ALL
      </literallayout>
      </para>

      <para>To close expired idle connections:
      <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL CLEAR OLDEST
      </literallayout>
      </para>

    </section><!-- rnfb40-ddl-connpooling-alter-ext -->

  </section><!-- rnfb40-ddl-connpooling -->
    
  <section id="rnfb40-msql-alter-session-reset"><!-- Level 1 -->
    <title>ALTER SESSION RESET</title>

    <para>This statement is used to reset all modifications of the current
    session context to its default state. In other words, it effectively
    undoes all changes performed using any of the session-level
    <code>SET</code> statements.</para>

  </section><!-- rnfb40-ddl-alter-session-reset -->

  <section id="rnfb40-msql-timezone-statements"><!-- Level 1 -->
    <title>Time Zone Management</title>

    <para>Statement syntax has been added to support management of the
    timezone features for the current connection.</para>

    <section id="rnfb40-timezone-settimezone"><!-- Level 2 -->
      <title>SET TIME ZONE</title>

      <para>Changes the session time zone.

      <bridgehead renderas="sect4">Syntax</bridgehead>
      <literallayout class="monospaced">
  SET TIME ZONE { &lt;time zone string&gt; | LOCAL }
      </literallayout>
      </para>
      <bridgehead renderas="sect4">Examples</bridgehead>
      <programlisting>
set time zone '-02:00';
set time zone 'America/Sao_Paulo';
set time zone local;
      </programlisting>

    </section>

  </section><!-- rnfb40-msql-timezone-statements -->

  <section id="rnfb40-msql-timeout-statements"><!-- Level 1 -->
    <title>Timeout Management</title>

    <para>The timeout periods for session and statement timeouts can
    be managed at session level using the management statements 
    <link linkend="rnfb40-session-timeouts-sql"><code>SET SESSION IDLE TIMEOUT</code></link> 
    and
    <link linkend="rnfb40-stmnt-timeouts-setting"><code>SET STATEMENT TIMEOUT</code></link>, 
    respectively.</para>

  </section><!-- rnfb40-msql-timeout-statements -->
    
  <section id="rnfb40-msql-set-decfloat-props"><!-- Level 1 -->
    <title>Setting DECFLOAT Properties</title>

    <para>Syntax:
      <literallayout class="monospaced">
  SET DECFLOAT &lt;property-name&gt; [TO] &lt;value&gt;
      </literallayout>
    are available for controlling the properties of the
    <code>DECFLOAT</code> data type for the current session.
    </para>

    <para>Possible properties and their values are the following:
      <itemizedlist>
        <listitem>&nbsp;SET DECFLOAT ROUND &lt;mode&gt; controls the rounding mode used in 
        operations with DECFLOAT values. Valid modes are: 
          <simplelist type="horiz" columns="2">
            <member>CEILING</member> <member>towards +infinity</member>
            <member>UP</member> <member>away from 0</member>
            <member>HALF_UP</member> <member>to nearest, if equidistant, then up</member>
            <member>HALF_EVEN</member> <member>to nearest, if equidistant, ensure last digit
            in the result will be even</member>
            <member>HALF_DOWN</member> <member>to nearest, if equidistant, then down</member>
            <member>DOWN</member> <member>towards 0</member>
            <member>FLOOR</member> <member>towards -infinity</member>
            <member>REROUND</member> <member>up if digit to be rounded is 0 or 5, down in other cases</member>
          </simplelist>
          <para>The default rounding mode is <code>HALF-UP</code>. The initial configuration may be specified
          via API by using DPB tag <emphasis>isc_dpb_decfloat_round</emphasis> followed by the string value.</para>
        </listitem>

        <listitem>SET DECFLOAT TRAPS TO &lt;comma-separated traps list which may be empty&gt;
        controls which exceptional conditions cause a trap. Valid traps are: 
          <simplelist type="horiz" columns="2">
            <member>Division_by_zero</member> <member>(set by default)</member>
            <member>Inexact</member> <member>---</member>
            <member>Invalid_operation</member> <member>(set by default)</member>
            <member>Overflow</member> <member>(set by default)</member>
            <member>Underflow</member> <member>---</member>
          </simplelist>
          <para>The initial configuration may be specified via API by using DPB tag
          <emphasis>isc_dpb_decfloat_traps</emphasis> followed by the string value.</para>
        </listitem>

      </itemizedlist>

    </para>

  </section><!-- rnfb40-msql-set-decfloat-props -->

  <section id="rnfb40-msql-set-bind">
    <title>Setting Data Type Coercion Rules</title>

    <para>Syntax:
      <literallayout class="monospaced">
  SET BIND OF { &lt;type-from&gt; | TIME ZONE } TO { &lt;type-to&gt; | LEGACY | NATIVE | EXTENDED }
      </literallayout>
    This management statement makes it possible to substitute one data type with another one when
    performing the client-server interaction. In other words, <emphasis>type-from</emphasis> returned
    by the engine is represented as <emphasis>type-to</emphasis> in the client API.</para>
    <para>When incomplete type definition is used (i.e. simply CHAR instead of CHAR(n)) in the
    <emphasis>FROM</emphasis> part, the coercion is performed for all CHAR columns. Special incomplete
    type <code>TIME ZONE</code> stands for all types WITH TIME ZONE (namely TIME and TIMESTAMP).
    When incomplete type definiton is used in the <emphasis>TO</emphasis> part, the engine defines
    missing details about that type automatically based on source column.</para>
    <para>From the <code>SET BIND</code> point of view there is no difference between NUMERIC and
    DECIMAL datatypes. Changing binding of any NUMERIC does not affect the underlying integer type.
    On contrary, changing binding of the INTEGER datatype also affects dependent NUMERICs.</para>
    <para>Special format <code>LEGACY</code> is used when a data type, missing in previous Firebird
    version, should be represented in a way, understandable by old client software (possibly with
    some data loss). The coercion rules applied in this case are shown in the table below.
    <table>
      <title>NATIVE to LEGACY coercion rules</title>
      <tgroup cols="2">
        <thead>
          <row>
            <entry>Native data type</entry>
            <entry>Legacy data type</entry>
		  </row>
        </thead>
        <tbody>
          <row>
            <entry>BOOLEAN</entry>
            <entry>CHAR(5)</entry>
		  </row>
          <row>
            <entry>DECFLOAT</entry>
            <entry>DOUBLE PRECISION</entry>
		  </row>
          <row>
            <entry>NUMERIC(38)</entry>
            <entry>NUMERIC(18)</entry>
		  </row>
          <row>
            <entry>TIME WITH TIME ZONE</entry>
            <entry>TIME WITHOUT TIME ZONE</entry>
		  </row>
          <row>
            <entry>TIMESTAMP WITH TIME ZONE</entry>
            <entry>TIMESTAMP WITHOUT TIME ZONE</entry>
		  </row>
        </tbody>
      </tgroup>
    </table>
    </para>
    <para>Using <code>EXTENDED</code> in the <emphasis>TO</emphasis> part causes the engine to use an
    extended form of the <emphasis>FROM</emphasis> data type. Currently it works only for
    TIME/TIMESTAMP WITH TIME ZONE, they are coerced to EXTENDED TIME/TIMESTAMP WITH TIME ZONE. The
    <code>EXTENDED</code> type contains both the time zone name and the corresponding GMT offset, so it
    remains usable if the client application cannot process named time zones properly (e.g. due to the
    missing ICU library).</para>
    <para>Setting some binding to <code>NATIVE</code> means to reset the existing coercion rules for
    this data type and return it in the native format.</para>
    <para>Examples:</para>
    <programlisting>
SELECT CAST('123.45' AS DECFLOAT(16)) FROM RDB$DATABASE;	--native

                   CAST
=======================
                 123.45

SET BIND OF DECFLOAT TO DOUBLE PRECISION;
SELECT CAST('123.45' AS DECFLOAT(16)) FROM RDB$DATABASE;	--double

                   CAST
=======================
      123.4500000000000

SET BIND OF DECFLOAT(34) TO CHAR;
SELECT CAST('123.45' AS DECFLOAT(16)) FROM RDB$DATABASE;	--still double

                   CAST
=======================
      123.4500000000000

SELECT CAST('123.45' AS DECFLOAT(34)) FROM RDB$DATABASE;	--text

CAST
==========================================
123.45
    </programlisting>
    <para>In the case of missing ICU on the client side:</para>
    <programlisting>
SELECT CURRENT_TIMESTAMP FROM RDB$DATABASE;

                                        CURRENT_TIMESTAMP
=========================================================
2020-02-21 16:26:48.0230 GMT*

SET BIND OF TIME ZONE TO EXTENDED;
SELECT CURRENT_TIMESTAMP FROM RDB$DATABASE;

                                        CURRENT_TIMESTAMP
=========================================================
2020-02-21 19:26:55.6820 +03:00
    </programlisting>

  </section><!-- rnfb40-msql-set-bind -->

</chapter>

