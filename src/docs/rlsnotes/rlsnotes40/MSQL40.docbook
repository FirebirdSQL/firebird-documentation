<chapter id="rnfb40-msql">
  <chapterinfo>
    <title>Management Statements</title>
  </chapterinfo>
  <para>Over the more recent releases of Firebird a new class of DSQL statement
    has emerged in Firebird's SQL lexicon, usually for administering aspects of the
    client/server environment.  Typically, such statements commence with the
    verb <code>SET</code>, especially those introduced in Firebird 4.</para>
    <note>
      <para>Some statements of this class, introduced earlier, use the 
      verb <code>ALTER</code>, although management statements should not be confused 
      with DDL <code>ALTER</code> statements that modify database objects like tables, 
      views, procedures, roles, et al.</para>
    </note>

  <section id="rnfb40-msql-statements"><!-- L1 -->
    <title>Use of Management Statements</title>
    <para>Management statements can run anywhere DSQL can run but, typically, the developer
    will want to run a management statement in a database trigger.  In past releases, management
    statements were treated in PSQL like DDL, precluding them from running directly inside a 
    PSQL module.  From Firebird 4 forward, a pre-determined set of them can be used directly in 
    PSQL modules without the need to wrap them in an <code>EXECUTE STATEMENT</code> block.  
    For more details of the current set,
    see <link linkend="rnfb40-psql-mngment-stmts">Allow Management Statements in 
    PSQL Blocks</link> in the PSQL chapter.</para>
    
    <section id="rnfb40-msql-authority"><!-- L2 -->
      <title>Authorization</title>
      <para>Most of the management statements introduced in Firebird 4 affect the current 
      connection (<quote>session</quote>) only, and do not require any authorization over and 
      above the login privileges of a current user without elevated privileges.</para>

      <para>Some management statements operate beyond the scope of the current session. Examples are 
      the <code>ALTER DATABASE ..</code> statements to control <emphasis>nBackup</emphasis> or 
      the <code>ALTER EXTERNAL CONNECTIONS POOL</code> statements introduced in Firebird 4 to manage 
      connection pooling.  A new set of <firstterm>system privileges,</firstterm> analogous with 
      SQL privileges granted for database objects, is provided for assignment to a role, to enable the
      required authority to run a specific management statement in this category.  For details,
      refer to <link linkend="rnfb4-enhancedprivs">Enhanced System Privileges</link>
      in the Security chapter.</para>
    </section><!-- L2 -->
    
    <section id="rnfb40-msql-connpooling"><!-- Level 2 -->
      <title>Management Statements for Use with Connections Pooling</title>
      <para>A group of management statements for use with connections pooling.
      <important>
        <title>Authorization</title>
        <para>A role carrying the new system privilege <code>MODIFY_EXT_CONN_POOL</code> is
        required to run the statements.</para>
      </important>
      </para>
      <section id="rnfb40-msql-connpooling-alter-ext"><!-- Level 3 -->
        <title>ALTER EXTERNAL CONNECTIONS POOL Statement</title>
        <para>The new statement <code>ALTER EXTERNAL CONNECTIONS POOL </code> has
        been added to the repertoire for managing the external connections pool.</para>
        <para>The syntax is:
          <literallayout class="monospaced">
	ALTER EXTERNAL CONNECTIONS POOL { &lt;parameter variants&gt; }
          </literallayout>
        </para>
        <para>When prepared it is described like a DDL statement but its effect
        is immediate&mdash;it is executed immediately and completely,
        without waiting for transaction commit.</para>
        <para>The statements can be issued from any connection and changes are
        applied to the in-memory instance of the pool in the current Firebird
        process. If the process is a Classic one, a change submitted there
        does not affect other Classic processes.</para>
        <para>Changes made with <code>ALTER EXTERNAL CONNECTIONS POOL</code> are
        not persistent:  after a restart, Firebird will use the pool settings
        configured in <filename>firebird.conf</filename> by
        <code>ExtConnPoolSize</code> and <code>ExtConnPoolLifeTime</code>.
        </para>

        <bridgehead renderas="sect4">Full Syntax</bridgehead>
        <para>Full syntax for the variants follows.</para>
        <para>To set the maximum number of idle connections:
        <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL SET SIZE &lt;int&gt;
        </literallayout>
        Valid values are from 0 to 1000.  Setting it to zero disables
        the pool.  The default value is set using the parameter
        <code>ExtConnPoolSize</code> in <filename>firebird.conf</filename>.
        </para>

        <para>To set the lifetime of an idle connection:
        <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL SET LIFETIME &lt;int&gt; &lt;time_part&gt;
        </literallayout>
        where <code>&lt;time_part&gt;</code> is <code>SECOND | MINUTE | HOUR</code>.

        Valid values are from <code>1 SECOND</code> to <code>24 HOUR</code>. The
        default value (in seconds) is set using the parameter <code>ExtConnPoolLifetime</code>
        in <filename>firebird.conf</filename>.
        </para>

        <para>To close all idle connections and instigate dissociation of all
        active connections immediately they become unused:
        <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL CLEAR ALL
        </literallayout>
        </para>

        <para>To close expired idle connections:
        <literallayout class="monospaced">
  ALTER EXTERNAL CONNECTIONS POOL CLEAR OLDEST
        </literallayout>
        </para>
      </section><!-- rnfb40-ddl-connpooling-alter-ext L3 -->
      <section id="rnfb40-msql-connpooling-alter-session"><!-- Level 3 -->
        <title>ALTER SESSION RESET Statement</title>
        <para>The statement <code>ALTER SESSION RESET</code> is used to 
        attempt a reset of an unused connection in the pool.  For details,
        see <link linkend="rnfb40-connection-pool-how">How the Connection 
        Pool Works</link> in the Engine chapter.</para>
      </section><!-- rnfb40-ddl-connpooling-alter-session L3 -->
    </section><!-- rnfb40-ddl-connpooling L2 -->
    
    <section id="rnfb40-msql-timezone-statements">
      <title>Management Statements Pertaining to Time Zone Support</title>
      <para>Statement syntax has been added to support management of the
      timezone features for the current connection.</para>

      <section id="rnfb40-timezone-settimezone"><!-- Level 3 -->
        <title>SET TIME ZONE</title>
        <para>Changes the session time zone.

        <bridgehead renderas="sect4">Syntax</bridgehead>
        <literallayout class="monospaced">
  SET TIME ZONE { &lt;time zone string&gt; | LOCAL }
        </literallayout>
        </para>
        <bridgehead renderas="sect4">Examples</bridgehead>
        <programlisting>
set time zone '-02:00';
set time zone 'America/Sao_Paulo';
set time zone local;
        </programlisting>
      </section>
      
      <section id="rnfb40-timezone-settimezonebind"><!-- Level 3 -->
        <title>SET TIME ZONE BIND</title>
        <para>Changes the session time zone bind format for compatibility 
        with old clients.  The default is configured as <code>NATIVE</code>, 
        which means that <code>TIME WITH TIME ZONE</code> and <code>TIMESTAMP 
        WITH TIME ZONE</code> expressions are returned to the client with the 
        new data types.</para>
        <para>Old clients may not understand the new data types, so the bind 
        can be configured as <code>LEGACY</code> to make the appropriate conversion
        and return the expressions as <code>TIME WITHOUT TIME ZONE</code> and 
        <code>TIMESTAMP WITHOUT TIME ZONE</code>, respectively.</para>

        <note>
          <para>The bind configuration is also applicable to input parameters.</para>
        </note>
        <bridgehead renderas="sect4">Syntax</bridgehead>
        <literallayout class="monospaced">
  SET TIME ZONE BIND { NATIVE | LEGACY }
        </literallayout>

        <bridgehead renderas="sect4">Examples</bridgehead>
        <programlisting>
set time zone bind native;
set time zone bind legacy;
        </programlisting>
      </section>
    </section><!-- rnfb40-msql-timezone-statements L2 -->

    <section id="rnfb40-msql-timeout-statements">
      <title>Management Statements Pertaining to Timeouts</title>
      <para>The timeout periods for session and statement timeouts can
      be managed at session level using the management statements 
      <link linkend="rnfb40-session-timeouts-sql"><code>SET SESSION IDLE TIMEOUT</code></link> 
      and
      <link linkend="rnfb40-stmnt-timeouts-setting"><code>SET STATEMENT TIMEOUT</code></link>, 
      respectively.</para>
    </section>
    
    <section id="rnfb40-msql-decfloat-props">
      <title>Statements to Set DECFLOAT Properties</title>
      <para>Management statements of the form
        <literallayout class="monospaced">
  SET DECFLOAT &lt;property-name&gt; [TO] &lt;value&gt;
        </literallayout>
      are available for controlling the properties of the
      <code>DECFLOAT</code> data type for the current session.  For details, 
      see the topic <link linkend="rnfb40-ddl-decfloat-sessionctl">Session Control Operator 
      SET DECFLOAT</link> in the DDL chapter.
      </para>
    </section>

  </section><!-- rnfb40-msql-statements L1 -->

</chapter>
