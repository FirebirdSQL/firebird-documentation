<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="rnfb40-fbconf">
  <title>Configuration Additions and Changes</title>

  <section id="rnfb40-config-timeouts">
    <title>Parameters for Timeouts</title>
    <para>Two new parameters are available for global and per-database
    configuration, respectively, of server-wide and database-wide idle session and
    statement timeouts.  They are discussed in detail elsewhere (see links).</para>

    <section id="rnfb40-config-timeouts-session">
      <title>ConnectionIdleTimeout</title>
      <para>The value is integer, expressing minutes. Study the notes on
      idle session timeouts carefully to understand how this configuration fits in
      with related settings via SQL and the API.</para>
      <para>See <link linkend="rnfb40-session-timeouts-setting">Setting the Session Timeout</link>
      in the chapter <quote>Changes to the Firebird Engine</quote>.</para>
    </section>

    <section id="rnfb40-config-timeouts-stmnt">
      <title>StatementTimeout</title>
      <para>The value is integer, expressing seconds. Study the notes on
      statement timeouts carefully to understand how this configuration fits in
      with related settings via SQL and the API.</para>
      <para>See <link linkend="rnfb40-stmnt-timeouts-setting">Setting a Statement 
      Timeout</link> in the chapter <quote>Changes to the Firebird Engine</quote>.</para>
    </section>

  </section><!-- rnfb40-config-timeouts -->
    
  <section id="rnfb40-config-connpool">
    <title>Parameters for External Connection Pooling</title>
    <para>These parameters enable customization of aspects of pooling 
    external connections.</para>

    <section id="rnfb40-config-pool-size"><!-- Level 3 -->
      <title>ExtConnPoolSize</title>
      <para>Configures the maximum number of idle connections allowed in
      the pool.  It is an integer, from 0 to 1000.  The installation default
      is 0, which disables the connection pool.</para>
    </section><!-- L3 -->

    <section id="rnfb40-config-pool-lifetime"><!-- Level 3 -->
      <title>ExtConnPoolLifetime</title>
      <para>Configures the number of seconds a connection should stay available 
      after it has gone idle.  The installation default is 7200 seconds.</para>
    </section><!-- L3 -->

  </section><!-- rnfb40-config-connpool -->

  <section id="rnfb40-config-max-id-lgth">
    <title>Parameters to Restrict Length of Object Identifiers</title>

    <para>Object identifiers in an ODS 13 database can be up to 63 characters in
    length and the engine stores them in UTF-8, not UNICODE_FSS as previously.
    Two new global or per-database parameters are available if you need to restrict
    either the byte-length or the character-length of object names in ODS 13 databases
    for some reason.</para>

    <para>Longer object names are optional, of course.  Reasons you might need to 
    restrict their length could include:
      <itemizedlist spacing="compact">
        <listitem><para>Constraints imposed by the client language interface of
        existing applications, such as <emphasis>gpre</emphasis> or Delphi</para></listitem>
        <listitem><para>In-house coding standards</para></listitem>
        <listitem><para>Interoperability for cross-database applications such as
        a third-party replication system or an in-house system that uses
        multiple versions of Firebird</para></listitem>
      </itemizedlist>
    This is not an exhaustive list.  It is the responsibility of the developer
    to test usage of longer object names and establish whether length restriction
    is necessary.</para>

    <para>Whether setting one or both parameters has exactly the same effect will
    depend on the characters you use.  Any non-ASCII character requires 2 bytes or 
    more in UTF-8, so one cannot assume that byte-length and
    character-length have a direct relationship in all situations.</para>
    <para>The two settings are verified independently and if either constrains
    the length limit imposed by the other, use of the longer identifier will be 
    disallowed.</para>

    <warning><para>If you set either parameter globally, i.e., in firebird.conf,
    it will affect all databases, including the security database.  That has
    the potential to cause problems!</para></warning>

    <section id="rnfb40-config-max-id-bytes">
      <title>MaxIdentifierByteLength</title>
      <para>Sets a limit for the number of bytes allowed in an
      object identifier.  It is an integer, defaulting to 252 bytes,
      i.e., 63 characters * 4, 4 being the maximum number of bytes
      for each character.</para>
      <para>To set it to the limit in previous Firebird versions,
      use 31.</para>
    </section>

    <section id="rnfb40-config-max-id-chars">
      <title>MaxIdentifierCharLength</title>
      <para>Sets a limit for the number of characters allowed in an
      object identifier.  It is an integer, defaulting to 63, the
      new limit implemented in Firebird 4.</para>
    </section>

  </section> <!-- rnfb40-config-max-id-lgth -->
    
  <section id="rnfb40-config-read-consistency">
    <title>Parameters Supporting Read Consistency in Transactions</title>
    <para>Firebird 4 takes a <link linkend="rnfb40-engine-commit-order">new approach 
    to read consistency within transaction snapshots</link>, enabling, amongst other benefits, 
    a sustained consistent read for statements within READ COMMITTED transactions.
    This group of parameters allows for some customisation of the elements involved.</para>

    <section id="rnfb40-config-readconsistency">
      <title>ReadConsistency</title>
      <para>For now, existing applications can be tested with and without the new 
      <link linkend="rnfb40-engine-read-consistency">READ COMMITTED READ 
      CONSISTENCY</link> isolation level by setting this parameter. Possible values are 1 and 0.
      <variablelist>
        <varlistentry>
          <term>ReadConsistency = 1</term>
          <listitem><para>(Default) The engine ignores the specified [NO] RECORD VERSION sub-level
          and forces all read-committed transactions to be READ COMMITTED READ CONSISTENCY.</para></listitem>
        </varlistentry>
        <varlistentry>
          <term>ReadConsistency = 0</term>
          <listitem><para>Allows the legacy engine behaviour, with the RECORD VERSION
          and NO RECORD VERSION sub-levels working as before. READ COMMITTED READ
          CONSISTENCY is available but needs to be specified explicitly.</para></listitem>
       </varlistentry>
      </variablelist>
      This behaviour can be defined in <filename>firebird.conf</filename> and/or
      <filename>databases.conf</filename>.</para>
    </section>

    <section id="rnfb40-config-read-tpcblocksize">
      <title>TipCacheBlockSize</title>
      <para>The list of all known transactions with associated Commit Numbers is
      maintained in shared memory. It is implemented as an array whose index is
      a transaction ID and its item value is the corresponding Commit Number. </para>
      <para>The whole array is split into fixed-size blocks containing the CN's
      for all transactions between the OIT and Next Transaction markers.  When
      the <quote>Next Transaction</quote> marker moves out of the scope of the 
      highest block, a new block is allocated.  An old block is released when the 
      <quote>Oldest [Interesting] Transaction</quote> (OIT) marker moves out of
      the scope of the lowest block.</para>

      <para>The default size for a TIP cache block is 4MB,
      providing capacity for 512 * 1024 transactions.  Use this parameter to 
      configure a custom TIP cache block size in <filename>firebird.conf</filename>
      and/or <filename>databases.conf</filename>.</para>
    </section>

    <section id="rnfb40-config-read-snapmemsize">
      <title>SnapshotsMemSize</title>
      <para>To handle garbage collection of record versions younger than
      the Oldest Snapshot, (<quote>intermediate record versions</quote>) the
      engine maintains in shared memory an array that it can search for
      the Commit Number (CN) of a particular record version.  See the
      <link linkend="rnfb40-engine-commit-order-gc">Garbage Collection</link> topic
      the chapter <firstterm>Changes in the Firebird Engine</firstterm>.</para>
      <para>The default initial size of this shared memory block is 64KB but it
      will grow automatically when required. The initial block can be set to a custom
      size in <filename>firebird.conf</filename> and/or
      <filename>databases.conf</filename>.</para>
    </section>

  </section> <!-- rnfb40-config-read-consistency -->

  <section id="rnfb40-config-other">
    <title>Other Parameters</title>

    <section id="rnfb40-config-clientbatchbuf">
      <title>ClientBatchBuffer</title>
      <para>Defines the buffer size used by the client connection for batch-mode
      transmission to the server (when Batch API is used). See the
      <link linkend="rnfb40-apiods-api-batchops">Support for Batch Insert and Update
      Operations in the API</link> topic for more details.</para>
    </section>

    <section id="rnfb40-config-datatypecompat">
      <title>DataTypeCompatibility</title>
      <para>Specifies the compatibility level that defines what SQL data types can be
      exposed to the client API. Currently two options are available: "3.0" and "2.5".
      The "3.0" emulation mode hides data types introduced after Firebird 3.0 release, in
      particular DECIMAL/NUMERIC with precision 19 or higher, DECFLOAT, TIME/TIMESTAMP
      WITH TIME ZONE. The corresponding values are returned via data types already
      supported by Firebird 3.0. The "2.5" emulation mode also converts the BOOLEAN
      data type. See the <link linkend="rnfb4-msql-set-bind-native-to-legacy-coercion-rules">Native to
      Legacy Coercion Rules table</link> for details. This setting allows legacy
      client applications to work with Firebird 4.0 without recompiling and adjusting
      them to understand the new data types.</para>
    </section>

    <section id="rnfb40-config-deftimezone">
      <title>DefaultTimeZone</title>
      <para>Defines the time zone used when the client session does not specify it
      explicitly. If left empty, the default is the operating system time zone.
      When set at the server side, it's the default session time zone for attachments.
      When set at the client side, it's the default time zone used with client-side
      API functions.</para>
    </section>

    <section id="rnfb40-config-outputredirection">
      <title>OutputRedirectionFile</title>
      <para>Allows to (optionally) redirect server's stdout/stderr streams to some
      user-defined file. By default these streams are opened by the server but the output
      is discarded. Available as a global setting inside <filename>firebird.conf</filename>.</para>
    </section>

    <section id="rnfb40-config-srp256">
      <title>Srp256 becomes the default authentication method</title>
      <para>See Tracker ticket
      <ulink url="http://tracker.firebirdsql.org/browse/CORE-5788">CORE-5788</ulink></para>
      <para>The Secure Remote Password authentication plugin now uses the SHA-256 algorithm
      to calculate the client's proof for both server and client sides (see AuthServer and
      AuthClient settings in <filename>firebird.conf</filename>). For backward compatbility,
      the client is configured to use the old Srp plugin (which implements the SHA-1 algorithm)
      as a fallback. This setup allows to communicate with Firebird 3 servers that are not
      configured to use Srp256 (available since v3.0.4).</para>
    </section>

    <section id="rnfb40-config-chacha">
      <title>ChaCha is added as a default wire encryption method</title>
      <para><code>WireCryptPlugin</code> setting now defaults to ChaCha#20 as a wire
      encryption algorithm. If the appropriate plugin is missing, then Alleged RC4 (aka ARC4)
      algorithm is used.</para>
    </section>

    <section id="rnfb40-config-tempcachelimit">
      <title>TempCacheLimit at database level</title>
      <para>See Tracker ticket
      <ulink url="http://tracker.firebirdsql.org/browse/CORE-5718">CORE-5718</ulink></para>
      <para><code>TempCacheLimit</code>, for setting the maximum amount of
      temporary space that can be cached in memory, can now be configured at
      database level, i.e., in <filename>databases.conf</filename>. Previously,
      it was available only as a global setting for all databases.</para>
    </section>

  </section> <!-- rnfb40-config-read-other -->

</chapter>

