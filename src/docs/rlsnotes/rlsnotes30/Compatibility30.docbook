<chapter id="rnfb30-compat">
  <chapterinfo>
    <title>Compatibility Issues</title>
  </chapterinfo>
    <para>In this section are features and modifications that might affect the way you have
    installed and used Firebird in earlier releases.</para>

    <section id="rnfb30-compat-tools"><!-- L1 -->
      <title>Where Are the Tools?</title>
      <para>On Windows, you will find all of the executable programs, including the
      command-line and shell tools, in the Firebird installation (root) folder.  In
      previous versions they were in a folder beneath the root folder, named ..\bin.</para>
      <para>On POSIX platforms, you will find the tools and other executable programs in
      similar locations to those used for earlier versions.  Exactly <emphasis>where</emphasis>
      depends on the distribution you are using.</para>
    </section>

    <section id="rnfb30-compat-windoze"><!-- L1 -->
      <title>Other Windows Changes</title>
      <itemizedlist>
        <listitem>Notice that the installer no longer gives the option to build <filename>fbclient.dll</filename>
        as <filename>gds32.dll</filename> or to locate it in the system folder.  If your applications
        still require this, you will have to do it manually.</listitem>
      </itemizedlist>
    </section>

    <section id="rnfb30-compat-aliasesconf"><!-- L1 -->
      <title>aliases.conf Is No More</title>
      <para>The file <filename>aliases.conf</filename> is replaced by <filename>databases.conf</filename>
      in the Firebird root directory.  The format for database aliases has not changed so you can
      copy/paste the contents of your existing <filename>aliases.conf</filename> file into
      <filename>databases.conf</filename> successfully. The new file is capable of carrying a lot
      more configuration detail, however, to enable database-level configuration of many features 
      that were previously available only at the global server level.</para>
    </section>

    <section id="rnfb30-compat-embedded"><!-- L1 -->
      <title>Embedded Connections</title>
      <para>For an embedded connection, an authenticated login is no longer required on POSIX
      platforms.  If  you provide a user name and password, the password is ignored.  Applications
      may still require a user name and possibly a role name, due to SQL privileges in
      databases.</para>
      <para>This feature is new for embedded Firebird on POSIX but it is the way embedded always
      worked on Windows, when the embedded engine was a separate executable.</para>
    </section>

    <section id="rnfb30-compat-initsec"><!-- L1 -->
      <title>Initializing the Security Database</title>
      <para>By default, Firebird 3 is configured for the new authentication model which uses
      SRP to work with user passwords and generate unique session identifiers for traffic
      encryption. The security database (<filename>security3.fdb</filename>) has no predefined
      users.  This is intentional.</para>
      <para>However, when using the standard installers for Windows, Linux and MacOSX,
      the SYSDBA user is created during the final step of the installation, with a password
      that is either random or defined via a user input routine.</para>

      <para>In a situation where the SYSDBA initialization step either fails, or is missing from
      an OS-specific install process, such as a Windows <filename>.zip</filename> kit install or a
      dedicated POSIX platform port, it may be necessary to initialize the security database
      manually for use with the SRP plugins. You will
      need to create the user SYSDBA and set up the password for it using SQL CREATE USER command
      syntax in embedded mode as your first step to getting access to databases and utilities.</para>

      <para>The <emphasis>gsec</emphasis> utility can be used instead but, having been deprecated,
      it is not discussed here.</para>

      <important>
        <para>This initialization is not required and should NOT be performed if you have
        configured the server to use legacy (pre-Firebird 3 style) authentication and user
        management. The legacy security plugins totally preserve the legacy behaviour
        and thus contain the legacy record for SYSDBA with <quote>masterke</quote> as the
        initial password.</para>
        <para>Instructions for configuring <filename>firebird.conf</filename> for legacy
        authentication behaviour are in <link linkend="rnfb30-compat-legacyauth">the
        next section</link>.</para>
      </important>

      <section id="rnfb30-compat-sysdba"><!-- L2 -->
        <title>Initialization Steps</title>
        <para>Initialization is performed in embedded mode using the <emphasis>isql</emphasis>
        utility.  For an embedded connection, an authentication password is not required and will be
        ignored if you provide one.  An embedded connection will work fine with no login credentials
        and <quote>log you in</quote> using your host credentials if you omit a user name.
        However, even though the user name is not subject to authentication, creating or modifying
        anything in the existing security database requires that the user be SYSDBA; &nbsp;otherwise,
        <emphasis>isql</emphasis> will throw a privilege error for the CREATE USER request.</para>

        <para>The SQL user management commands will work with any open database. Because the sample
        database <filename>employee.fdb</filename> is present in your installation and already
        aliased in <filename>databases.conf</filename>, it is convenient to use it for the user
        management task.</para>

        <orderedlist>
          <listitem>
            <para><emphasis role="bold">Stop the Firebird server.</emphasis>&nbsp; Firebird 3 caches
            connections to the security database aggressively.  The presence of server connections
            may prevent <emphasis>isql</emphasis> from establishing an embedded connection.</para>
          </listitem>

          <listitem>
            <para>In a suitable shell, start an <emphasis>isql</emphasis> interactive session, opening
            the employee database via its alias:</para>
            <literallayout class="monospaced">
  > isql -user sysdba employee
            </literallayout>
          </listitem>

          <listitem>
            <para>Create the SYSDBA user:</para>
            <literallayout class="monospaced">
  SQL> create user SYSDBA password 'SomethingCryptic';
  SQL> commit;
  SQL> quit;
            </literallayout>
            <note>
              <para>The SYSDBA user will have full administrator rights automatically.  Do not
              assign the ADMIN role (RDB$ADMIN) to SYSDBA.</para>
            </note>

            <tip>
              <title>Quick Tip</title>
              <para>From v.3.0.1, the statement
              <function>CREATE OR ALTER USER SYSDBA PASSWORD &lt;password&gt;</function> can be used
              to initialize an empty <function>securityN.fdb</function> security database.</para>
            </tip>
          </listitem>

          <listitem>
            <para>To complete the initialization, start the Firebird server again.  Now you will be
            able to perform a network login to databases, including the security database, using the
            password you assigned to SYSDBA.</para>
          </listitem>
        </orderedlist>

        <para><emphasis role="bold">About Passwords</emphasis></para>
        <itemizedlist>
          <listitem>
            <para>An effective password, using the default user manager Srp, can be up to 20
            characters, although a password of up to 255 characters will be valid.</para>
          </listitem>
          <listitem>
            <para>If you intend in future to configure the server to use legacy authentication
            (not recommended!), then only the first 8 characters of any password,
            including that of the SYSDBA, will be read.</para>
          </listitem>
          <listitem>
            <para><command>masterkey</command> is NOT a recommended password for SYSDBA!</para>
          </listitem>
        </itemizedlist>

      </section><!-- L2 -->
      <section id="rnfb30-compat-authnotes"><!-- L2 -->
        <title>Additional Notes About Security Databases</title>
        <para>Since Firebird 2, users&mdash;including SYSDBA&mdash;could not log in to the security
        database directly. With Firebird 3 it is possible to establish a direct, embedded connection to
        the security database.  With the appropriate configuration parameters, you can control
        the ability to connect remotely to other security databases.</para>

        <para>The <emphasis>gsec</emphasis> utility, although deprecated in Firebird 3, is
        still available for access to <filename>security3.fdb</filename> only. It cannot
        be used to manage a custom user database. It is recommended that database admins
        plan to move away from relying on <emphasis>gsec</emphasis> and become familiar with
        the newer <link linkend="rnfb30-access-sql">SQL user management features</link>.</para>
      </section><!-- L2 -->
    </section><!-- L1 -->

    <section id="rnfb30-compat-legacyauth"><!-- L1 -->
      <title>Legacy Authentication</title>
      <para>If you do not intend to use SRP encrypted log-ins right away and want to use the
      security database&mdash;<filename>security3.fdb</filename>&mdash; as you have done
      in previous Firebird versions, proceed as follows:</para>
      <orderedlist>
        <listitem>
          <para>Using a text editor, open <filename>firebird.conf</filename> and find the entry for
          the parameter <command>UserManager</command>:</para>
          <literallayout class="monospaced">
  #UserManager = Srp
          </literallayout>
          <para>Delete the <quote>#</quote> symbol and change the value to:</para>
          <literallayout class="monospaced">
  UserManager = Legacy_UserManager
          </literallayout>
        </listitem>
        <listitem>
          <para>Find the entry for the <command>WireCrypt</command> parameter:</para>
          <literallayout class="monospaced">
  #WireCrypt = Enabled (for client) / Required (for server)
          </literallayout>
          <para>Delete the <quote>#</quote> symbol and change the value to:</para>
          <literallayout class="monospaced">
  WireCrypt = Enabled
  -- or, if you don't plan to use SRP encryption at all --
  WireCrypt = Disabled
          </literallayout>
        </listitem>
        <listitem>
          <para>Find the entry for the <command>AuthServer</command> parameter:</para>
          <literallayout class="monospaced">
  #AuthServer = Srp, WinSspi, Legacy_Auth
          </literallayout>
          <para>Delete the <quote>#</quote> symbol and change the order of the arguments:</para>
          <literallayout class="monospaced">
  AuthServer = Legacy_Auth, Srp, WinSspi
          </literallayout>
        </listitem>
        <listitem>
          <para>Find the entry for the <command>AuthClient</command> parameter:</para>
          <literallayout class="monospaced">
  #AuthClient = Srp, WinSspi, Legacy_Auth
          </literallayout>
          <para>Delete the <quote>#</quote> symbol and change the order of the arguments:</para>
          <literallayout class="monospaced">
  AuthClient = Legacy_Auth, Srp, WinSspi
          </literallayout>
        </listitem>
        <listitem>
          <para>Save the changes.</para>
        </listitem>
        <listitem>
          <para>Stop and restart Firebird for the changes to take effect.</para>
        </listitem>
      </orderedlist>
      <note>
        <title>Legacy Passwords</title>
        <itemizedlist>
          <listitem><para>The old <command>masterke</command> password is
          available for your first login as SYSDBA.  It is known to the whole world and
          should be changed as soon as possible.</para>
          </listitem>
          <listitem><para>Reminder:  Legacy authentication reads only the first 8 characters
          of any password.</para>
          </listitem>
        </itemizedlist>
      </note>
    </section>

    <section id="rnfb30-compat-upgrade-secdb"><!-- L1 -->
      <title>Upgrading a v.2.x Security Database</title>
      <para>Because of the new authentication model in Firebird 3, upgrading a v.2.5 security
      database (<filename>security2.fdb</filename>) directly for use under Firebird 3 is not
      possible.  However, an upgrade procedure is in place to enable retention of the user
      account data&mdash;user name, first name, etc., but not passwords&mdash; from the
      <filename>security2.fdb</filename> database that was used under v.2.x. servers.</para>

      <para>The SYSDBA user is not touched:  after the upgrade procedure, it will remain
      as it was before.</para>
      <section id="rnfb30-compat-upgrade-secdb-steps"><!-- L2 -->
        <title>Steps</title>
        <note>
          <itemizedlist>
            <listitem>In the commands below, replace <replaceable>masterkey</replaceable> with
            the actual SYSDBA password for the server version, as appropriate.</listitem>
            <listitem>The procedure requires running the script
            <filename>security_database.sql</filename> that is located in the
            <filename>misc/upgrade</filename> directory of your Firebird 3 installation.
            These instructions assume you have a temporary copy of this script in the same
            directory as the <emphasis>isql</emphasis> executable.</listitem>
          </itemizedlist>
        </note>
        <orderedlist>
          <listitem>Under the Firebird 2.5 server, back up the security database.  Here, use
          the SYSDBA password for the v.2.5 installation:
            <literallayout class="monospaced">
  gbak -user sysdba -pas masterkey -b {host/path}security2.fdb security2.fbk
            </literallayout>
          </listitem>

          <listitem>Under the Firebird 3 server, restore a copy of v.2.5 backup.  Here, use
          the SYSDBA password for the v.3 installation:
            <literallayout class="monospaced">
  gbak -user sysdba -pas masterkey -c security2.fbk {host/path}security2db.fdb
            </literallayout>
          </listitem>

          <listitem>Under the Firebird 3 server, go to the directory where the
          <emphasis>isql</emphasis> utility is located and run the upgrade script:
            <literallayout class="monospaced">
  isql -user sysdba -pas masterkey -i security_database.sql {host/path}security2db.fdb
            </literallayout>
          &quot;security2db.fdb&quot; is just a sample name for the database: it can be
          any preferred name.
          </listitem>

          <listitem>The procedure will generate new, random passwords and will output them
          to screen afterwards.  Capture the output and notify users of their new passwords.
          </listitem>
          
          <listitem>When you are ready, shut down Firebird.  Rename <filename>security3.fdb</filename>
          or move it another location;  then rename the upgraded database to <filename>security3.fdb</filename>.
          </listitem>
        </orderedlist>
      </section>
    </section>

    <section id="rnfb30-compat-winlocal"><!-- L1 -->
      <title>Local Connections to Superserver on Windows</title>
      <para>In previous Firebird versions, a serverless protocol known as <quote>Windows
      Local</quote> was available to local clients connecting to Superserver on a
      Windows platform, using the XNET subsystem.  A typical connection string looked like this:
        <literallayout class="monospaced">
  c:\Program Files\Firebird_2_5\examples\empbuild\employee.fdb
        </literallayout>
      Under the new unified server, that form of connection is no longer valid for a
      serverless client connection to Superserver. It attempts to load an embedded server. If
      you try whilst Superserver is connected to your database, you will get a refusal
      message to the effect <quote>File is in use by another process</quote>.</para>
      <para>This is not a bug.  Since Superserver clients share resources, another server
      (in this case, an embedded server) cannot attach a client to the same database that
      Superserver has any clients attached to.</para>
      <para>However, all is not lost.  The XNET subsystem can still do local client
      sessions for Superserver.  You just need a more elaborate connection string now:
          <literallayout class="monospaced">
  xnet://alias-or-path-to-database
        </literallayout>
          So, for our connection to the employee database:
        <literallayout class="monospaced">
  xnet://c:\Program Files\Firebird_3_0\examples\empbuild\employee.fdb
          </literallayout>
          or using an alias:
        <literallayout class="monospaced">
  xnet://employee
        </literallayout>
      </para>
      <note>
        <para>New connection strings are available as alternatives for other local connection
        protocols, too. For more information, see <link linkend="rnfb30-apiods-api-winlocal">New
        Connection Formats for Local Clients on Windows</link>.</para>
      </note>
    </section>

    <section id="rnfb30-compat-config"><!-- level 1 -->
      <title>Configuration Parameters</title>
      <para>The previously deprecated <filename>firebird.conf</filename> parameters
      <command>CompleteBooleanEvaluation</command>, <command>OldColumnNaming</command>
      and <command>OldSetClauseSemantics</command> are no longer supported anymore and
      have been removed.  The lack of one or more of these parameters may break your application
      code, so please check these settings in <filename>firebird.conf</filename> on your older
      server version.</para>
      <para>The parameters <command>UsePriorityScheduler</command>, <command>PrioritySwitchDelay</command>,
      <command>PriorityBoost</command>, <command>LegacyHash</command> and <command>LockGrantOrder</command>
      no longer have any use and have been removed.</para>
      <important>
        <para>Ensure that you study the chapter <link linkend="rnfb30-fbconf">Configuration
        Additions and Changes</link> in preparation for upgrading user software to
        Firebird 3.</para>
      </important>
    </section>

    <section id="rnfb30-compat-systables"><!-- level 1 -->
      <title>System Tables are Now Read-only</title>
      <para>The system tables (RDB$&mdash;) are now read-only.  Attempting any DDL or insert/update/delete
      statement on them will be rejected.</para>
    </section>

    <section id="rnfb30-compat-sql"><!-- level 1 -->
      <title>SQL Language Changes</title>
      <para>It will be necessary to pay attention to some changes in the SQL language implementation.</para>

      <section id="rnfb30-compat-sql_psql-nomixedjoins"><!-- level 2 -->
        <title>Support for Mixed-Syntax Joins is Gone</title>
        <para>Improperly mixed explicit and implicit joins are no longer supported, in accordance with
        the SQL specification. It also means that, in the explicit
        <function>A JOIN B ON &lt;condition&gt;</function>, the condition is not allowed to refer to any
        stream except A and B. See <ulink url="http://tracker.firebirdsql.org/browse/CORE-2812">Tracker
        ticket CORE-2812</ulink> for more details.</para>
      </section>

      <section id="rnfb30-compat-psql-namelengths"><!-- level 2 -->
        <title>Enforcement of Length Limit for Local Alias and Variable Names</title>
        <para>The names for column and table aliases and for local variables names
        in PSQL are now restricted to 31 bytes in length. This enforcement has been
        made to comply with the SQL specification that requires them to be
        regular SQL identifiers, in accordance with the implementation-dependent limits.
        In Firebird, SQL identifiers are limited to 31 bytes.</para>
        <para>See also: <ulink url="http://tracker.firebirdsql.org/browse/CORE-2350">CORE-2350</ulink>
        </para>
      </section>

      <section id="rnfb30-compat-username-namelength"><!-- level 2 -->
        <title>Changes for User Names</title>
        <para>User names are treated as SQL identifiers and are accordingly now limited to 31 bytes
        in length.</para>
        <para>Case-sensitive user names are also supported now.  The <database>CONNECT</database>
        and <database>CREATE DATABASE</database> statements in <emphasis>isql</emphasis> will thus
        allow user names to be specified in double quotes.</para>
      </section>

      <section id="rnfb30-compat-psql-cursorcols"><!-- level 2 -->
        <title>Cursor Output Columns Must Be Named</title>
        <para>The <database>DECLARE CURSOR</database> statement in PSQL now requires all
        of the output columns to be explicitly named or aliased. The same requirement
        applies to the <database>FOR SELECT ... AS CURSOR &lt;cursor name&gt; DO ...
        </database> statement in PSQL. This requirement is necessitated by the new
        capability to read cursor elements directly as pseudo columns, e.g.
        <database>MY_CURSOR.COLUMN_A/</database>.</para>
        <para>Illustration:
          <programlisting>
create procedure sp_test
as
  declare c cursor for (select 1 /* as a */ from rdb$database);
  declare n int;
begin
  open c;
  fetch c into n;
  close c;
end
          </programlisting>
          <literallayout class="monospaced">
  Statement failed, SQLSTATE = 42000
  unsuccessful metadata update
  -ALTER PROCEDURE SP_TEST failed
  -Dynamic SQL Error
  -SQL error code = -104
  -Invalid command
  -no column name specified for column number 1 in derived table C
          </literallayout>
        </para>
      </section>

      <section id="rnfb30-compat-cursorstability"><!-- level 2 -->
        <title><quote>Cursor Stability</quote> Effects</title>
        <para>Some statements may now work differently due to the
        <link linkend="rnfb30-psql-cursor-stablility"><quote>cursor stability</quote>
        improvement</link>. Statements affected will be:
          <itemizedlist>
            <listitem>those that modify the table that is being explicitly or implicitly
            selected from within the same statement</listitem>
            <listitem>(as a side effect) some <database>MERGE</database> statements, that
            might work differently if multiple matches are possible.
            <note>
              <para>The SQL standard stipulates that the MERGE statement must raise an
              error if multiple matches are found. Firebird is not so strict in this
              regard, but its behaviour should be considered undefined in these cases.</para>
            </note>
            </listitem>
          </itemizedlist>
        </para>
        <para>See also:
        <ulink url="http://tracker.firebirdsql.org/browse/CORE-3362">CORE-3362</ulink>,
        <ulink url="http://tracker.firebirdsql.org/browse/CORE-3317">CORE-3317</ulink>,
        <ulink url="http://tracker.firebirdsql.org/browse/CORE-4796">CORE-4796</ulink>.
        </para>
      </section>
    </section>

    <section id="rnfb30-compat-sql-reserv"><!-- level 1 -->
      <title>Reserved Words</title>
      <para>A number of new reserved keywords are introduced. Please refer to the chapter
      <link linkend="rnfb30-reswords">Reserved Words and Changes</link> and ensure your DSQL
      statements and procedure/trigger sources do not contain any of those keywords as
      identifiers. Otherwise, it will be necessary either to use them quoted (in Dialect 3
      only) or to rename them.</para>
      <para>Pay special attention to the keywords <database>INSERTING</database>,
      <database>UPDATING</database> and <database>DELETING</database> in your PSQL modules.
      They are now reserved words and thus must not be used as identifiers.</para>

      <para>Also check very carefully that the keyword <database>BOOLEAN</database> is not
      used as a domain name in your databases.</para>
    </section>

    <section id="rnfb30-compat-trace_config"><!-- level 1 -->
      <title>Trace Configuration Syntax</title>
      <para>The format of sections and key-value pairs in the trace configuration file
      has changed:</para>
      <para><emphasis>Old format:</emphasis>
        <blockquote><literallayout class="monospaced">
&lt;database %[\\/](test|azk2|rulez).fdb&gt;
        enabled true
        time_threshold 100
        log_statement_finish true
&lt;/database&gt;
        </literallayout></blockquote>
      </para>
      <para><emphasis>New format:</emphasis>
        <blockquote><literallayout class="monospaced">
database = %[\\/](test|azk2|rulez).fdb
{
        enabled = true
        time_threshold = 100
        log_statement_finish = true
}
        </literallayout></blockquote>
      </para>
      <important>
        <para>Pay attention to the <quote>database</quote> section header and equality
        signs between parameter names and values.</para>
      </important>
    </section>

    <section id="rnfb30-compat-gdscode"><!-- level 1 -->
      <title>Unexpected GDSCODE Errors</title>
      <para>An unexpected GDSCODE may be returned for UPDATE/DELETE statements, viz.
       <filename>isc_deadlock</filename> instead of <filename>isc_lock_conflict</filename>.</para>
       <para>In fact, the complete error stack previously contained
       <filename>{isc_lock_conflict, isc_deadlock, isc_update_conflict}</filename>, whereas it
       now contains, more correctly,
       <filename>{isc_deadlock, isc_update_conflict}</filename>.</para>
       <para>However, the <database>GDSCODE</database> system variable returns the first
       error element, thus causing possible compatibility issues. Be sure that, besides
       <filename>isc_lock_conflict</filename>, your error handlers for updates and deletes
       also check for the other error codes, <filename>isc_deadlock</filename> and
       <filename>isc_update_conflict</filename>.</para>
     </section>

    <section id="rnfb30-compat-remote"><!-- level 1 -->
      <title>Remote Client Recognition</title>
      <para>From this version forward, the remote client address for TCPv4 and TCPv6 protocols 
      in <function>MON$ATTACHMENTS.MON$REMOTE_ADDRESS</function> includes the port number, 
      separated from the IP address with a slash:
        <blockquote><literallayout class="monospaced">
&lt;IP address&gt;/&lt;port&gt;
        </literallayout></blockquote>
      </para>
      <para>A new column in that table also reports the host name of the remote client.</para>
      <para>For details, see <link linkend="rnfb3-apiods-montables-reporting"><citetitle>Changes to
      Client Address Reporting</citetitle></link> in the chapter entitled <citetitle>Changes to the Firebird
      API and ODS</citetitle>.</para>
    </section>
</chapter>
