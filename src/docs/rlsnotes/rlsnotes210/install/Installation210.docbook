<chapter id="rnfbtwo-install">
  <chapterinfo>
    <title>INSTALLATION NOTES</title>
  </chapterinfo>
  <para>Please read the previous chapter, <xref linkend="rnfbtwo-compat"/> before you set out to install
  Firebird 2.0.</para>

  <section id="install-model"><!-- Level 1 section -->
    <title>Choosing a Server Model</title>
    <para>Classic, Superserver and Embedded are all the same Firebird engine.  The differences are in the ways the
    server module uses machine and network resources.  Briefly:</para>
    <itemizedlist>
      <listitem>
        <para>Classic runs a stub process named <filename>fb_inet_server.exe</filename> on Windows that listens for
        connection requests from network clients.  On POSIX systems, the <firstterm>[x]inetd daemon</firstterm>
        performs this listening role.   The stub process or daemon creates a separate <filename>fb_inet_server</filename>
        process for each successful connection.  Each process has its own private page cache and, on 32-bit systems,
        can use up to 2 GB of RAM.</para>
      </listitem>
      <listitem>
        <para>Superserver is a process named <filename>fbserver.exe</filename> on Windows, <filename>fbserver</filename> on
        POSIX.  Like the Classic server stub it also listens for connection requests.  Unlike Classic, Superserver is
        a <firstterm>threaded application</firstterm>.  It starts (or assigns) one or more threads for each successful connection request.  All of these connection
        threads share a common page cache.  On 32-bit systems, Superserver is limited to using a maximum of 2 GB of
        RAM.</para>
      </listitem>
      <listitem>
        <para>In discussions, Classic and Superserver are often referred to as <quote>full servers</quote> because
        Firebird also supports an <firstterm>embedded</firstterm> server on both Windows and POSIX.  In this model,
        intended for <quote>stand-alone</quote> deployments, a local client and a server are rolled together into
        one shared object library.</para>
        <itemizedlist>
          <listitem>
            <para>On Windows, the embedded server library is named <filename>fbembed.dll</filename>.  It is a temporary
            file name that must be changed in order to be used.  The Windows embedded server is an instance of
            Superserver.</para>
          </listitem>
          <listitem>
            <para>On POSIX, the embedded library is distributed with the Classic kits.  Its name
            is <filename>libfbembed.so</filename> and its manner of resource usage is like Classic.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <section id="install-model-interop"><!-- sect2 -->
      <title>Database Compatibility Among Models</title>
      <para>There are no issues that make databases created by one server model incompatible with another server model.
      Your ultimate choice of which server model to deploy to user sites will be determined by comparing the performance
      of one with another in your test lab.  You don't have to do anything to a database in order to make it work under
      a different server model.</para>
    </section><!-- sect2 -->

    <section id="install-model-full"><!-- sect2 -->
      <title>Full Servers</title>
      <para>At install time, your choice is most likely to be whether to use Classic or Superserver.  For development,
      there's nothing in it.  For testing and deployment, the choice may be more important.  Superserver's shared page
      cache, properly configured, can be beneficial for performance where many users are working concurrently.  On the
      other hand, Superserver for Windows does not <quote>play nice</quote> with multiple CPUs on most rigs and has to
      be set for affinity with just one CPU.</para>
      <para>Classic can be a good choice if the host server has multiple CPUs and plenty of RAM.</para>

      <note>
        <para>There is more discussion about the Classic/Superserver decision in the Quick Start Guide.  A more detailed
        paper on the subject can be found in <ulink
        url="http://www.ibphoenix.com/main.nfs?a=ibphoenix&amp;page=ibp_ss_vs_classic">the IBPhoenix documentation
        archives</ulink>.</para>
      </note>
    </section><!-- sect2 -->
    <section id="install-model-mbed"><!-- sect2 -->
      <title>Embedded</title>
      <para>Treat the embedded server as a deployment option.  It is intended to be used by one and only one system user
      exclusively, which makes it impossible to use in many integrated application development environments.</para>
    </section>
  </section><!-- level 1 -->
</chapter>