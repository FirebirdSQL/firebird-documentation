<chapter id="rnfbtwo-install-psx">
  <chapterinfo>
    <title>Installing on POSIX Platforms</title>
  </chapterinfo>
  <para>Please read the first two chapters before you set out to install
  Firebird 2.0.x or 2.1.x.</para>

  <para>The Firebird server comes in two forms, Classic,  which runs as a service, and 
  SuperServer, which runs as a background daemon. Classic is the more traditional UNIX 
  service, while Superserver uses threads, rather than processes. For the user just 
  starting out with Firebird, either will do, although the Classic server is
  likely to prove a better platform for initially experimenting with Firebird.</para>

  <section id="install2-posx"><!-- Level 1 section -->
    <sectioninfo>
      <title>Linux Platforms</title>
      <author>
        <firstname>(Originally by Mark O'Donohue,</firstname>
        <surname> revised for 2.0)</surname>
      </author>
    </sectioninfo>

    <section id="install2-posx-readfirst"><!-- Level 2 section -->
      <title>READ THIS FIRST</title>
       <itemizedlist>
        <listitem>
          <para>You will need to be root user to install Firebird.</para>
        </listitem>

        <listitem>
          <para>Do not try to use <emphasis>rpm --update</emphasis> to bring any existing Firebird 
          package installation up to date.  <emphasis>The Firebird packages do not support 
          it.</emphasis></para>
        </listitem>

        <listitem>
          <para>If you are installing Superserver on a Linux that supports the <quote>new POSIX 
          threading library </quote> (NPTL) then choose the NPTL build of Firebird.  Most distros 
          with the 2.6 kernel are built with NPTL enabled;  some with later 2.4 kernels also 
          enabled it, but it may be wise to prepare to revert to the regular build and set up 
          to export the LD_ASSUME_KERNEL=2.2.5 variable if the 2.4 implementation of the NPTL causes 
          problems.  Details for doing this follow below.</para>
         </listitem>
        <listitem>
            <para>64-bit builds are available for both Classic and Superserver.  These should be 
            installed only on a 64-bit Linux system.  NPTL support is native on 64-bit Linux.</para>
           </listitem>
        </itemizedlist>
        
          <note>
            <title>libstdc++.so.5</title>
            <para>Installation on Linuxen requires a glibc package installed that is
            equal to or greater than glibc-2.2.5.  However, to enable support for some
            older distros, the generic binaries are built in a compiler environment that
            will ensure compatibility with the v.2.2.5 kernel.  For this reason, the runtime
            library <filename>libstdc++.so.5</filename> must be present in your system before
            you attempt to install Firebird.</para>
            <para>There are various ways to achieve it, as follows:</para>
            <itemizedlist>
              <listitem>
                <para>by installing a <filename>compat-glibc</filename> package (RedHat,
                CentOs, OpenSuse, Debian) or a <filename>libstdc++5</filename> package
                (Mandriva)</para>
              </listitem>
              <listitem>
                <para>by using a Firebird rpm (or other, appropriate package type) provided
                by your distro instead of the generic one provided by the Firebird Project</para>
              </listitem>
              <listitem>
                <para>by compiling Firebird yourself, on the same system that you are going
                to run it on!</para>
              </listitem>
            </itemizedlist>
          </note>        
        <section id="install2-posx-readfirst-oldthreading"><!-- Level 3 section -->
          <title>Setting Linux to Use the Old Threading Model</title>
          <para>If the NPTL causes problems for SuperServer and locally compiled programs,
          including utilities such as gbak throwing a <emphasis>Broken Pipe</emphasis> error, 
          you can try to solve the problem by forcing Linux to use the old threading model.</para>
          
          <para>To fix.-</para>

          <orderedlist>
            <listitem>
              <para>In /etc/init.d/firebird</para>
              <literallayout class="monospaced">
  LD_ASSUME_KERNEL=2.2.5
  export LD_ASSUME_KERNEL
              </literallayout>
              <para>That takes care of the server instance.</para>

            </listitem>
            <listitem>
              <para>You need to have the <function>LD_ASSUME_KERNEL</function> environment 
              variable set up within the local environment as well, so add the following to 
              /etc/profile, to ensure every user picks it up for the command line utilities.</para>
              <para>after</para>
              <literallayout class="monospaced">
  HISTSIZE=1000
              </literallayout>
              <para>add</para>
              <literallayout class="monospaced">
  LD_ASSUME_KERNEL=2.2.5
              </literallayout>
              <para>On the following line, export it (this is all in one line):</para>
              <literallayout class="monospaced">
 export PATH USER LOGNAME MAIL HOSTNAME
     HISTSIZE INPUT_RC LD_ASSUME_KERNEL
              </literallayout>
            </listitem>
          </orderedlist>
      </section><!-- level 3 -->
    </section><!-- level  -->

    <section id="install2-posx-linux"><!-- Level 2 section -->
      <title>Installing on Linux</title>
      <para>The following instructions describe the Classic installation. For 
      installation of Superserver the &quot;CS&quot; in the package name is replaced by 
      &quot;SS&quot;. For example, the package <function>FirebirdCS-2.1.n-nnnnn.i686.rpm</function> 
      is replaced by <function>FirebirdSS-2.1.n-nnnnn.i686.rpm.</function></para>

      <note>
        <para>For those who, in the past, have had trouble installing Firebird on Slackware, 
        the good news is that the installers in this version <emphasis>do</emphasis> include 
        Slackware support.</para>
      </note>
      <para>Log in as root, or open a root shell.  In the example filenames, replace 
      <emphasis>nnnnn</emphasis> with the build number of the kit you actually have.</para>

      <section id="install2-posx-linux-rpm"><!-- Level 3 section -->
        <title>RPM Installer</title>
        <para>For the RPM installer, type:</para>
        <literallayout class="monospaced">
  $rpm -ivh FirebirdCS-2.1.n-nnnnn.i686.rpm
        </literallayout>
      </section>

      <section id="install2-posx-linux-targz"><!-- Level 3 section -->
        <title>Installing the Tarball</title>
        <para>To install the tarball, place the &quot;.tar.gz&quot; file and type:</para>
        <literallayout class="monospaced">
  $tar -xzf FirebirdCS-2.1.n-nnnnn.tar.gz
  $cd FirebirdCS-2.1.n-nnnnn.i686
  $./install.sh
        </literallayout>
      </section><!-- level 3 -->
    </section><!-- level 2 -->
    
    <section id="install2-pox-linux-dowhat"><!-- Level 3 section -->
      <title>What the Linux install scripts will do</title>
      <para>The Linux install scripts will</para>

      <orderedlist>
        <listitem>
          <para>Attempt to stop any currently running server</para>

        </listitem>
        <listitem>
          <para>Add the user 'firebird' and the group 'firebird' if they do not already 
          exist.</para>

        </listitem>
        <listitem>
          <para>Install the software into the directory /opt/firebird and create links 
          for libraries in /usr/lib and header files in /usr/include</para>

        </listitem>
        <listitem>
          <para>Automatically add gds_db for port 3050 to /etc/services if the entry does 
          not already exist</para>

        </listitem>
        <listitem>
          <para>Automatically add localhost.localdomain and HOSTNAME to 
          /etc/gds_hosts.equiv</para>

        </listitem>
        <listitem>
          <orderedlist type="a">
            <listitem>
              <para>SuperServer only installs a /etc/rc.d/init.d/firebird server start 
              script.</para>
            </listitem>
            <listitem>
              <para>Classic server installs a /etc/xinetd.d/firebird start script or, 
              for older inetd systems, adds an entry to the /etc/inetd file</para>
            </listitem>
          </orderedlist>

        </listitem>
        <listitem>
          <para>Specific to SuSE, a new rcfirebird link is created in /usr/bin for 
          the init.d script and an /etc/rc.config Firebird entry is created.</para>

        </listitem>
        <listitem>
          <para>Starts the server/service. Firebird should start automatically 
          in runlevel 2, 3 or 5</para>

        </listitem>
        <listitem>
          <para>Generates and sets a new random SYSDBA password and stores it in 
          the file /opt/firebird/SYSDBA.password.</para>

        </listitem>
        <listitem>
          <para>Adds an entry to aliases.conf for the sample database, employee.fdb.</para>
        </listitem>
      </orderedlist>
    </section><!-- level 2 -->

    <section id="install2-posx-test"><!-- Level 2 section -->
      <title>Testing your Linux installation</title>

      <section id="install2-posx-test-step1"><!-- Level 3 section -->
        <title>Step 1 - Accessing a database</title>
        <para>In a shell:</para>
        <literallayout class="monospaced">
 $cd /opt/firebird/bin
 $./isql -user sysdba -password &lt;password&gt;<superscript>1</superscript>

 SQL&gt;connect localhost:employee.fdb /* this is an aliased path */

 SQL&gt;select * from sales;
 SQL&gt;select rdb$relation_name from rdb$relations;
 SQL&gt;help;

 SQL&gt;quit;
        </literallayout>
        <note>
          <para><superscript>1</superscript>A password has been generated for you on 
          installation.  It can be obtained from the /opt/firebird/SYSDBA.password file, 
          located in the Firebird root directory.</para>
        </note>
      </section><!-- level 3 -->

      <section id="install2-posx-test-step2"><!-- Level 3 section -->
        <title>Step 2 - Creating a database</title>
        <para>The Firebird server runs by default as the user 'firebird'. While this has
        always been the recommended configuration, the previous default was for the server 
        to run as 'root' user.  When running as root user, the server had quite wide-ranging 
        ability to read, create and delete database files anywhere on the POSIX filesystem.</para>

        <para>For security reasons, the service should have a more limited ability to 
        read/delete and create files.</para>

        <para>While the new configuration is better from a security perspective, it requires 
        some special considerations to be taken into account for creating new databases:</para>
        <orderedlist type="a">
          <listitem>
            <para>the user 'firebird' has to have write permission to the directory in which 
            you want to create the database.</para>

          </listitem>
          <listitem>
            <para>the recommended value of the DatabaseAccess attribute in the 
            /opt/firebird/firebird.conf file should be set to None, to permit access only through 
            entries in the aliases.conf file.</para>

          </listitem>
          <listitem>
            <para>use entries in aliases.conf to abstract users from the physical locations 
            of databases.</para>
          </listitem>
        </orderedlist>

        <para>Procedures for creating a new database can vary with different configurations 
        but the following configuration and steps are recommended:</para>

        <orderedlist>
          <listitem>
            <para>If a directory that is owned by the user 'firebird' does not exist, then 
            change to root user and create the directory:</para>
            <literallayout class="monospaced">
 $su - root
 $mkdir -p /var/firebird
 $chown firebird:firebird /var/firebird
            </literallayout>

          </listitem>
          <listitem>
            <para>Create a new physical database and set up an alias entry to point to it.  
            As root or firebird user, run the following script:</para>
            <literallayout class="monospaced">
 $cd /opt/firebird/bin
 $./createAliasDB.sh test.fdb /var/firebird/test.fdb
            </literallayout>
            <para>(Usage is: createAliasDB.sh &lt;dbname&gt; &lt;pathtodb&gt;)</para>

          </listitem>
          <listitem>
            <para>As an alternative (for step 2) the steps in the createAliasDB.sh script 
            can be performed manually by:</para>
            <literallayout class="monospaced">
 $vi /opt/firebird/aliases.conf
            </literallayout>
             <para>and add the line at the end of the file:</para>
            <literallayout class="monospaced">
 test.fdb /var/firebird/test.fdb
            </literallayout>

          </listitem>
          <listitem>
            <para>Then create the database:</para>
            <literallayout class="monospaced">
$/opt/firebird/bin/isql -u sysdba -p &lt;password&gt;
SQL&gt;create database 'localhost:test.fdb';
SQL&gt;quit;
            </literallayout>

          </listitem>
          <listitem>
            <para>If the <emphasis>DatabaseAccess</emphasis> value in 
            /opt/firebird/firebird.conf is set to Full
            or a restricted path value (for example: DatabaseAccess=/var/firebird) 
            another alternative to step 2 is to create the physical database file directly, 
            using the absolute path with the filename:</para>

            <literallayout class="monospaced">
 $/opt/firebird/bin/isql -u sysdba -p &lt;password&gt;
 SQL&gt;create database '/var/firebird/test.fdb';
 SQL&gt;quit;
            </literallayout>
            <para>If you use this configuration, the database file can also be directly 
            accessed without an entry in the aliases file:</para>
            <literallayout class="monospaced">
$/opt/firebird/bin/isql -u sysdba -p &lt;password&gt;
SQL&gt;connect '/var/firebird/test.fdb';
SQL&gt;quit;
            </literallayout>
          </listitem>
        </orderedlist>
      </section><!-- level 3 -->
    </section><!-- level 2 -->

    <section id="install2-posx-scripts"><!-- Level 2 section -->
      <title>Utility Scripts</title>
      <para>In addition to the standard install files the following scripts are provided in 
      the bin directory of this release.-</para>

      <variablelist>
        <varlistentry>
          <term><function>changeDBAPassword.sh</function></term>
          <listitem>
            <para>Change the Firebird SYSDBA user password. For Superserver, this script
            will change the init script /etc/rc.d/init.d/firebird to use the new password
            as well.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><function>createAliasDB.sh</function></term>
          <listitem>
            <para>Usage:  <function>createAliasDB.sh &lt;dbname&gt; &lt;dbpath&gt;</function></para>
            <para>This script creates a new physical database and adds an entry in the
            aliases.conf file.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><function>fb_config</function></term>
          <listitem>
            <para>A script that can be used in makefiles to generate the required include paths 
            and lib include directives for the installed version of Firebird.  
            <function>fb_config -help</function> will give a complete list of options.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><function>changeGdsLibraryCompatibleLink.sh</function></term>
          <listitem>
            <para>Classic only-Change the client library link for libgds.so between the 
            multithreaded libfbclient.so and the single threaded libfbembed.so library 
            that allows an embedded direct open of the db file. For compatibility with previous 
            installs, libgds.so by default points to libfbembed.so.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section><!-- level 2 -->

    <section id="install2-posx-tips"><!-- Level 2 section -->
      <title>Linux Server Tips</title>

      <section id="install2-posx-tips-direct"><!-- Level 3 section -->
        <title>&quot;Embedded&quot; or direct access to database files</title>
        <para>The Classic install offers an &quot;embedded&quot; mode of access that allows 
        programs to open database files directly. To operate in this mode, a database-enabled 
        user requires privileged access to some of the Firebird configuration and status 
        files.</para>
        <para>Now that it is the 'firebird' user (not root) that is the default user to run 
        the software, you need to know how to get a user into the firebird group to enable 
        direct access to databases.  It is documented in the readme notes, but the following 
        steps should get you where you need to be.</para>
        <para>To add a user (e.g. skywalker) to the firebird group, the root user needs 
        to do:</para>
        <literallayout class="monospaced">
   $ usermod -G firebird skywalker
        </literallayout>
        <para>Next time 'skywalker' logs on, he can start working with firebird databases.</para>
        <para>To list the groups that a user belongs to, type the following at the 
        command line:</para>
        <literallayout class="monospaced">
   $ groups
        </literallayout>
        <warning>
          <para>We have been informed of a <quote>gotcha</quote> with the
          <firstterm>usermod</firstterm> syntax in the Debian family of Linux platforms (
          including Ubuntu).  The switches for this command are non-standard and the
          above usage will remove the user from all other groups.</para>
          <para>Please study the online documentation for your distro to work out the
          syntax you need to add a user to a group in Debian.</para>
        </warning>
      </section><!-- level 3 -->

    </section><!-- level 2 -->

    <section id="install2-posx-uninstall"><!-- Level 2 section -->
      <title>Uninstalling on Linux</title>
      <para>If you need to uninstall, do it as root user. The following examples use 
      Classic server but the same holds true for SuperServer by replacing the CS 
      with SS.</para>

      <section id="install2-posx-uninstall-rpm"><!-- Level 3 section -->
        <title>Uninstalling an RPM package</title>
        <para>For rpm packages:</para>
        <literallayout class="monospaced">
  $rpm -e FirebirdCS-2.1.n
        </literallayout>
      </section><!-- level 3 -->

      <section id="install2-posx-uninstall-tar"><!-- Level 3 section -->
        <title>Uninstalling a tarball installation</title>
        <para>for the .tar.gz install:</para>
        <literallayout class="monospaced">
  $/opt/firebird/bin/uninstall.sh
        </literallayout>
      </section><!-- level 3 -->
    </section><!-- level 2 -->
  </section><!-- level 1 -->

  <section id="install2-macosx"><!-- Level 1 section -->
    <sectioninfo>
      <title>MacOSX</title>
      <author><firstname>Paul</firstname><surname>Beach</surname></author>
    </sectioninfo>

    <para>Installation on MacOSX is extremely simple:</para>
    <orderedlist>
      <listitem>
        <para>As SU, download the compressed <emphasis>pkg</emphasis> kit to a convenient
        location and decompress it</para>
      </listitem>
      <listitem>
        <para>Click on the <emphasis>pkg</emphasis> file to kick off the installation.</para>
      </listitem>
      <listitem>
        <para>Follow the instructions (choose disk, enter SU password) and you are done.</para>
      </listitem>
    </orderedlist>

    <section id="install2-macosx-uninst"><!-- Level 2 section -->
      <title>Uninstalling on MacOSX</title>
      <para>MacOSX has no uninstall utility but the following script will clean up Firebird
      installs on Leopard.  It should work on Tiger as well.</para>
      <programlisting>
#!/bin/sh
echo &quot;Clean Services&quot;
echo &quot;Clean User&quot;
dscl localhost -delete /Local/Default/Users/firebird
echo &quot;Clean Group&quot;
dscl localhost -delete /Local/Default/Groups/firebird
if [ -f &quot;/Library/StartupItems/Firebird&quot; ]; then
echo &quot;Remove SuperServer StartupItem&quot;
rm -fr /Library/StartupItems/Firebird
fi
if [ -f &quot;/Library/LaunchDaemons/org.firebird.gds.plist&quot; ]; then
echo &quot;Remove Launchd&quot;
launchctl unload /Library/LaunchDaemons/org.firebird.gds.plist
rm /Library/LaunchDaemons/org.firebird.gds.plist
fi
echo &quot;Remove Framework&quot;
rm -fr /Library/Frameworks/Firebird.framework
echo &quot;Remove Receipt&quot;
rm -fr /Library/Receipts/Firebird*.pkg
      </programlisting>
    </section><!-- level 2 -->
  </section><!-- level 1 -->

  <section id="install2-posx-other"><!-- Level 1 section -->
    <title>Other POSIX Platforms</title>

    <section id="install2-posx-solaris"><!-- Level 2 section -->
      <title>Solaris</title>
      <para>Not currently available.</para>
    </section>

    <section id="install2-posx-bsd"><!-- Level 2 section -->
      <title>FreeBSD</title>
      <para>Not currently available.</para>
    </section>

    <section id="install2-posx-debian"><!-- Level 2 section -->
      <title>Debian</title>
      <para>Not currently available.</para>
    </section><!-- level 2 -->
  </section><!-- level 1 -->
</chapter>