  <chapter id="rnfb25-fbconf">
  <chapterinfo>
    <title>Configuration Parameter Additions and Changes</title>
  </chapterinfo>
  <para>The following changes or additions to <filename>firebird.conf</filename> should be noted:</para>

  <section id="rnfb25-fbconf-audit" xreflabel="AuditTraceConfigFile"><!-- Level 1 section -->
    <sectioninfo>
      <title>AuditTraceConfigFile</title>
      <author><firstname>V.</firstname><surname>Khorsun</surname></author>
    </sectioninfo>
    <para>This parameter points to the name and location of the file that the Firebird engine
    is to read to determine the list of events required for the next system audit trace.  By default,
    the value of this parameter is empty, indicating that no system audit tracing is configured.</para>
    <note>
      <para>The template file file <filename>fbtrace.conf</filename>, found in Firebird's root
      directory, contains the full list of available events, with format, rules and syntax for
      composing an audit trace configuration file.</para>
    </note>
    <para>For more information, see the topic <link linkend="rnfb25-trace-audit">System Audit
    Session</link> in section <citation>Trace and Audit Services</citation> in the chapter about
    the new administrative features.</para>
  </section>

  <section id="rnfb25-fbconf-fscache"><!-- Level 1 section -->
    <title>Parameters Affecting Filesystem Cache Usage</title>
    <para>There are now two parameters for configuring how Firebird interacts with the filesystem
    cache.</para>

    <section id="rnfb25-fbconf-fscache-sz" xreflabel="FileSystemCacheSize"><!-- Level 2 section -->
      <sectioninfo>
        <title>FileSystemCacheSize</title>
        <author><firstname>N.</firstname><surname>Samofatov</surname></author>
      </sectioninfo>
      <para>New in Firebird 2.5, <emphasis>FileSystemCacheSize</emphasis> controls the maximum amount
      of RAM used by a Windows file system cache on 64-bit Windows XP or a Microsoft Server 2003 host with
      Service Pack 1 or higher.</para>
      <para>At the V.2.5 initial release, it has no effect on POSIX host systems.</para>
      <para>The setting for this parameter is an integer expressing the percentage of the total
      physical RAM that is available to the OS. To be valid, settings must be within the range 10 (per cent)
      to 95 (per cent), or explicitly set to 0 to enforce the host caching settings.  Numbers outside that
      range will assume the default, which is 30 (per cent).</para>
      <para>As with any <filename>firebird.conf</filename> setting, changes will not take effect until
      the server process is restarted.</para>

      <important>
        <title>Windows Security Privileges</title>
        <para>The OS user needs the SeIncreaseQuotaPrivilege in order to adjust the filesystem
        cache settings.  This right is built in for users with Administrator privileges and for
        service accounts and it is also granted to the Firebird service account explicitly by
        the Windows installer.</para>
        <para>Under other conditions, e.g., embedded, or where the Firebird server is run as an
        application, or in a custom service installation, the user may not have that privilege.  
        The process startup does not fail as a result of this misconfiguration:  it will write a 
        warning to the <filename>firebird.log</filename> and start-up will simply proceed with 
        the host OS settings.</para>
      </important>
    </section>

    <section id="rnfb25-fbconf-fscache-thrsh" xreflabel="FileSystemCacheThreshold"><!-- Level 2 section -->
      <sectioninfo>
        <title>FileSystemCacheThreshold</title>
        <author><firstname>V.</firstname><surname>Khorsun</surname></author>
      </sectioninfo>

      <para><emphasis role="bold">This parameter was introduced in V.2.1 as MaxFileSystemCache.</emphasis>
      Because its name has been changed, its description is repeated here to alert upgraders.</para>

      <para><emphasis>FileSystemCacheThreshold</emphasis> sets a threshold determining whether Firebird will
      allow the page cache to be duplicated to the filesystem cache or not.  If this parameter is set to
      any (integer) value greater than zero, its effect depends on the current default size of the page
      cache: if the default page cache (in pages) is less than the value of MaxFileSystemCache (in pages)
      then filesystem caching is enabled, otherwise it is disabled.</para>
      <note>
        <para>This applies both when the page cache buffer size is set implicitly by the
        DefaultDBCachePages setting or explicitly as a database header attribute. It applies to all
        platforms.</para>
      </note>
      <para>Thus, </para>
      <itemizedlist>
        <listitem>
          <para>To disable filesystem caching always, set FileSystemCacheThreshold to zero</para>
        </listitem>
        <listitem>
          <para>To enable filesystem caching always, set FileSystemCacheThreshold an integer value 
          that is sufficiently large to exceed the size of the database page cache.  Remember that 
          the effect of this value will be affected by subsequent changes to the page cache size.</para>
        </listitem>
      </itemizedlist>
      <important>
        <itemizedlist>
          <listitem>
            <para>The default setting for FileSystemCacheThreshold is 65536 pages, i.e. filesystem
            caching is enabled.</para>
          </listitem>
          <listitem>
            <para>Observe that, if the configured cache size affecting a particular database
            is greater than the <emphasis>FileSystemCacheThreshold</emphasis> then the setting for
            <emphasis>FileSystemCacheSize</emphasis> (see above) will have no effect on that
            database.</para>
          </listitem>
        </itemizedlist>
      </important>
    </section>

    <section id="rnfb25-fbconf-maxfscache" xreflabel="MaxFileSystemCache"><!-- Level 2 section -->
      <title>MaxFileSystemCache</title>
      <para><emphasis>MaxFileSystemCache</emphasis>, introduced in Firebird 2.1, is no longer a 
      valid parameter.</para>
    </section>
  </section>
  
  <section id="rnfb25-fbconf-conntimeout" xreflabel="ConnectionTimeout"><!-- Level 1 section -->
    <sectioninfo>
      <title>ConnectionTimeout</title>
      <author><firstname>D.</firstname><surname>Yemanov</surname></author>
    </sectioninfo>
    <para>On heavily loaded Windows systems, local connect (XNET) could fail due to the client 
    timing out while waiting for the server to set the <function> xnet_response_event</function>.  To
    help with this problem, the <emphasis>ConnectionTimeout</emphasis> parameter has been enhanced
    to affect XNET connections, in addition to TCP/IP.</para>
    <note>
      <para>The caveat documented for this parameter, although still applicable to network transports, 
      does not apply to XNET's protocol.</para>
    </note>
  </section>

  <section id="rnfb25-fbconf-authent" xreflabel="Authentication"><!-- Level 1 section -->
      <sectioninfo>
        <title>Authentication</title>
        <author><firstname>A.</firstname><surname>Peshkov</surname></author>
      </sectioninfo>
      <para>On Windows server platforms, since V.2.1, <firstterm>Authentication</firstterm> has been
      used for configuring the server authentication mode if you need it to be other than the
      default.</para>

      <para>The mode settings for v.2.5 are the same, viz.</para>
      <itemizedlist>
        <listitem>
          <para><emphasis>trusted</emphasis> makes use of Windows <quote>trusted authentication</quote>.
          Under the right conditions, this may be the most secure way to authenticate on Windows.</para>
        </listitem>
        <listitem>
          <para><emphasis>native</emphasis> sets the traditional Firebird server authentication mode,
          requiring users to log in using a user name and password defined in the security database.</para>
        </listitem>
        <listitem>
          <para><emphasis>mixed</emphasis> allows both.</para>
        </listitem>
      </itemizedlist>

      <section id="rnfb25-fbconf-authent01"><!-- Level 2 section -->
        <title>Changes in V.2.5</title>
        <itemizedlist>
          <listitem>
            <para>Under v.2.5, although the modes are unchanged, configuring 'mixed' or 'trusted'
            mode no longer confers SYSDBA privileges on Windows domain administrators automatically
            by default. Please <link linkend="rnfb25-prvlgs-win">read the notes in the Administrative
            Features chapter</link> regarding the new RDB$ADMIN role in ODS 11.2 databases and
            auto-mapping SYSDBA privileges to domain administrators.</para>
          </listitem>
          <listitem>
            <para>The default configuration has been changed from <firstterm>mixed</firstterm>
            to <firstterm>native</firstterm>.  To enable trusted user authentication (whether
            <firstterm>mixed</firstterm> or <firstterm>trusted</firstterm>, it is now necessary
            to configure this parameter specifically.</para>
            <para>Tracker reference
            <ulink url="http://tracker.firebirdsql.org/browse/CORE-2376">CORE-2376</ulink></para>
          </listitem>
        </itemizedlist>
      </section><!-- sect2 -->
    </section>

    <section id="rnfb25-fbconf-maxtrace" xreflabel="MaxUserTraceLogSize"><!-- Level 1 section -->
      <sectioninfo>
        <title>MaxUserTraceLogSize</title>
        <author><firstname>V.</firstname><surname>Khorsun</surname></author>
      </sectioninfo>
      <para>Stores the maximum total size of the temporary files to be created by a user trace
      session using the new Trace functions in the Services API.  The default limit is 10 MB.
      Use this parameter to raise or lower the maximum total size of the temporary files storing
      the output.</para>
    </section>

    <section id="rnfb25-fbconf-oldset"><!-- Level 1 section -->
      <sectioninfo>
        <title>OldSetClauseSemantics</title>
        <author><firstname>D.</firstname><surname>Yemanov</surname></author>
      </sectioninfo>
      <para>Before Firebird 2.5, the SET clause of the UPDATE statement assigned columns in the
      user-defined order, with the NEW column values being immediately accessible to the subsequent
      assignments. This did not conform to the SQL standard, which requires the starting value of
      the column to persist during execution of the statement.</para>
      <para>Now, only the OLD column values are accessible to any assignment in the SET clause.</para>
      <para>The <firstterm>OldSetClauseSemantics</firstterm> enables you to revert to the legacy behavior
      via the OldSetClauseSemantics, if required.  Values are 1 for the legacy behaviour, 0 (the default)
      for the corrected behaviour.</para>
      <warning>
        <itemizedlist>
          <listitem>
            <para>Changing this parameter affects <emphasis>all</emphasis> databases on your server.</para>
          </listitem>
          <listitem>
            <para>This parameter is provided as a temporary solution to resolve backward compatibility
            issues.  It will be deprecated in future Firebird versions.</para>
          </listitem>
        </itemizedlist>
      </warning>
   </section>
   
    <section id="rnfb25-fbconf-rmtauxport"><!-- Level 1 section -->
      <sectioninfo>
        <title>RemoteAuxPort For Classic and Superclassic </title>
        <author><firstname>Dmitry</firstname><surname>Yemanov</surname></author>
      </sectioninfo>
      <para>Tracker entry: <ulink url="http://tracker.firebirdsql.org/browse/CORE-2263">CORE-2263</ulink></para>
      <para>Classic and SuperClassic servers can now be configured to listen for events on a 
      single, designated <emphasis>RemoteAuxPort</emphasis> port, as SuperServer has been 
      able to do since v.1.5.</para>
      <para>This long-awaited improvement now enables applications that connect to databases over the Internet 
      through a firewall or a secure tunnel to use events, regardless of the server model in use.</para>
    </section>
    
    <section id="rnfb25-fbconf-rmtbindaddr"><!-- Level 1 section -->
      <sectioninfo>
        <title>Use Hostname for RemoteBindAddress </title>
        <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
      </sectioninfo>
      <para>Tracker entry: <ulink url="http://tracker.firebirdsql.org/browse/CORE-2094">CORE-2094</ulink></para>
      <para>It is now possible to use the hostname of the host where the Firebird server
      is running to configure <emphasis>RemoteBindAddress</emphasis>, where previously, only
      an IP address was allowed.</para>
      <important>
        <para><emphasis>RemoteBindAddress</emphasis> can be used to <quote>pin</quote> user
        connections to a specific NIC card on the host server.  Take care that the hostname
        specified is not associated concurrently with more than one IP address, anywhere!
        In particular, check the <filename>etc/hosts</filename> file on all stations, including
        the host station itself.</para>
      </important>
    </section>

    <section id="rnfb25-fbconf-rmtfilopn"><!-- Level 1 section -->
      <sectioninfo>
        <title>RemoteFileOpenAbility</title>
        <author><firstname>Nickolay</firstname><surname>Samofatov</surname></author>
      </sectioninfo>
      <para>Tracker entry: <ulink url="http://tracker.firebirdsql.org/browse/CORE-1038">CORE-2263</ulink></para>
      <para>Code from Red Soft was incorporated, to make this extreme option available to Windows
      and allow a database to be opened on a network share, in line with the long-time ability
      to allow access to a database on a NFS device on POSIX.</para>
      <para>It is offered in the interests of maintaining feature consistency across platforms.  There is no
      associated architectural change or any implication that its use in practice is considered safer now
      than in the past. However, it makes it possible to shadow databases to mapped locations and to connect
      to a database on an external filesystem for a specific, well-tested, safe purpose.  An example given was
      a database kept under lock-and-key on a USB device that could be plugged in to a diskless workstation
      for performing an occasional, isolated security task.</para>
      <warning>
        <para>READ THE NOTES IN FIREBIRD.CONF BEFORE YOU CONSIDER ACTIVATING THIS!</para>
      </warning>
    </section>
</chapter>