<chapter id="rnfb25-install">
  <chapterinfo>
    <title>Installation Notes</title>
  </chapterinfo>
  <important>
    <title>Installation And Migration Guide</title>
    <para>The latest version of Installation and Migration Guide for Firebird 
    versions 2.0.x and 2.1.x is still applicable to the v.2.5 series.  If a
    copy of this document is not present in your /doc/ directory, you can
    download it from the Firebird website.</para>
  </important>
  <para>Some improvements have been done to solve issues that could arise with
  the binary installation packages.</para>

  <section id="rnfb25-install-lin">
    <title>Linux (POSIX)</title>
      <para>The following improvements apply to POSIX installations.</para>
      <section id="rnfb25-install-lin-scripts">
        <sectioninfo>
          <title>Installation Scripts Cleanup</title>
          <author>
            <firstname>Alex</firstname><surname>Peshkov</surname>
          </author>
        </sectioninfo>
        <itemizedlist>
          <listitem>
            <para>(<ulink url="http://tracker.firebirdsql.org/browse/CORE-2195">CORE-2195</ulink>):
            the Linux Classic installation scripts were reviewed to improve the assignment of
            ownership and access rights to documentation and other components.</para>
          </listitem>
          <listitem>
            <para>(<ulink url="http://tracker.firebirdsql.org/browse/CORE-2392">CORE-2392</ulink>):
            Cleanups of installation scripts for all active POSIX ports for Superserver and Superclassic
            were done to address a problem with the Guardian on these platforms.</para>
          </listitem>
          <listitem>
            <para>(<ulink url="http://tracker.firebirdsql.org/browse/CORE-2626">CORE-2626</ulink>):
            The startup scripts in <filename>/etc/init.d</filename> did not previously take into account
            the presence of the directories <filename>/var/run/firebird</filename> and
            <filename>/tmp/firebird</filename> on the host system.  Various types of startup failures were
            traceable back to this deficiency.</para>
            <para>The startup scripts distributed with the V.2.5 and later builds address and solve the
            problem.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="rnfb25-install-lin-configure">
        <sectioninfo>
          <title>Dedicated Firebird Switches for 'configure'</title>
          <author>
            <firstname>Alex</firstname><surname>Peshkov</surname>
          </author>
        </sectioninfo>
        <para>A lot of the standard <command>configure</command> switches for fine-tuning the installation
        directories on POSIX platforms do not work for Firebird.</para>
        <para>It was close to impossible to make the standard GNU switches work without changing the defaults for
        them, a rigmarole that is far from obvious or easy.  Instead, a set of new switches for the
        <command>configure</command> has been added to enable fine-level configuration of the locations of
        Firebird's files.</para>
        <para>The <command>ib_util</command> loader was also improved to make the engine work correctly with the
        configured layout.</para>
        <section id="rnfb25-install-lin-configure-swtchs">
          <title>Available Switches</title>
          <literallayout class="monospaced">
  --with-fbbin executables DIR (PREFIX/bin)
  --with-fbsbin system admin executables DIR (PREFIX/bin)
  --with-fbconf config files DIR (PREFIX)
  --with-fblib object code libraries DIR (PREFIX/lib)
  --with-fbinclude C/C++ header files DIR (PREFIXinclude)
  --with-fbdoc documentation root DIR (PREFIX/doc)
  --with-fbudf UDF DIR (PREFIX/UDF)
  --with-fbsample examples DIR (PREFIX/examples)
  --with-fbsample-db examples database DIR (PREFIX/examples/empbuild)
  --with-fbhelp QLI help DIR (PREFIX/help)
  --with-fbintl international DIR (PREFIX/intl)
  --with-fbmisc misc DIR (PREFIX/misc)
  --with-fbsecure-db security database DIR (PREFIX)
  --with-fbmsg message files DIR (PREFIX)
  --with-fblog log files DIR (PREFIX)
  --with-fbglock guardian lock DIR (PREFIX)
  --with-fbplugins plugins DIR (PREFIX)
          </literallayout>
        </section>
      </section>

      <section id="rnfb25-install-lin-dirs">
      <sectioninfo>
        <title>Detection of Path to Firebird's Binaries</title>
        <author>
          <firstname>Adriano</firstname><surname>dos Santos Fernandes</surname>
        </author>
      </sectioninfo>
      <para>Tracker reference: <ulink
      url="http://tracker.firebirdsql.org/browse/CORE-2398">CORE-2398</ulink>)</para>
      <para>A feature has been implemented for POSIX builds, to have Firebird correctly
      detect the path where its binaries are installed.</para>
      <important>
        <para>This is an experimental state currently and is disabled in the
        distributed binaries. To activate it, build Firebird from source and pass
        <command>--enable-binreloc</command> to autogen.sh when building.</para>
      </important>
    </section>
  </section>


  <section id="rnfb25-install-win">
    <sectioninfo>
      <title>Windows</title>
      <author>
        <firstname>Vlad</firstname><surname>Khorsun</surname>
      </author>
    </sectioninfo>

    <para>Tracker entry: <ulink url="http://tracker.firebirdsql.org/browse/CORE-2243">CORE-2243</ulink></para>
    <note>
      <para>Because the changes took effect from V.2.1.2, this discussion also appears
      as a special topic in the <emphasis>V.2 Installation and Migration document</emphasis>.</para>
    </note>
    <section id="rnfb25-install-win-msvc8">
      <title>Managing MSCV8 Assemblies</title>

      <para>Firebird 2.5 is built by the Microsoft MSVC8 compiler in Visual Studio 2005.  Because all
      the Firebird binaries are built to use dynamic linking, they all require run-time libraries.</para>
      <para>To avoid the dll-hell issue Microsoft introduced new rules for the distribution of components
      that may be shared by multiple applications. From Windows XP forward, shared libraries&mdash;such
      as the Visual C++ and Visual C runtimes <filename>msvcp80.dll</filename>,
      <filename>msvcr80.dll</filename> and <filename>mscvcm80.dll</filename>&mdash;must be distributed as
      shared or as private assemblies.</para>
      <itemizedlist>
        <listitem>
          <para>The Microsoft MSI Installer installs shared assemblies into the common special
          folder <filename>SxS</filename> for use by multiple applications.</para>
        </listitem>
        <listitem>
          <para>Private assemblies are distributed with applications and should be put into the
          application folder. Use of the <filename>\system32</filename> folder for assemblies is
          now prohibited on the XP, Server2003 and Vista platform families.</para>
        </listitem>
      </itemizedlist>

      <section id="rnfb25-install-win-shared"><!-- Level 3 section -->
        <title>Installing Runtimes as a Shared Assembly</title>
        <para>To install the runtimes as a shared assembly, the deployment system must have MSI 3.0
        installed and the user must have administrative privileges. Often, this is not possible with
        an application being deployed with Firebird Embedded:  it must be installed ready-to-run.
        In that case, do not plan to install the runtimes as a shared assembly.</para>
      </section><!-- level 3 -->

      <section id="rnfb25-install-win-private"><!-- Level 3 section -->
        <title>Installing Runtimes as a Private Assembly</title>

        <para>To install the MSVC8 run-time libraries as a private assembly its contents&mdash;the
        three DLLs mentioned above and the assembly's manifest file, <filename>Microsoft
        VC80.CRT.manifest</filename>&mdash;must be put into every folder where a dependent binary
        (.exe or .dll) resides, because of built-in checks for the folders that are the expected
        location of the runtimes that are equivalent to the compile-time libraries that were used.</para>
        <para>A typical installation of Firebird Embedded would thus require three complete copies of
        the MSVC8 run-time assembly: one in the application folder and one each into the \intl and
        \udf folders.  To avoid the issue of bloating the installation, some changes were done for
        V.2.1.2 in the way some of the Firebird binaries are built.  (See also
        <ulink url="http://tracker.firebirdsql.org/browse/CORE-2243"><emphasis>Tracker entry
        CORE-2243</emphasis></ulink>).</para>
        <para>These are the changes that enable Firebird Embedded to work even if the application
        structure does not incorporate the MSVC8 runtime assembly:</para>
        <orderedlist numeration="loweralpha">
          <listitem><!-- (a) -->
            <para>The libraries ib_util.dll, fbudf.dll, ib_udf.dll, fbintl.dll are built without any
            embedded manifest.  The effect is to avoid having the loader search for a MSVC8 assembly
            in the same folder as corresponding DLL. For this to work, the host process must have
            already loaded the MSVC8 run-time via manifest before any attempt is made to load these
            secondary DLL's.</para>
          </listitem>
          <listitem><!-- (b) -->
            <para>fbembed.dll now has code to create and activate the activation context from its
            own manifest before loading any secondary DLL that might be required.</para>
          </listitem>
        </orderedlist>
      </section><!-- end of level 3 section -->

      <note>
        <title>Notes</title>
        <orderedlist numeration="loweralpha">
          <listitem><!-- (a) -->
            <para>It is highly recommended to use the Microsoft redistribution package to install the
            MSVC8 run-time!  The executable installer <filename>vcredist_x86.exe</filename>
            or <filename>vcredist_x64.exe</filename> (as appropriate to your kit selection) should
            be present in the zip kits for the full installation and the Embedded version.  If not,
            it can be downloaded from the <ulink url="http://www.microsoft.com/downloads/Browse.aspx?displaylang=en&amp;productID=23947D52-B2BC-4E88-8C51-E81DC2905B0D">Microsoft download site.</ulink></para>
          </listitem>

          <listitem><!-- (b) -->
            <para>Third party UDFs must satisfy <emphasis>one of the following requirements</emphasis> if
            a MSVC8 run-time assembly is installed as private assembly.  When compiling the UDF library,
            the MSVC8 runtime <emphasis>EITHER</emphasis>:</para>
            <itemizedlist>
              <listitem>
                 <para>is NOT used</para>
               </listitem>
              <listitem>
                 <para>is used but the build is done without the embedded manifest</para>
              </listitem>
              <listitem>
                <para>is used and the build is done with the embedded manifest&mdash;the default option
                in the MSVC IDE.  In this case the MSVC8 assembly must be in the same folder as the
                UDF library</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </orderedlist>
      </note>
    </section><!-- level 2 -->

  </section>

</chapter>