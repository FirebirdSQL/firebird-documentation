<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../tools/docbook-dtd/docbookx.dtd">
<article id="docbuildhowto">
  <articleinfo>
    <title>Getting and building the Firebird manual module</title>

    <titleabbrev>Firebird Docbuilding Howto</titleabbrev>

    <author>
      <firstname>Paul</firstname>

      <surname>Vinkenoog</surname>
    </author>

    <edition>26 Oct 2009 – Document version 1.6.1</edition>
  </articleinfo>

  <section id="docbuildhowto-intro">
    <title>Introduction: Purpose of this Howto – Intended audience</title>

    <para>This Howto explains, step by step, how you can download and build the manual module from
    the Firebird Project at SourceForge.</para>

    <section id="docbuildhowto-intro-what">
      <title>What is this "manual module" anyway?</title>

      <para>The manual module is part of the Firebird Project at SourceForge. It is a collective
      effort, aimed at producing comprehensive and accurate documentation on the Firebird RDBMS
      (Relational Database Management System).</para>

      <para>It is important to understand that the manual module contains the documentation in
      <emphasis>source form</emphasis> – to be more precise: in DocBook XML format. These sources
      need to be processed (<firstterm>built</firstterm>) to obtain easily readable docs, which can
      then be published on the Internet.</para>
    </section>

    <section id="docbuildhowto-intro-otherdocs">
      <title>Apart from the manual module, is there any other Firebird documentation?</title>

      <para>Yes! At the time of this writing, most useful Firebird documentation has been produced
      outside the Firebird manual module. We still have a long way to go before the documentation in
      the manual module will be anywhere near complete. In fact, one of the reasons this Howto is
      written is that it can help would-be docwriters to overcome their first hurdles.</para>

      <para>If you are looking for ready Firebird documentation and lots of it, your best starting
      places are:</para>

      <itemizedlist>
        <listitem>
          <para><ulink
          url="http://www.firebirdsql.org/index.php?op=doc">http://www.firebirdsql.org/index.php?op=doc</ulink> – the
          Firebird Documentation Index.</para>
        </listitem>

        <listitem>
          <para><ulink
          url="http://www.firebirdsql.org/index.php?op=doc&amp;id=othersites">http://www.firebirdsql.org/index.php?op=doc&amp;id=othersites</ulink>
          – a listing of other sites with valuable Firebird documentation.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="docbuildhowto-intro-readydocs">
      <title>Do I really have to build the docs myself? Isn't there an easier way?</title>

      <para>Sure there's an easier way. As soon as a piece of documentation reaches a certain level
      of maturity, it is published – in PDF and HTML – on the Firebird website. You can find all the
      docs we have published via the Firebird Documentation Index (see link above).</para>

      <para>You should download the manual module and build the docs yourself if and only if:</para>

      <itemizedlist>
        <listitem>
          <para>You want to check on the absolutely latest state of the docs. (Be aware though that
          one of the reasons a version has not yet been published may be that it contains
          errors.)</para>
        </listitem>

        <listitem>
          <para>You want to help write documentation yourself.</para>
        </listitem>

        <listitem>
          <para>You're interested in learning how this doc building stuff works, and/or you think
          DIY is more fun than an easy file download.</para>
        </listitem>
      </itemizedlist>

      <para>If one of the above applies to your situation, this Howto is for you.</para>
    </section>
  </section>

  <section id="docbuildhowto-getting-the-module">
    <title>Getting the manual module from SourceForge</title>

    <titleabbrev>Getting the manual module from SF</titleabbrev>

    <para>The manual module is part of the Firebird CVS repository at SourceForge. In order to
    download it, you need a piece of software called a <firstterm>CVS client</firstterm>. This
    section describes the necessary steps to get the software and the manual module. The actual doc
    building will be discussed in the next main section: <xref
    linkend="docbuildhowto-building-the-docs" />.</para>

    <section id="docbuildhowto-whatiscvs">
      <title>What is CVS?</title>

      <para>CVS means Concurrent Versions System. It is a tool to manage software development,
      useful both for single developers and for teamwork. Practically all projects at SourceForge
      use CVS to store and develop their code base. The Firebird CVS tree is divided into several
      so-called <firstterm>modules</firstterm>, the manual module being one of them.</para>
    </section>

    <section id="docbuildhowto-cvs-clients">
      <title>CVS clients</title>

      <para>Downloading a module from a CVS repository is called <firstterm>checking out</firstterm>
      in CVS lingo. To do that, you need a CVS client; they exist for practically every operating
      system. Here's a list of CVS clients for some popular OSes:</para>

      <itemizedlist>
        <listitem>
          <para>Linux, BSD and other Unices</para>

          <itemizedlist>
            <listitem>
              <para>Command-line CVS is often pre-installed. If it isn't, use the admin tools of
              your distribution to install it – you'll typically find it in the development
              category. If that doesn't work for you, get it at <ulink
              url="http://www.cvshome.org/">http://www.cvshome.org</ulink></para>
            </listitem>

            <listitem>
              <para>gCvs – a graphical CVS interface, at <ulink
              url="http://cvsgui.sourceforge.net/download.html">http://cvsgui.sourceforge.net/download.html</ulink></para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Windows</para>

          <itemizedlist>
            <listitem>
              <para>Command-line CVS at <ulink
              url="http://www.cvshome.org/">http://www.cvshome.org</ulink></para>
            </listitem>

            <listitem>
              <para>WinCVS: Very powerful, but maybe a bit overwhelming if you are new to it. At
              <ulink
              url="http://cvsgui.sourceforge.net/download.html">http://cvsgui.sourceforge.net/download.html</ulink></para>
            </listitem>

            <listitem>
              <para>TortoiseCVS: A Windows Explorer plugin. Brilliantly designed, very intuitive.
              Lacks some of the more advanced CVS functions, but has everything you need. Get it at
              <ulink
              url="http://tortoisecvs.sourceforge.net/download.shtml">http://tortoisecvs.sourceforge.net/download.shtml</ulink></para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Mac OS X</para>

          <itemizedlist>
            <listitem>
              <para>Mac OS X comes with command-line CVS already included.</para>
            </listitem>

            <listitem>
              <para>Fink (Unix tools for OS X) contains a newer version of CVS. <ulink
              url="http://fink.sourceforge.net/download/index.php">http://fink.sourceforge.net/download/index.php</ulink></para>
            </listitem>

            <listitem>
              <para>MacCvsX at <ulink
              url="http://cvsgui.sourceforge.net/download.html">http://cvsgui.sourceforge.net/download.html</ulink>
              – same project as gCvs and WinCvs. Note: OS X version still in beta.</para>
            </listitem>

            <listitem>
              <para>MacCVS Pro at <ulink
              url="http://sourceforge.net/projects/maccvspro/">http://sourceforge.net/projects/maccvspro/</ulink></para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Mac Classic</para>

          <itemizedlist>
            <listitem>
              <para>MacCvs at <ulink
              url="http://cvsgui.sourceforge.net/download.html">http://cvsgui.sourceforge.net/download.html</ulink>
              – same project as gCvs and WinCvs</para>
            </listitem>

            <listitem>
              <para>MacCVS Pro at <ulink
              url="http://sourceforge.net/projects/maccvspro/">http://sourceforge.net/projects/maccvspro/</ulink></para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>Others</para>

          <itemizedlist>
            <listitem>
              <para>Try your luck at <ulink
              url="http://www.cvshome.org/">http://www.cvshome.org</ulink>, <ulink
              url="http://www.google.com">google</ulink> for it, or ask in the gnu.cvs.help
              newsgroup or on the firebird-docs mailing list.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <para>Get one or more of the abovementioned clients and install according to the instructions
      that come with it. After that, you are ready to check out the manual module.</para>
    </section>

    <section id="docbuildhowto-checking-out">
      <title>Checking out the manual module</title>

      <para>There are two ways you can check out the manual module: as an anonymous user, or with
      your SourceForge login name. The last method is often termed SSH checkout (because it uses a
      Secure SHell) or EXT checkout (because it uses SSH as an EXTernal protocol).</para>

      <para>Everybody can check out anonymously. Members of the Firebird project can also check out
      with their SourceForge login. (If you have an SF account but you aren't a Firebird project
      member, you can only check out anonymously.)</para>

      <para>If you are a project member, you'll usually want to check out with your SF login
      because</para>

      <orderedlist numeration="loweralpha">
        <listitem>
          <para>An anonymous checkout is not always up to date (delay may be several hours to
          several days);</para>
        </listitem>

        <listitem>
          <para>If you are going to contribute to the manual module yourself, you
          <emphasis>must</emphasis> checkout with your SF login or you won't be able to commit (=
          upload) your changes back to the server.</para>
        </listitem>
      </orderedlist>

      <para>We'll describe both methods in the following subsections, starting with anon checkout.
      <link linkend="docbuildhowto-ssh-checkout">Click here</link> to jump to the subsection on SSH
      checkouts (after you have read the warnings below).</para>

      <warning>
        <title>Warnings</title>

        <itemizedlist>
          <listitem>
            <para>If you are behind a firewall, make sure that TCP port 2401 is open. If not, you
            won't be able to make a cvs connection to the repository. You session will simply
            <quote>timeout</quote> trying to connect.</para>
          </listitem>

          <listitem>
            <para>If at all possible, check out to a local directory path that doesn't contain
            spaces or other characters that are susceptible to URL-encoding. Otherwise, problems may
            arise when you build certain types of document. These problems can be overcome, but it's
            better not to have them at all.</para>
          </listitem>
        </itemizedlist>
      </warning>

      <section id="docbuildhowto-anon-checkout">
        <title>Anonymous checkout</title>

        <para>The checkout procedure depends on which client you use. We'll give you the exact
        instructions for command line CVS, and generic info to be used with other clients.</para>

        <section id="docbuildhowto-anon-checkout-commandline">
          <title>Anonymous checkout using command line CVS</title>

          <orderedlist>
            <listitem>
              <para>If you are in a graphical environment, open a command window.</para>
            </listitem>

            <listitem>
              <para>First, you have to verify the password with the server and store it locally.
              Give the command:</para>

              <blockquote>
                <para><command>cvs
                -d:pserver:anonymous@firebird.cvs.sourceforge.net:/cvsroot/firebird
                login</command></para>
              </blockquote>

              <para>When prompted for a password, just hit <keysym>Enter</keysym>, because the
              password for user "anonymous" is empty. Your CVS client will store the password for
              later reuse, so you can skip this step in the future, as long as you don't login with
              other passwords in between.</para>
            </listitem>

            <listitem>
              <para>Now you can get the manual module. Give the command (on one line):</para>

              <blockquote>
                <para><command>cvs -z6
                -d:pserver:anonymous@firebird.cvs.sourceforge.net:/cvsroot/firebird checkout
                manual</command></para>
              </blockquote>

              <para>If all goes well, a directory called <filename>manual</filename> will by created
              below your current dir, and the manual source tree will be downloaded into it. You can
              now build the docs – read further under <link
              linkend="docbuildhowto-building-the-docs"><citetitle>Building the Firebird
              docs</citetitle></link>.</para>
            </listitem>
          </orderedlist>
        </section>

        <section id="docbuildhowto-anon-checkout-otherclients">
          <title>Anonymous checkout using other clients</title>

          <para>There's too much variation to give exact instructions for all CVS clients here.
          Consult the help or documentation for your own client. Elements you may need to fill in at
          some point are:</para>

          <variablelist>
            <varlistentry>
              <term>protocol</term>

              <listitem>
                <para>this must be set to pserver (password server)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>authentication method</term>

              <listitem>
                <para>same as protocol</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>server</term>

              <listitem>
                <para>firebird.cvs.sourceforge.net</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>repository</term>

              <listitem>
                <para>/cvsroot/firebird</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>user name</term>

              <listitem>
                <para>anonymous</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>module name</term>

              <listitem>
                <para>manual</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>cvsroot</term>

              <listitem>
                <para>usually a combination of server and repository, sometimes even with user name
                prepended (e.g. in WinCvs):
                <literal>firebird.cvs.sourceforge.net:/cvsroot/firebird</literal> or
                <literal>anonymous@firebird.cvs.sourceforge.net:/cvsroot/firebird</literal></para>
              </listitem>
            </varlistentry>
          </variablelist>

          <para>Fill in the necessary data and give your client's checkout command. If the checkout
          succeeds, you now have a local copy of the manual module on your computer and are ready to
          build the docs. Read further under <link
          linkend="docbuildhowto-building-the-docs"><citetitle>Building the Firebird
          docs</citetitle></link>.</para>
        </section>
      </section>

      <section id="docbuildhowto-ssh-checkout">
        <title>SSH checkout (with your SF login name)</title>

        <para>To be able to perform an SSH checkout, a secure shell client must be present on your
        system. On most Unix systems, as well as on Mac OS X, <application>OpenSSH</application> is
        installed by default. If not, check the distribution CDs or get it from <ulink
        url="http://www.openssh.com">http://www.openssh.com</ulink>. This site also contains
        pointers to other SSH products for OSes not supported by OpenSSH. Note however that
        installing and configuring SSH on some platforms (including Windows) is not a trivial task.
        You can make life easier for yourself by choosing a CVS client that has SSH built in, like
        <application>TortoiseCVS</application> for Windows.</para>

        <para>As for the checking out itself: just as with anon checkouts, the procedure depends on
        which client you use. Again, we'll give exact instructions for command line CVS, and generic
        info for other clients.</para>

        <important>
          <para>Whatever client you use, do not attempt to check out over an existing local copy,
          e.g. from a previous anonymous checkout. Always check out into a new or at least empty
          directory.</para>
        </important>

        <warning>
          <para>SourceForge may expire your password from time to time. When this happens to you,
          you will receive a 'Permission denied, please try again' error message. If this does
          happen, and you are sure that the password is correct, go to the SourceForge.org web page
          – <ulink url="http://sourceforge.net/index.php">http://sourceforge.net/index.php</ulink> –
          and try to login using your account name and the password you are using to connect to the
          cvs repository. If your password has expired, you will be asked to change it.</para>

          <para>After changing your password on SourceForge, you must start a new shell session or
          you will continue to receive the same error message, even with the new password.</para>
        </warning>

        <section id="docbuildhowto-ssh-checkout-commandline">
          <title>SSH checkout using command line CVS</title>

          <orderedlist>
            <listitem>
              <para>If you are in a graphical environment, open a command window.</para>
            </listitem>

            <listitem>
              <para>First, make sure that you have an environment variable called
              <envar>CVS_RSH</envar> with the value <quote>ssh</quote> (or whatever your SSH client
              is called). How you must do this depends on your OS. On a DOS/Windows command line,
              use <command>set CVS_RSH=ssh</command>. Under Linux/bash: <command>export
              CVS_RSH=ssh</command>.</para>

              <para>You may want to make this envar permanent so you can skip this step in the
              future. How to do this depends on your OS. Consult its documentation if
              necessary.</para>
            </listitem>

            <listitem>
              <para>Give the following command to get the manual module (on one line, and substitute
              <replaceable>username</replaceable> with your own SF user name):</para>

              <blockquote>
                <para><command>cvs -z6
                -d:ext:<replaceable>username</replaceable>@firebird.cvs.sourceforge.net:/cvsroot/firebird
                checkout manual</command></para>
              </blockquote>

              <para>Enter your password when prompted for it.</para>

              <para>If all goes well, a directory called <filename>manual</filename> will by created
              below your current dir, and the manual source tree will be downloaded into it. You can
              now build the docs – read further under <link
              linkend="docbuildhowto-building-the-docs"><citetitle>Building the Firebird
              docs</citetitle></link>.</para>
            </listitem>
          </orderedlist>
        </section>

        <section id="docbuildhowto-ssh-checkout-otherclients">
          <title>SSH checkout using other clients</title>

          <para>There's too much variation to give exact instructions for all CVS clients here.
          Consult the help or documentation for your own client. Elements you may need to fill in at
          some point are:</para>

          <variablelist>
            <varlistentry>
              <term>protocol</term>

              <listitem>
                <para>this must be set to ext (or SSH, or SSL)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>authentication method</term>

              <listitem>
                <para>same as protocol</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>server</term>

              <listitem>
                <para>firebird.cvs.sourceforge.net</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>repository</term>

              <listitem>
                <para>/cvsroot/firebird</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>user name</term>

              <listitem>
                <para>your SourceForge user name</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>module name</term>

              <listitem>
                <para>manual</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>cvsroot</term>

              <listitem>
                <para>usually a combination of server and repository, sometimes even with user name
                prepended (e.g. in WinCvs):
                <literal>firebird.cvs.sourceforge.net:/cvsroot/firebird</literal> or
                <literal><replaceable>username</replaceable>@firebird.cvs.sourceforge.net:/cvsroot/firebird</literal></para>
              </listitem>
            </varlistentry>
          </variablelist>

          <para>Fill in the necessary data and give your client's checkout command. If the checkout
          succeeds, you now have a local copy of the manual module on your computer and are ready to
          build the docs. You can also commit changes you make locally back to the
          repository.</para>
        </section>
      </section>
    </section>
  </section>

  <section id="docbuildhowto-building-the-docs" xreflabel="Building the Firebird docs">
    <title>Building the Firebird docs</title>

    <para>Several Java tools are used to produce the HTML and PDF docs from the DocBook XML source.
    Therefore, you need a recent version of Java 2 installed on your system.</para>

    <para>In the next subsections we will show you:</para>

    <orderedlist spacing="compact">
      <listitem>
        <para>Where to get Java 2</para>
      </listitem>

      <listitem>
        <para>Where to get the tools</para>
      </listitem>

      <listitem>
        <para>How to set up the environment for the doc build process</para>
      </listitem>

      <listitem>
        <para>How to build the HTML and PDF docs</para>
      </listitem>
    </orderedlist>

    <para>If you already have a recent version of Java 2 installed, you may <link
    linkend="docbuildhowto-setup-build-env">skip the first step</link>.</para>

    <section id="docbuildhowto-get-java2" xreflabel="Where to get Java 2">
      <title>Where to get Java 2</title>

      <para>Download and install <emphasis>only one</emphasis> of the following:</para>

      <itemizedlist>
        <listitem>
          <para>Java 2 Runtime Environment, Standard Edition – often abbreviated as J2RE SE.</para>

          <para>Go to <ulink url="http://www.java.com/">http://www.java.com/</ulink> and follow the
          links to the download pages. Get the version for your own OS. Clicking on a "Download" or
          "Get it now" link may lead to windows popping up, asking you if it's OK that Sun
          Microsystems installs stuff on your computer. If you agree, practically everything will be
          installed automatically. If that makes you feel uneasy, you can also download the
          installation program manually and run it yourself.</para>
        </listitem>

        <listitem>
          <para>Java 2 Software Development Kit, Standard Edition – or J2SDK SE.</para>

          <para>This is a much larger package, and it also contains the J2RE SE. If you want the
          SDK, go to <ulink url="http://java.sun.com/j2se/">http://java.sun.com/j2se/</ulink> and
          get the latest stable version. When you have to choose between JRE and SDK, take the SDK.
          (Yes, you can also get the J2RE from here, but you can get it easier and quicker from the
          link in the first option.) Download the installation program and run it.</para>
        </listitem>
      </itemizedlist>

      <para>If you don't understand the difference between the two, go for the first option: the
      Java 2 Runtime Environment. You don't need the SDK to build the Firebird docs.</para>
    </section>

    <section id="docbuildhowto-get-tools">
      <title>Where to get the tools</title>

      <para>The tools and libraries needed to build the HTML and PDF documents come as Java
      <filename class="libraryfile">JAR</filename>s and <filename>ZIP</filename> archives, and we
      used to keep them all in our CVS repository so they landed automatically in the right place
      when you checked out the manual module. However, it's bad practice to keep large binaries in
      CVS, especially if their sources are already managed elsewhere (they're all open-source
      tools). So nowadays we keep these binaries out of CVS and place them on the Firebird website
      for you to download.</para>

      <para>After checking out the manual module, look in the <filename
      class="directory">manual/lib</filename> directory. It contains a file
      <filename>_readme_libs.txt</filename> with exact instructions on downloading and installing
      the missing libraries. Likewise, <filename>_readme_tools.txt</filename> in <filename
      class="directory">manual/tools</filename> tells you where to download some required
      tools.</para>
    </section>

    <section id="docbuildhowto-setup-build-env">
      <title>How to set up the environment for the build</title>

      <para>The build scripts need an environment variable <envar>JAVA_HOME</envar> pointing to the
      Java 2 install directory.</para>

      <itemizedlist>
        <listitem>
          <para>On Windows, this is typically something of the form <filename>C:\Program
          Files\Java\j2re1.4.2_01</filename>. To be sure, check if there's a directory called
          <filename>bin</filename> underneath it, and if this <filename>bin</filename> subdir
          contains the file <filename>java.exe</filename></para>
        </listitem>

        <listitem>
          <para>On Linux, it may be <filename>/usr/lib/java/jre</filename> or
          <filename>/usr/java/j2sdk</filename>, or... well, it can be a lot of things. The same
          check applies: it should have a subdir <filename>bin</filename> containing an executable
          file <filename>java</filename> (without the <filename>.exe</filename> extension
          here).</para>
        </listitem>
      </itemizedlist>

      <para>If you're lucky, the <envar>JAVA_HOME</envar> envar is already present and correct. If
      not, you have to set it yourself, e.g. under Windows with <command>set JAVA_HOME=C:\Program
      Files\Java\j2re1.4.2_01</command> or under Linux/bash with <command>export
      JAVA_HOME=/usr/lib/java/jre</command>. (Note: these paths are just examples; they may or may
      not be the same as yours.)</para>

      <para>Tip: make the <envar>JAVA_HOME</envar> envar permanent so you won't have to set it again
      and again. How to do this depends on your OS. Consult its documentation if necessary.</para>
    </section>

    <section id="docbuildhowto-building-output-docs">
      <title>Building the HTML and PDF docs</title>

      <para>If you've made it here in one piece, you are finally ready to build the Firebird docs.
      Here's what to do:</para>

      <orderedlist>
        <listitem>
          <para>If you haven't done so already, this is the moment to read the
          <filename>ReadMe</filename> file that lives in the <filename>manual</filename> directory.
          It may contain important information not (yet) included in this Howto.</para>
        </listitem>

        <listitem>
          <para>If you are in a graphical environment, open a command window.</para>
        </listitem>

        <listitem>
          <para>Unless the <filename>ReadMe</filename> instructs you otherwise, go to the folder
          <filename>manual/src/build</filename> and give the command</para>

          <blockquote>
            <para><command>build</command> (in Windows), or</para>

            <para><command>./build.sh</command> (in Linux)</para>
          </blockquote>

          <para>If everything was set up correctly, you now get a number of output lines ending with
          <literal>BUILD SUCCESSFUL</literal>, and mentioning some <firstterm>build
          targets</firstterm> (things you can build).</para>
        </listitem>

        <listitem>
          <para>Now you can build something more substantial, e.g.</para>

          <blockquote>
            <para><command>build html</command> or</para>

            <para><command>build pdf</command> or</para>

            <para><command>build docs</command></para>
          </blockquote>

          <para>Whatever you build will wind up in the directory tree under
          <filename>manual/dist</filename></para>
        </listitem>
      </orderedlist>

      <note>
        <title>Notes</title>

        <itemizedlist>
          <listitem>
            <para>If you build the PDF target, you will receive tons of error messages. You can
            safely ignore them, as long as one of the last lines reads <literal>BUILD
            SUCCESSFUL</literal>.</para>
          </listitem>

          <listitem>
            <para>Due to limitations in the build software, some PDF files may need manual
            post-processing before they are presentable. For your own use they're OK though, in the
            sense that <quote>everything's in there</quote>. If you do want to fix them up, read the
            topic <link linkend="docbuildhowto-pdfimprove"><citetitle>Improving the
            PDF</citetitle></link> near the end of this guide.</para>
          </listitem>
        </itemizedlist>
      </note>

      <warning>
        <para>If your local copy of the manual module is placed in a path that contains spaces or
        other non-alphanum, non-underscore characters, the PDF build may fail because an
        intermediate file is placed in a newly created path with the same name, except that all the
        <quote>offending</quote> characters are replaced with their URL-encodings: space becomes
        <literal>%20</literal>, etc.</para>

        <para>The monohtml build too (monohtml is the same as html, but as one big web page) will
        wind up in the urlencoded equivalent of the path. But the images that go with the page are
        placed in the original path. All this is caused by a Java class that performs some of the
        build tasks and converts path names to URLs in the process.</para>

        <para>The best way to avoid these problems is to place the manual module in a path that
        contains only unaccented letters, digits and/or underscores. The second best way is to make
        the URL-encoded version of the path a symlink to the real path. Once you have set up the
        symlink, all the future builds will go fine. (This may not work on Windows, however.)</para>
      </warning>

      <section id="docbuildhowto-building-non-english">
        <title>Building non-English sets with <parameter>-Dsfx</parameter></title>

        <para>To build documentation sets in non-English languages (in so far as they are available)
        use the <parameter>-Dsfx</parameter> argument and supply the language code, e.g.:</para>

        <blockquote>
          <para><command>build pdf -Dsfx=es</command></para>

          <para><command>build html -Dsfx=fr</command></para>
        </blockquote>

        <para>Non-English output will go into subdirectories like
        <filename>manual/dist/pdf/ru</filename>, <filename>manual/dist/html/fr</filename>,
        etc.</para>

        <para>If you don't specify <parameter>-Dsfx</parameter>, the English set will be
        built.</para>

        <warning>
          <para>Not all language sets contain the same amount of documentation. This depends on
          docwriters' and translators' activity. Usually, the English set will be the most complete
          and the most up-to-date.</para>
        </warning>
      </section>

      <section id="docbuildhowto-building-subsets">
        <title>Building subsets with <parameter>-Did</parameter></title>

        <para>The examples given so far all produce the entire docset (for one language). Usually,
        this is not what you want. To build a specific document – e.g. a book or an article – use
        the <parameter>-Did</parameter> argument.</para>

        <para>With the <parameter>-Did</parameter> argument, you must supply the ID of the element
        you want to build, for example:</para>

        <blockquote>
          <para><command>build pdf -Did=fbutils</command></para>

          <para><command>build pdf -Dsfx=fr -Did=qsg15-fr</command></para>
        </blockquote>

        <para>How do you know the ID? You can find it in the DocBook XML sources. Look for the
        <sgmltag class="attribute">id</sgmltag> attributes on elements such as <sgmltag
        class="element">book</sgmltag>, <sgmltag class="element">article</sgmltag>, and <sgmltag
        class="element">chapter</sgmltag>. To find out more about this subject, consult the
        <citetitle>Firebird Docwriting Guide</citetitle>.</para>

        <para>As you can see from the last example, command-line arguments can be combined.</para>
      </section>

      <section id="docbuildhowto-building-other-basesets">
        <title>Building a different base set with <parameter>-Dbase</parameter></title>

        <para>Since January 2006, the Firebird Release Notes have been integrated with the manual
        module, but they constitute a base set of their own, parallel to the default
        <quote><literal>firebirddocs</literal></quote> set. This has given rise to yet another
        command-line parameter, <parameter>-Dbase</parameter> (pun intended), whose value should be
        <quote><literal>rlsnotes</literal></quote> to build the Release Notes:</para>

        <blockquote>
          <para><command>build pdf -Dbase=rlsnotes</command></para>

          <para><command>build pdf -Dbase=rlsnotes -Did=rlsnotes20</command></para>

          <para><command>build pdf -Dbase=rlsnotes -Dsfx=fr</command></para>
        </blockquote>

        <para>Meanwhile, two other base sets have been added: <literal>papers</literal> and
        <literal>refdocs</literal>.</para>

        <para>The output from alternative base sets is written to the same folders as usual, except
        in one case: the multi-file <systemitem>html</systemitem> target output is placed in
        <filename>manual/dist/html-&lt;base&gt;</filename>, to avoid mixing files from different
        base sets and so that the sets' <filename>index.html</filename> files don't overwrite each
        other. Non-English sets go into
        <filename>manual/dist/html-&lt;base&gt;/&lt;sfx&gt;</filename>. For instance, the English
        HTML Release Notes are written to <filename>manual/dist/html-rlsnotes</filename>, the French
        notes to <filename>manual/dist/html-rlsnotes/fr</filename>.</para>

        <para>Rendering <systemitem>monohtml</systemitem> and <systemitem>pdf</systemitem> into the
        same folder as the default set causes no problems, as these targets generate single-file
        outputs, each with a unique filename.</para>
      </section>

      <section id="docbuildhowto-building-defaults">
        <title>Setting default values in <filename>build.xml</filename></title>

        <para>Do you often find yourself building the same base set, language version, and/or
        subset? Then you may want to set the corresponding parameter value(s) in the build control
        file <filename>build.xml</filename>, so you don't have to type them on the command line
        every time. Instructions can be found near the top of <filename>build.xml</filename>, at the
        beginning of the <systemitem>init</systemitem> target.</para>

        <para>If you make use of this feature, you can still build the other stuff by overriding
        your personal settings at the command line. For instance, if you have set
        <parameter>base</parameter> to <literal>rlsnotes</literal> in the build file, you can build
        the default docset like this:</para>

        <blockquote>
          <para><command>build html -Dbase=firebirddocs</command></para>
        </blockquote>
      </section>

      <section id="docbuildhowto-building-conclusion">
        <title>Building the docs – conclusion</title>

        <para>That's it – you are now a certified Firebird doc builder. Congratulations!</para>

        <para>If you want to write or translate docs for the Firebird Project yourself, also read
        the <ulink url="http://www.firebirdsql.org/manual/docwritehowto.html">Firebird Docwriting
        Guide</ulink>.</para>
      </section>
    </section>
  </section>

  <section id="docbuildhowto-cvs-update">
    <title>Keeping your manual module up to date</title>

    <titleabbrev>Keeping the module up to date</titleabbrev>

    <para>The manual module is a work in progress. Contributors commit changes to it on a regular
    basis. Some time after your initial checkout, your local copy will be out of sync with the
    repository at SourceForge. Of course it would be a waste of bandwidth if you had to check out
    the entire module time and again, only to update those few files that have changed. Moreover,
    doing so would overwrite any changes you may have made yourself. That's why CVS has an
    <command>update</command> command. With <command>update</command>, only the
    <emphasis>changes</emphasis> are downloaded from the server, and your own local changes are
    preserved. (In the event that another contributor has changed a file in the same spot as you, a
    conflict is signaled and you must edit the file in question to solve it.)</para>

    <para>Updating is dead easy. If you use command line CVS, go to the <filename
    class="directory">manual</filename> directory and type:</para>

    <blockquote>
      <para><command>cvs -z6 update -d</command></para>
    </blockquote>

    <para>This command is the same whether you checked out anonymously or with your SF login and
    password. CVS knows which server to contact and how to authenticate you because this information
    is saved in the <filename class="directory">manual/CVS</filename> subdirectory, which was
    created automatically when you first checked out the module. The only difference is that if you
    checked out with login and pass, you will also be prompted for your password when you run
    <command>update</command>.</para>

    <para>If you use another CVS tool, look for its <command>update</command> command or menu
    option.</para>
  </section>

  <section id="docbuildhowto-troubleshooting">
    <title>If things go wrong</title>

    <para>If the build process fails, this may be due to a too old Java 2 version. See
    <citetitle><xref linkend="docbuildhowto-get-java2" /></citetitle> for more info on getting the
    latest version.</para>

    <para>Alternatively, if the error message says something about a class – or class definition –
    not being found, you may not have all the build libraries installed. Consult
    <filename>manual/lib/_readme_libs.txt</filename> and follow the instructions.</para>

    <para>If a PDF build ends with <literal>BUILD</literal> <literal>SUCCESSFUL</literal> but a
    couple of lines above it says <quote><computeroutput>No files processed. No files were
    selected...</computeroutput></quote> and indeed the PDF file isn't there, this may be caused by
    spaces and/or other <quote>naughty</quote> characters in the file path. See the warning in <link
    linkend="docbuildhowto-building-output-docs"><citetitle>Building the HTML and PDF
    docs</citetitle></link>.</para>

    <para>If a PDF build succeeds but you find ugly things within the produced document, have a look
    at the next section: <link linkend="docbuildhowto-pdfimprove"><citetitle>Improving the
    PDF</citetitle></link>. You may find the solution there.</para>

    <para>If anything else goes wrong and you can't get it right, ask for help on the firebird-docs
    mailing list. Please give a good description of your problem so we can help you better. If you
    aren't on the firebird-docs mailing list yet, visit <ulink
    url="https://lists.sourceforge.net/lists/listinfo/firebird-docs">https://lists.sourceforge.net/lists/listinfo/firebird-docs</ulink>
    for information and subscription.</para>
  </section>

  <section id="docbuildhowto-pdfimprove">
    <title>Advanced topic: Improving the PDF</title>

    <titleabbrev>Advanced: Improving the PDF</titleabbrev>

    <para>Due to limitations in our build tools, the PDF output may suffer from some irritating
    defects, such as:</para>

    <itemizedlist>
      <listitem>
        <para>Widowed headers and titles (appearing at the bottom of the page, with the
        corresponding text block starting on the next page).</para>
      </listitem>

      <listitem>
        <para>Page breaks at awkward positions in tables or lists.</para>
      </listitem>

      <listitem>
        <para>Overly wide horizontal justification spaces.</para>
      </listitem>

      <listitem>
        <para>Squeezed, truncated or otherwise messed-up page-sized content. This is a new feature,
        introduced with FOP 0.93.</para>
      </listitem>
    </itemizedlist>

    <para>This part shows you how to deal with these problems, should the need arise.</para>

    <section id="docbuildhowto-pdfimprove-howpdf">
      <title>How the PDF is built</title>

      <para>First you have to understand how the PDF is built. Contrary to the HTML generation, this
      is a two-step process:</para>

      <procedure>
        <step>
          <para>The DocBook XML source is converted to a Formatting Objects (FO) file. FO – formally
          called <firstterm>XSL-FO</firstterm> – is also an XML format, but unlike DocBook it's
          presentation-oriented. This step is performed by a so-called <firstterm>XSL
          transformer</firstterm> called <application>Saxon</application>. The output goes into
          <filename>manual/inter/<replaceable>filename</replaceable>.fo</filename>.</para>
        </step>

        <step>
          <para>Another tool, <application>Apache FOP</application> (<firstterm>Formatting Objects
          Processor</firstterm>), then picks up
          <filename><replaceable>filename</replaceable>.fo</filename> and converts it to
          <filename><replaceable>filename</replaceable>.pdf</filename>, which is stored in
          <filename>manual/dist/pdf</filename>.</para>
        </step>
      </procedure>

      <para>If you give a <command>build pdf</command> command, two consecutive build targets are
      called internally: <command>fo</command> and <command>fo2pdf</command>, corresponding to the
      two steps described above. But you can also call them from the command line. For
      instance,</para>

      <blockquote>
        <para><command>build fo -Did=qsg15</command></para>
      </blockquote>

      <para>...transforms the 1.5 Quick Start Guide source to
      <filename>manual/inter/qsq15.fo</filename>. And</para>

      <blockquote>
        <para><command>build fo2pdf -Did=qsg15</command></para>
      </blockquote>

      <para>...produces the PDF from the FO file (which must of course be present for this step to
      succeed).</para>

      <para>In fact, <command>build pdf</command> is just a shortcut for <command>build fo</command>
      followed by <command>build fo2pdf</command>.</para>

      <para>This setup allows us to edit the FO file manually before generating the final PDF. And
      that's exactly what we're going to do to fix some of those nasty problems that can spoil our
      PDFs.</para>
    </section>

    <section id="docbuildhowto-pdfimprove-scheme">
      <title>General repair scheme</title>

      <para>The general procedure for improving the PDF output by editing the FO file is:</para>

      <procedure>
        <step>
          <para>Build the PDF once as usual with <command>build pdf
          <replaceable>[arguments]</replaceable></command>.</para>
        </step>

        <step>
          <para>Start reading the PDF and find the first trouble spot.</para>
        </step>

        <step>
          <para>Open the FO file in an XML or text editor.</para>
        </step>

        <step>
          <para>Find the location in the FO file that corresponds to the trouble spot in the PDF
          (we'll show you how later).</para>
        </step>

        <step>
          <para>Edit the FO file to fix the problem (we'll show you how later), and save it.</para>
        </step>

        <step>
          <para>Rebuild the PDF, but this time use <command>build fo2pdf
          <replaceable>[arguments]</replaceable></command>. If you don't, you'll overwrite the
          changes you've just made to the FO file, get the same PDF as first, and have to start all
          over again.</para>
        </step>

        <step>
          <para>Check if the problem is really solved and if so, find the next trouble spot in the
          PDF.</para>
        </step>

        <step>
          <para>Repeat steps 4–7 until you've worked your way through the entire PDF.</para>
        </step>
      </procedure>

      <note>
        <title>Notes</title>

        <itemizedlist>
          <listitem>
            <para>Although this FO-editing approach suggests that the problem lies in the FO file,
            this is not the case. The FO file is all right, but <application>Apache
            FOP</application> doesn't support all the nice features in the XSL-FO specification
            (yet). With our manual editing, we force the PDF in a certain direction.</para>
          </listitem>

          <listitem>
            <para>It is important to fix the problems <emphasis>in document order</emphasis>.
            Editing the FO in one spot may lead to vertical adjustments at the corresponding spot in
            the PDF: more lines, less lines, lines moving to the following page, etc... These
            adjustments may affect everything that comes after it.</para>

            <para>For the same reason, you should always look for the next problem
            <emphasis>after</emphasis> you have fixed the previous one. For instance, don't make a
            list of all widowed headers in the PDF and then start fixing them all in the FO file.
            Fixing a widowed header moves all the text below it downward, possibly creating new
            widowed headers and un-widowing others.</para>
          </listitem>

          <listitem>
            <para>In general, you can keep the FO file open throughout the process. Just don't
            forget to save your changes before you rebuild the PDF. You must close the PDF before
            every rebuild though: once it's opened in Adobe (even in Adobe
            <emphasis>Reader</emphasis>), other processes can't write to it.</para>
          </listitem>

          <listitem>
            <para>The entire process can be pretty time-consuming, so don't try to fix every tiny
            little imperfection, especially if you're a beginning FO hacker. In general, only the
            widowed headers are <emphasis>really</emphasis> ugly and make the document look very
            unprofessional. Fortunately, they have become very rare since we've moved to FOP
            0.93.</para>
          </listitem>
        </itemizedlist>
      </note>

      <para>The next section deals with the various problems and how to solve them.</para>
    </section>

    <section id="docbuildhowto-pdfimprove-solutions">
      <title>Common problems and their solutions</title>

      <itemizedlist spacing="compact">
        <listitem>
          <para><link linkend="docbuildhowto-pdfimprove-widows">Widowed headers</link></para>
        </listitem>

        <listitem>
          <para><link linkend="docbuildhowto-pdfimprove-splitrows">Split table rows or list
          items</link></para>
        </listitem>

        <listitem>
          <para><link linkend="docbuildhowto-pdfimprove-widespaces">Overly wide horizontal
          spaces</link></para>
        </listitem>

        <listitem>
          <para><link linkend="docbuildhowto-pdfimprove-massacredformals">Squeezed, truncated or
          otherwise messed-up page-sized content</link></para>
        </listitem>
      </itemizedlist>

      <section id="docbuildhowto-pdfimprove-widows">
        <title>Widowed headers</title>

        <para><emphasis>Problem:</emphasis> Headers or titles at the bottom of the page.</para>

        <para><emphasis>Cause:</emphasis> Apache FOP doesn't support the <sgmltag
        class="attribute">keep-with-next</sgmltag> attribute everywhere.</para>

        <note>
          <para>Since we've upgraded to Apache FOP 0.93, this problem – which used to be our biggest
          annoyance – has become <emphasis role="bold">extremely rare</emphasis>. Yet it may still
          occur under some circumstances. Or, more in general, there may be a page break you find
          awkward, e.g. after a line that announces what's to come and ends with a colon. This
          section helps you solve such cases.</para>

          <para>Note that the example used here – a widowed section header – shouldn't occur
          anymore, but it's still usable to demonstrate the steps you have to take, especially for
          elements with an <sgmltag class="attribute">id</sgmltag> attribute.</para>
        </note>

        <para><emphasis>Solution:</emphasis> Force a page break at the start of the element (often a
        list, list item or table) that the title or header belongs to.</para>

        <para><emphasis>How:</emphasis> If the element has an <sgmltag
        class="attribute">id</sgmltag> attribute (you can see this in the DocBook source), do a
        search on the id in the FO file. For example, suppose that you've just built the
        <citetitle>Firebird 2 Quick Start Guide</citetitle> and you find that the title
        <emphasis>Creating a database using isql</emphasis> is positioned at the bottom of a page.
        In the DocBook XML source you can see that this is the title of a section whose id is
        <sgmltag class="attvalue">qsg2-databases-creating</sgmltag>. If you search on
        <literal>qsg2-databases-creating</literal> from the top of the file, your first hit will
        probably look like this:</para>

        <programlisting>&lt;fo:bookmark starting-state="hide"
             internal-destination="<emphasis role="bold">qsg2-databases-creating</emphasis>"&gt;</programlisting>

        <para>The <sgmltag class="element">fo:bookmark</sgmltag> elements correspond to the links in
        the navigation frame on the left side of the PDF. So this is not yet the section itself;
        you'll have to look further. Next find:</para>

        <programlisting>&lt;fo:block text-align-last="justify" end-indent="24pt"
          last-line-end-indent="-24pt"&gt;&lt;fo:inline
   keep-with-next.within-line="always"&gt;&lt;fo:basic-link
   internal-destination="<emphasis role="bold">qsg2-databases-creating</emphasis>"&gt;Creating a database...</programlisting>

        <para>Here, the id is an attribute value in a <sgmltag
        class="element">fo:basic-link</sgmltag>. We're in the Table of Contents now. Still not
        there.</para>

        <para>The third and fourth finds are often a couple of lines below the second; they serve to
        create a link from the page number citation in the ToC. But the fifth is usually the one
        we're looking for (unless there are any more forward links to the section in
        question):</para>

        <programlisting>&lt;fo:block id="<emphasis role="bold">qsg2-databases-creating</emphasis>"&gt;</programlisting>

        <para>That's it! Most mid- and low-level hierarchical elements in DocBook (<sgmltag
        class="element">preface</sgmltag>, <sgmltag class="element">section</sgmltag>, <sgmltag
        class="element">appendix</sgmltag>, <sgmltag class="element">para</sgmltag> etc.) wind up as
        a <sgmltag class="element">fo:block</sgmltag> in the FO file. Now we have to tell Apache FOP
        that it must start this section on a new page. Edit the line like this:</para>

        <programlisting>&lt;fo:block id="qsg2-databases-creating" <emphasis role="bold">break-before="page"</emphasis>&gt;</programlisting>

        <para>Save the change and rebuild the PDF (remember: use <command>build fo2pdf</command>,
        not <command>build pdf</command>). The section title will now appear at the top of the
        following page, and you can move on to the next problem.</para>

        <section id="docbuildhowto-pdfimprove-widows-noid">
          <title>When there is no DocBook ID</title>

          <para>What if the element has no DocBook id? You'll have to search on (part of) the
          title/header then. This is a bit trickier, because the title may contain a line break in
          the FO file, in which case it won't be found. Or the title element has one or more
          children of its own (e.g. <sgmltag class="element">quote</sgmltag> or <sgmltag
          class="element">emphasis</sgmltag>). This too will keep you from finding it if you search
          on the full title. On the other hand: the more you shrink the search term, the higher the
          probability that you will get a number of unrelated hits. You'll have to use your own
          judgement here; if there is some characteristic text shortly before or after the title you
          can also search on that, and try to locate the title in the lines above and below
          it.</para>

          <para>No matter how, once you've found the title, go upward in the FO file until you find
          the beginning of the section – often identifiable by the auto-generated FO id:</para>

          <programlisting>&lt;/fo:block&gt;
<emphasis role="bold">&lt;fo:block id="d0e2340"&gt;</emphasis>
  &lt;fo:block&gt;
    &lt;fo:block&gt;
      &lt;fo:block keep-together="always" margin-left="0pc"
                font-family="sans-serif,Symbol,ZapfDingbats"&gt;
        &lt;fo:block keep-with-next.within-column="always"&gt;
          &lt;fo:block font-family="sans-serif" font-weight="bold"
                    keep-with-next.within-column="always"
                    space-before.minimum="0.8em" space-before.optimum...
                    space-before.maximum="1.2em" color="#404090" hyph...
                    text-align="start"&gt;
            &lt;fo:block font-size="11pt" font-style="italic"
                      space-before.minimum="0.88em" space-before.opti...
                      space-before.maximum="1.32em"&gt;<emphasis role="bold">The DISTINCT keyword
              comes to the rescue!</emphasis>&lt;/fo:block&gt;</programlisting>

          <para>As you see, there may be quite a number of lines between the section start and the
          title text. Notice, by the way, how the title is split over two lines here.</para>

          <para>Once you've found the <sgmltag class="element">fo:block</sgmltag> that corresponds
          to the section start, give it a <sgmltag class="attribute">break-before="page"</sgmltag>
          attribute just like we did before.</para>

          <para>Why look for the section start and not apply the <sgmltag
          class="attribute">break-before</sgmltag> attribute to the <sgmltag
          class="element">fo:block</sgmltag> immediately enclosing the title? Well, doing the latter
          will print the title on the next page all right, but links from the Outline and the ToC
          will point to the previous page, because the <quote>invisible</quote> section start – the
          block tag bearing the ID – lies before the page break.</para>

          <para>As said, the widowed header problem shouldn't occur anymore with sections, but it
          might still happen to some other objects like tables, figures etc. for which the
          stylesheets generate ids if you haven't assigned them yourself. In all those cases you can
          use the approach described above.</para>

          <para>There are also numerous DocBook elements – in fact, the majority – for which the
          stylesheets don't generate ids. Examples are <sgmltag class="element">para</sgmltag>,
          <sgmltag class="element">informaltable</sgmltag>, the various list types, etc. In those
          cases, once you have located the text fragment in the FO file, simply apply the <sgmltag
          class="attribute">break-before</sgmltag> attribute to the nearest enclosing <sgmltag
          class="element">fo:block</sgmltag>.</para>
        </section>
      </section>

      <section id="docbuildhowto-pdfimprove-splitrows">
        <title>Split table rows or list items</title>

        <para><emphasis>Problem:</emphasis> Table rows or list items split across page boundaries.
        (DocBook lists are implemented as fo:tables.)</para>

        <para><emphasis>Cause:</emphasis> Nothing in particular – there's no rule that forbids page
        breaks to occur within table rows.</para>

        <para><emphasis>Solution:</emphasis> If you want to keep the row together, insert a hard
        page break at the start of the row.</para>

        <para><emphasis>How:</emphasis> Find the row by searching on text at the beginning of the
        row or at the end of the previous row. The element you're looking for is a <sgmltag
        class="element">fo:table-row</sgmltag>, but don't use that for a search term, because many
        DocBook elements (not only <sgmltag class="starttag">table</sgmltag>s) are implemented using
        <sgmltag class="element">fo:table</sgmltag>s and thus contain <sgmltag
        class="element">fo:table-row</sgmltag>s.</para>

        <para>Once the start of the split row is found, add a <sgmltag
        class="attribute">break-before</sgmltag> attribute like you did with widowed headers:</para>

        <programlisting>&lt;fo:table-row <emphasis role="bold">break-before="page"</emphasis>&gt;</programlisting>

        <para>Alternatively, you can give the previous row a <sgmltag
        class="attribute">break-after</sgmltag> attribute.</para>
      </section>

      <section id="docbuildhowto-pdfimprove-widespaces">
        <title>Overly wide horizontal spaces</title>

        <para><emphasis>Problem:</emphasis> Very large horizontal justification spaces on lines
        above a long spaceless string. These large strings are often printed in monospaced
        (fixed-width) font:</para>

        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="images/bigspace.png" format="PNG" />
          </imageobject>
        </mediaobject>

        <para><emphasis>Cause:</emphasis> Apache FOP often doesn't hyphenate these strings.
        Therefore, if the string doesn't fit on the line it must be moved to the next line as a
        whole. This leaves the previous line with <quote>too little</quote> text, making large
        justification spaces necessary. Note that in the example above, the large spaces on the top
        line are caused by the string on the line below, not by the one on the line itself.</para>

        <para><emphasis>Solution:</emphasis> You may have good reasons to leave the string unbroken.
        In that case, accept the wide spaces as a consequence. Otherwise, insert a space (or
        hyphen-plus-space) at the point where the string should be broken.</para>

        <para><emphasis>How:</emphasis> First find the string in the FO file by searching on (part
        of) its contents. If it's monospaced in the PDF, you'll almost always find it within a
        <sgmltag class="element">fo:inline</sgmltag> element. Then look at the PDF and estimate how
        much of the as yet unbroken string would fit in the large whitespace on the line above. Back
        in the FO file, insert a space – possibly preceded by a hyphen – in the string at a location
        where it's acceptable to break it. Rebuild the PDF (<command>build fo2pdf</command> !) and
        check the result. If you've broken the string too far to the right, it will still be
        entirely on the next line. Too far to the left and the whitespace may still be too wide to
        your liking. Adjust and rebuild until you're satisfied.</para>

        <para>One surprise you may get during this job is that, once you've broken the string in one
        place, Apache FOP suddenly decides that it's OK to hyphenate the rest of the string. This
        will leave you with a part of the string on the first line that contains your own (now
        erroneous) space but also extends beyond it. You'll now have to delete your space and break
        the string again at the spot chosen by Apache.</para>

        <section id="docbuildhowto-pdfimprove-widespaces-zwsp">
          <title>Inserting zero-width spaces</title>

          <para>An alternative approach to the wide-spaces problem is to insert zero-width space
          characters at each and every point where the culprit string may be broken, leaving it to
          Apache FOP to work out which one is best suited. This is guaranteed to work at the first
          try, but:</para>

          <itemizedlist>
            <listitem>
              <para>it's only feasible if you have an editor that lets you insert ZWSPs
              easily;</para>
            </listitem>

            <listitem>
              <para>you can only do this in places where it's OK to break the string without a
              hyphen.</para>
            </listitem>
          </itemizedlist>
        </section>
      </section>

      <section id="docbuildhowto-pdfimprove-massacredformals">
        <title>Squeezed, truncated or otherwise messed-up page-sized content</title>

        <para><emphasis>Problem:</emphasis> Tables, figures or other formal objects are truncated or
        some parts are printed on top of others.</para>

        <para><emphasis>Cause:</emphasis> Formal objects are given a <sgmltag
        class="attribute">keep-together.within-page="always"</sgmltag> attribute by the stylesheets.
        As of FOP 0.93, this attribute is <emphasis>always</emphasis> enforced, even if the object
        is too large to fit on a page. The result: wrecked content that is crammed together on one
        page.</para>

        <para><emphasis>Solution:</emphasis> There are three alternatives. 1: Use the corresponding
        <emphasis>in</emphasis>formal DocBook element instead. 2: Insert a processing instruction in
        the DocBook source. 3: Remove the attribute from the FO.</para>

        <para><emphasis>How:</emphasis> Two solutions are applied to the DocBook source, the third
        involves editing the FO file:</para>

        <itemizedlist>
          <listitem>
            <para>If you don't mind leaving the element titleless, use <sgmltag
            class="element">informalequation</sgmltag> / <sgmltag
            class="element">informalexample</sgmltag> / <sgmltag
            class="element">informalfigure</sgmltag> / <sgmltag
            class="element">informaltable</sgmltag> instead of their formal counterparts <sgmltag
            class="element">equation</sgmltag>, <sgmltag class="element">example</sgmltag>, <sgmltag
            class="element">figure</sgmltag> and <sgmltag class="element">table</sgmltag>. These
            elements don't get the <sgmltag class="attribute">keep-together</sgmltag> attribute
            during transformation, so they will be page-broken as necessary.</para>
          </listitem>

          <listitem>
            <para>If it concerns a table and you want to keep the title, insert a
            <firstterm>processing instruction</firstterm> like this:</para>

            <programlisting>&lt;table frame="all" id="ufb-about-tbl-features"&gt;
  <emphasis role="bold">&lt;?dbfo keep-together='auto'?&gt;</emphasis>
  &lt;title&gt;Summary of features&lt;/title&gt;
  ...
  (table content...)
  ...
&lt;/table&gt;</programlisting>

            <para>Adding the instruction if you're working in the source text is easy enough. With
            XMLMind, it's a bit laborious:</para>

            <procedure>
              <step>
                <para>Place the cursor somewhere in the title or select the entire title
                element.</para>
              </step>

              <step>
                <para>Choose <emphasis>Edit -&gt; Processing Instruction -&gt; Insert Processing
                Instruction Before</emphasis> from the menu. A green line will appear above the
                title.</para>
              </step>

              <step>
                <para>Type <literal>keep-together='auto'</literal> on that line.</para>
              </step>

              <step>
                <para>With the cursor still on the green line, choose <emphasis>Edit -&gt;
                Processing Instruction -&gt; Change Processing Instruction Target</emphasis> from
                the menu. A dialogue box pops up.</para>
              </step>

              <step>
                <para>In the dialogue box, change <literal>target</literal> to
                <literal>dbfo</literal> and click OK.</para>
              </step>
            </procedure>

            <para>By the way: you can do the opposite with an <sgmltag
            class="element">informaltable</sgmltag> if you absolutely don't want it broken at page
            borders. The procedure is the same, except that you must specify
            <literal>always</literal> instead of <literal>auto</literal>. Be sure that the
            informaltable does fit on one page, though!</para>

            <para>We don't have a similar provision for the other formal objects because we probably
            don't need it. (Things like this require work on our custom stylesheets, so we only
            implement them if we really feel the need.)</para>
          </listitem>

          <listitem>
            <para>Ye olde fo-hacking way... open the FO file, locate the element (tip: give it an
            <sgmltag class="attribute">id</sgmltag> in the DocBook source so it's easy to find) and
            remove the <sgmltag class="attribute">keep-together.within-page="always"</sgmltag>
            attribute. A disadvantage is that this procedure has to be repeated every time the
            source changes and a new PDF is built. The other two solutions are persistent.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>

    <section id="docbuildhowto-pdfimprove-links">
      <title>XSL-FO references</title>

      <para>The official XSL-FO (Formatting Objects) page is here: <ulink
      url="http://www.w3.org/TR/xsl/">http://www.w3.org/TR/xsl/</ulink></para>

      <para>The Apache FOP homepage is here: <ulink
      url="http://xmlgraphics.apache.org/fop/">http://xmlgraphics.apache.org/fop/</ulink></para>

      <para>The Apache FOP compliance page is here: <ulink
      url="http://xmlgraphics.apache.org/fop/compliance.html">http://xmlgraphics.apache.org/fop/compliance.html</ulink>.
      It contains a large object support table where you can look up which XSL-FO objects and
      attributes (properties) are supported. When consulting the table, please bear in mind that we
      currently use Apache FOP 0.93 (but with some home-made patches).</para>
    </section>
  </section>

  <appendix id="docbuildhowto-dochist">
    <title>Document History</title>

    <para>The exact file history is recorded in the <filename class="directory">manual</filename>
    module in our CVS tree; see <ulink
    url="http://sourceforge.net/cvs/?group_id=9028">http://sourceforge.net/cvs/?group_id=9028</ulink></para>

    <para><revhistory>
        <revision>
          <revnumber>0.1</revnumber>

          <date>2 Nov 2003</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>First draft published under the title <citetitle>How to get and build the Firebird
            manual module</citetitle>.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>0.2</revnumber>

          <date>31 Jan 2004</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>Entered sources in CVS.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.0</revnumber>

          <date>8 Mar 2004</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>First official release on Firebird website.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.1</revnumber>

          <date>26 Feb 2005</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para><emphasis>The following changes have accumulated between March 2004 and Feb.
            2005:</emphasis></para>

            <para>Added note on error messages during PDF build.</para>

            <para>Added info on building subsets and non-English sets.</para>

            <para>Added note on need to post-process PDF builds.</para>

            <para>Changed title to <citetitle>Getting and building the Firebird manual
            module</citetitle>.</para>

            <para>Numerous minor improvements.</para>

            <para>Added document history and revision number.</para>

            <para>Licensed this work under the Public Documentation License.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.1.1</revnumber>

          <date>8 April 2005</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>Added some titleabbrevs for presentational purposes. Contents as such
            unchanged.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.2</revnumber>

          <date>9 Feb 2006</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>Removed <quote>Firebird</quote> from title of 2nd section.</para>

            <para>Added information on where to get the build libraries, since we don't commit those
            to CVS anymore.</para>

            <para>Created subsections for build parameters; added information on building other base
            sets and setting parameters in <filename>build.xml</filename>.</para>

            <para>Changed docwritehowto <sgmltag class="element">link</sgmltag> to <sgmltag
            class="element">ulink</sgmltag>, as the articles will be in separate PDFs from now
            on.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.2.1</revnumber>

          <date>15 May 2006</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>Replaced <systemitem class="systemname">cvs.sf.net</systemitem> (3x) and
            <systemitem class="systemname">cvs.sourceforge.net</systemitem> (6x) with <systemitem
            class="systemname">firebird.cvs.sourceforge.net</systemitem> to reflect new situation at
            SF. Also added <quote>on one line</quote> above two examples that are now line-wrapped
            in the PDF.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.3</revnumber>

          <date>17 Jul 2006</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>Changed all <sgmltag class="element">sect<replaceable>N</replaceable></sgmltag>
            elements to <sgmltag class="element">section</sgmltag>.</para>

            <para>Shortened ID of Introduction and assigned IDs to its child sections.</para>

            <para>Spelling matters: RDMS -&gt; RDBMS, parallell -&gt; parallel, OS'es -&gt; OSes,
            CD's -&gt; CDs, wil -&gt; will, envvar -&gt; envar, linewrapped -&gt;
            line-wrapped.</para>

            <para>In section <citetitle>SSH checkout using command line CVS</citetitle>, 3rd
            listitem: converted <sgmltag class="starttag">quote</sgmltag> around
            <quote>username</quote> to <sgmltag class="starttag">replaceable</sgmltag>, changed
            <quote>SF username</quote> to <quote>SF user name</quote>, and also wrapped
            <quote>username</quote> in the command example in a <sgmltag
            class="starttag">replaceable</sgmltag>.</para>

            <para>In section <citetitle>SSH checkout using other clients</citetitle>, item cvsroot:
            wrapped <quote>username</quote> in a <sgmltag
            class="starttag">replaceable</sgmltag>.</para>

            <para>Gave the note in <citetitle>Building the HTML and PDF docs</citetitle> a title,
            and added a sentence to the second listitem.</para>

            <para>Corrected rev. 1.1.1 date in document history: 2004 -&gt; 2005.</para>

            <para>Added large section on improving the PDF.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.4</revnumber>

          <date>3 Aug 2006</date>

          <authorinitials>ND</authorinitials>

          <revdescription>
            <para>Added warnings about firewalls and port 2401 plus how to cope when SourceForge
            changes your password.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.4.1</revnumber>

          <date>23 Aug 2006</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>Added warning against checking out over a pre-existing local copy.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.5</revnumber>

          <date>5 May 2007</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para><citetitle>Apart from the manual module, is there any other Firebird
            documentation?</citetitle> – Changed 2nd paragraph and list with links.</para>

            <para><citetitle>Do I really have to build the docs myself?</citetitle> – Changed 1st
            paragraph and removed all the links that followed.</para>

            <para><citetitle>Where to get the tools</citetitle> – Changed text throughout this
            section because we now download stuff to <filename
            class="directory">manual/lib</filename> and <filename
            class="directory">manual/tools</filename>.</para>

            <para><citetitle>How to set up the environment for the build</citetitle> – Change of
            wording in 2nd list item.</para>

            <para><citetitle>Building the HTML and PDF docs</citetitle> – In the note at the end:
            changed text and added link in the 2nd list item.</para>

            <para><citetitle>Building subsets with -Drootid</citetitle> – Changed the paragraph that
            starts with <quote>How do you know the ID?</quote></para>

            <para><citetitle>Building a different base set with -Dbasename</citetitle> – Mentioned
            addition of <literal>papers</literal> set.</para>

            <para><citetitle>Advanced topic: Improving the PDF</citetitle> – Updated introductory
            paragraphs, including defects listing.</para>

            <para><citetitle>General repair scheme</citetitle> – Updated last list item in the Notes
            box.</para>

            <para><citetitle>Widowed headers</citetitle> – Heavily edited and id added; also moved
            part of content into new subsection <citetitle>When there is no DocBook
            ID</citetitle>.</para>

            <para><citetitle>Spaces in filenames, URLs etc</citetitle>. – Deleted.</para>

            <para><citetitle>Split table rows</citetitle> – Altered title, added id, altered Problem
            and Cause paragraphs.</para>

            <para><citetitle>Overly wide horizontal spaces</citetitle> – Added id.</para>

            <para><citetitle>Inserting zero-width spaces</citetitle> – Added id, slightly reworded
            the first two list items and removed the third.</para>

            <para><citetitle>Squeezed, truncated or otherwise messed-up page-sized
            content</citetitle> – Added.</para>

            <para><citetitle>XSL-FO references</citetitle> – Changed FOP version number in last
            paragraph.</para>

            <para><citetitle>License notice</citetitle> – (C) 2003–2006 -&gt; 2003–2007.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.6</revnumber>

          <date>24 Oct 2009</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para><citetitle>Checking out the manual module</citetitle> – Added warning against
            placing the local copy in a path with spaces or other <quote>URL-unsafe</quote>
            characters. Placed warnings in itemized list, gave warning element an explicit title,
            and changed the paragraph above.</para>

            <para><citetitle>Building the HTML and PDF docs</citetitle> – Added warning against path
            names that may change by URL-encoding, and provided a workaround. Gave ids to the five
            subsections.</para>

            <para><citetitle>Building subsets with -D[root]id</citetitle>, <citetitle>Building a
            different base set with -Dbase[name]</citetitle>, <citetitle>Setting default values in
            build.xml</citetitle> and <citetitle>How the PDF is built</citetitle> – Replaced
            <literal>-Drootid</literal> with <literal>-Did</literal> and
            <literal>-Dbasename</literal> with <literal>-Dbase</literal> throughout these
            sections.</para>

            <para><citetitle>Building subsets with -Did</citetitle> – Changed first
            paragraph.</para>

            <para><citetitle>Building a different base set with -Dbase</citetitle> – Changed
            paragraph starting with <quote>Meanwhile...</quote>.</para>

            <para><citetitle>If things go wrong</citetitle> – Inserted a paragraph on the problem
            with URL-unsafe characters in the path name.</para>

            <para><citetitle>When there is no DocBook ID</citetitle> – Gave this subsection an
            id.</para>

            <para><citetitle>Inserting zero-width spaces</citetitle> – Changed wording of second
            list item.</para>

            <para><citetitle>License notice</citetitle> – (C) 2003–2007 -&gt; 2003–2009.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.6.1</revnumber>

          <date>26 Oct 2009</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para><citetitle>Building the HTML and PDF docs</citetitle> – Fixed the IDs of this
            section and five of its subsections, which contained the word
            <quote><literal>buidling</literal></quote> instead of
            <quote><literal>building</literal></quote>:<itemizedlist spacing="compact">
                <listitem>
                  <para><literal>docbuildhowto-buidling-output-docs</literal></para>
                </listitem>

                <listitem>
                  <para><literal>docbuildhowto-buidling-non-english</literal></para>
                </listitem>

                <listitem>
                  <para><literal>docbuildhowto-buidling-subsets</literal></para>
                </listitem>

                <listitem>
                  <para><literal>docbuildhowto-buidling-other-basesets</literal></para>
                </listitem>

                <listitem>
                  <para><literal>docbuildhowto-buidling-defaults</literal></para>
                </listitem>

                <listitem>
                  <para><literal>docbuildhowto-buidling-conclusion</literal></para>
                </listitem>
              </itemizedlist></para>

            <para><citetitle>If things go wrong</citetitle> – Fixed link to <citetitle>Building the
            HTML and PDF docs</citetitle>: <literal>buidling</literal> -&gt;
            <literal>building</literal>. In the same sentence, the words <quote>at the end
            of</quote> have been changed to <quote>in</quote>, because the link target is not at the
            end of the section (it's just before the first subsection).</para>

            <para><citetitle>When there is no DocBook ID</citetitle> – Removed ID attribute from
            title element, because it was a) unnecessary, and b) a duplicate of the section ID and
            therefore illegal.</para>
          </revdescription>
        </revision>
      </revhistory></para>
  </appendix>

  <appendix id="docbuildhowto-license">
    <title>License notice</title>

    <para>The contents of this Documentation are subject to the Public Documentation License Version
    1.0 (the <quote>License</quote>); you may only use this Documentation if you comply with the
    terms of this License. Copies of the License are available at <ulink
    url="http://www.firebirdsql.org/pdfmanual/pdl.pdf">http://www.firebirdsql.org/pdfmanual/pdl.pdf</ulink>
    (PDF) and <ulink
    url="http://www.firebirdsql.org/manual/pdl.html">http://www.firebirdsql.org/manual/pdl.html</ulink>
    (HTML).</para>

    <para>The Original Documentation is titled <citetitle>Getting and building the Firebird manual
    module</citetitle>.</para>

    <para>The Initial Writer of the Original Documentation is: Paul Vinkenoog.</para>

    <para>Copyright (C) 2003–2009. All Rights Reserved. Initial Writer contact: paulvink at users
    dot sourceforge dot net.</para>

    <para>Contributor: Norman Dunbar – see <link linkend="docbuildhowto-dochist">document
    history</link>.</para>

    <para>Portions created by Norman Dunbar are Copyright (C) 2006. All Rights Reserved. Contributor
    contact: normandunbar at users dot sourceforge dot net.</para>
  </appendix>
</article>