<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../tools/docbook-dtd/docbookx.dtd">
<article id="fontembed">
  <articleinfo>
    <title>Using non-Western fonts in your Firebird docs</title>

    <titleabbrev>Using non-Western fonts</titleabbrev>

    <subtitle>A font embedding guide for Firebird docwriters and
    translators</subtitle>

    <author>
      <firstname>Paul</firstname>

      <surname>Vinkenoog</surname>
    </author>

    <edition>18 April 2007 – Document version 1.0</edition>
  </articleinfo>

  <section id="fontembed-intro">
    <title>Introduction</title>

    <para>If you use non-Western characters in your Firebird documentation,
    the HTML version will probably look fine – modern browsers can display any
    language and script, as long as the necessary fonts are present on the
    user's machine. But making the PDF version come out right requires a
    number of extra steps. This is what you have to do:</para>

    <procedure>
      <step>
        <para>Find the fonts you need for body text, titles, and monospaced
        text.</para>
      </step>

      <step>
        <para>Override the default (Western) fonts specified in the
        stylesheets.</para>
      </step>

      <step>
        <para>Create <firstterm>metrics files</firstterm> for the fonts you're
        going to use.</para>
      </step>

      <step>
        <para>Create a <firstterm>FOP userconfig file</firstterm> with font
        embedding instructions.</para>
      </step>

      <step>
        <para>Build the PDF and if everything works as intended, commit the
        results of steps 2–4 to CVS.</para>
      </step>
    </procedure>

    <para>If you are the first person in the Firebird manual project to write
    in a certain language, you'll have to complete all of the above steps.
    Otherwise you can use the existing setup, but you may have to edit the FOP
    userconfig file because font file locations can differ from system to
    system. See the <link
    linkend="fontembed-edit-embedfile"><quote>Important</quote> box</link> in
    the section on Step 4.</para>

    <para>It is assumed that you already know how to create and edit DocBook
    XML files in your own language and save them in a Unicode encoding, e.g.
    in UTF-8. XMLMind, SciTE, Windows Notepad and others have no problem with
    this (XMLMind saves in UTF-8 by default). ConText can only save Unicode as
    UTF-16, but as far as I know this poses no problem for the build
    tools.</para>
  </section>

  <section id="fontembed-pdf-creation">
    <title>How the PDF is created</title>

    <para>To better understand the effects of the steps you're going to take,
    here's a brief overview of how your DocBook source is converted to a PDF
    file.</para>

    <variablelist>
      <varlistentry>
        <term>First stage: DocBook <literal>-&gt;</literal> XSL-FO</term>

        <listitem>
          <para>A so-called <firstterm>XSL transformer</firstterm> by the name
          of Saxon reads the DocBook XML source, converts it to
          <firstterm>XSL-FO</firstterm> format, and saves it in the <filename
          class="directory">manual/inter/fo</filename> tree. The FO in XSL-FO
          stands for <firstterm>Formatting Objects</firstterm>. Like DocBook,
          this is an XML format, but presentation-oriented. Below is a typical
          chunk of XSL-FO:</para>

          <programlisting>&lt;fo:block keep-together="always" margin-left="0pc"
          font-family="sans-serif,Symbol,ZapfDingbats"&gt;
  &lt;fo:block font-family="sans-serif" font-weight="bold" 
            keep-with-next.within-column="always"
            space-before.minimum="0.8em" space-before.optimum="1.0em"
            space-before.maximum="1.2em" 
            color="darkblue" text-align="start"&gt;
    &lt;fo:block font-size="19.8pt"&gt;SQL Syntax&lt;/fo:block&gt;
  &lt;/fo:block&gt;
&lt;/fo:block&gt;</programlisting>

          <para>The Saxon tool is located in
          <filename>manual/lib/saxon.jar</filename>. To learn
          <emphasis>how</emphasis> we want each piece of DocBook converted to
          XSL-FO, Saxon also loads the transformation stylesheets. The default
          DocBook stylesheets are in <filename
          class="directory">manual/src/docs/docbook</filename>, and our own
          customisations in <filename
          class="directory">manual/src/docs/xsl</filename>.</para>

          <para>This first stage, the DocBook <literal>-&gt;</literal> XSL-FO
          transformation, is executed by the <literal>fo</literal> build
          target. If you give a <quote><command>build pdf...</command></quote>
          command, the <literal>fo</literal> target is called internally, but
          you can also call it explicitly to generate only the XSL-FO file and
          not the PDF.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Second stage: XSL-FO <literal>-&gt;</literal> PDF</term>

        <listitem>
          <para>The XSL-FO file is converted to PDF by another tool, Apache
          FOP (<firstterm>Formatting Objects Processor</firstterm>). The
          result is stored in the <filename
          class="directory">manual/dist/pdf</filename> tree. Stylesheets don't
          enter into this, nor does the original DocBook source. Apache FOP
          lives in <filename>manual/lib/fop.jar</filename>.</para>

          <para>This stage is represented by the <literal>fo2pdf</literal>
          build target. It too is called internally by the
          <literal>pdf</literal> target, but you can also call it yourself,
          for instance if you have manually edited the <filename
          class="extension">.fo</filename> file (which is sometimes necessary,
          alas).</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>The sections to come will guide you through the steps listed in the
    Introduction. This table shows where each of them affects the
    DocBook-to-PDF build process:</para>

    <blockquote>
      <informaltable>
        <tgroup cols="3">
          <colspec colname="colstepnum" colwidth="*" />

          <colspec colname="colstepdesc" colwidth="4*" />

          <colspec colname="colstepaffects" colwidth="4*" />

          <thead>
            <row>
              <entry align="center">Step</entry>

              <entry align="center">Description</entry>

              <entry align="center">Affects</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry align="center">1</entry>

              <entry>Finding the fonts you need</entry>

              <entry>(preparatory step)</entry>
            </row>

            <row>
              <entry align="center">2</entry>

              <entry>Overriding the stylesheet fonts</entry>

              <entry>Stage 1: XSL-FO generation</entry>
            </row>

            <row>
              <entry align="center">3</entry>

              <entry>Creation of metrics files</entry>

              <entry>Stage 2: PDF production</entry>
            </row>

            <row>
              <entry align="center">4</entry>

              <entry>Creation of FOP userconfig file</entry>

              <entry>Stage 2: PDF production</entry>
            </row>

            <row>
              <entry align="center">5</entry>

              <entry>PDF building and committing</entry>

              <entry>(final step – the build itself)</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </blockquote>
  </section>

  <section id="fontembed-find-fonts">
    <title>Step 1: Find the fonts you need</title>

    <titleabbrev>1: Find the fonts you need</titleabbrev>

    <para>The DocBook stylesheets distinguish six font
    <quote>families</quote>: for body, title, monospaced, symbol, dingbat and
    <quote>sans</quote> (= sans-serif) text. They are defined as
    follows:</para>

    <blockquote>
      <programlisting>body.font.family      = serif
title.font.family     = sans-serif
monospace.font.family = monospace
symbol.font.family    = Symbol,ZapfDingbats
dingbat.font.family   = serif
sans.font.family      = sans-serif</programlisting>
    </blockquote>

    <para>The sans.font.family isn't used in practice; it is only listed for
    completeness. The symbol and dingbat families should probably not be
    changed. That leaves you with the body, title and monospace families to
    find suitable fonts for.</para>

    <para>For English and other Western languages, <quote>serif</quote>
    translates to Times New Roman in the PDF, <quote>sans-serif</quote> to
    Helvetica/Arial, and <quote>monospace</quote> to Courier. These fonts, as
    well as the Symbol font, are supported by all Adobe PDF readers. That's
    why Western docwriters don't have to take any special measures to get
    their language represented correctly. But most non-Western characters
    aren't present in the Adobe standard fonts. If you don't supply the fonts
    yourself, the tools will build the PDF without complaints, but every
    character not present in the standard font will be replaced with a
    <quote><literal>#</literal></quote>, making your text look like this: ####
    ## #### #### ##### ## ## #####.</para>

    <para>It is advised that you choose fonts that are widely present on
    computer systems in your country. Metrics and configuration files are
    committed to CVS and can be reused by every doc builder, but the font
    files themselves are not. They must be present – and locatable – on the
    user's system every time a PDF is built. (Note: only when it's
    <emphasis>built</emphasis>, not when it's
    <emphasis>read</emphasis>!)</para>

    <para>If your language or script doesn't make a distinction between serif
    and sans-serif fonts, feel free to pick the same font for the body and
    title families – or use another distinction which is appropriate in your
    language. But do try to use another font for the monospace family, even if
    the difference between proportional (variable-width) and monospaced
    (fixed-width) fonts is meaningless in your situation. The point is that
    monospaced text is often used within sentences, to make certain words
    stand out from the rest.</para>

    <para>Every font chosen should support these styles and weights: normal,
    italic, bold, and bold italic. (Again, in as far as these are valid
    concepts in your language.) Sometimes these variations are housed in one
    single font file, sometimes they are distributed over up to four files.
    Only Type 1 and TrueType fonts can be used.</para>

    <para>Because of the tremendous differences between the world's many
    languages and scripts, it's impossible to give any more specific
    instructions here. But feel free to discuss any problems or questions
    regarding this on the firebird-docs list.</para>

    <para>Once you've decided on the fonts to use, make a note of the file
    locations. TrueType font files typically have the extension <filename
    class="extension">.ttf</filename>, TrueType collections <filename
    class="extension">.ttc</filename>. Type 1 font files have extensions
    <filename class="extension">.pfb</filename> (the font itself) and
    <filename class="extension">.pfm</filename> (the metrics info). To embed
    Type 1 fonts, you need both the <filename
    class="extension">.pfb</filename> and the <filename
    class="extension">.pfm</filename>.</para>
  </section>

  <section id="fontembed-override-fonts">
    <title>Step 2: Override the stylesheet fonts</title>

    <titleabbrev>2: Override stylesheet fonts</titleabbrev>

    <para>Any font configuration stuff is placed in the folder <filename
    class="directory">manual/config/xx</filename>, where <literal>xx</literal>
    is your language code. If the folder doesn't exist yet, create it. Now
    edit the file <filename>fo-params.txt</filename> in this folder (if it
    doesn't exist, copy it from <filename
    class="directory">manual/config</filename>). Suppose you are working on a
    Japanese setup and you've chosen the following fonts: MSGothic for titles,
    MSMincho for normal body text, and WPJapanese to replace monospaced text.
    You would then edit the relevant portion of
    <filename>manual/config/ja/fo-params.txt</filename> as follows:</para>

    <blockquote>
      <programlisting>body.font.family=MSMincho
title.font.family=MSGothic
monospace.font.family=WPJapanese</programlisting>
    </blockquote>

    <para>Make sure you uncomment each altered line, if necessary.</para>

    <para>Now when the intermediate XSL-FO output is built for a Japanese
    document, it will contain references to these fonts instead of the default
    ones in the stylesheets. A piece of the <filename
    class="extension">.fo</filename> file may look like this:</para>

    <blockquote>
      <programlisting>&lt;fo:block keep-together="always" margin-left="0pc"
          font-family="MSMincho,Symbol,ZapfDingbats"&gt;
  &lt;fo:block font-family="MSMincho" font-weight="bold" 
            keep-with-next.within-column="always"
            space-before.minimum="0.8em" space-before.optimum="1.0em"
            space-before.maximum="1.2em" 
            color="darkblue" text-align="start"&gt;
    &lt;fo:block font-size="19.8pt"&gt;...Japanese text here...&lt;/fo:block&gt;
  &lt;/fo:block&gt;
&lt;/fo:block&gt;</programlisting>
    </blockquote>

    <para>The next two steps will deal with the following stage: the creation
    of the PDF itself.</para>
  </section>

  <section id="fontembed-metrics">
    <title>Step 3: Create metrics files</title>

    <titleabbrev>3: Create metrics files</titleabbrev>

    <para>For every non-standard font you use, a file with font metrics
    information must be generated. Apache FOP needs this information while
    performing the XSL-FO <literal>-&gt;</literal> PDF conversion. You can
    create the metrics files with the <literal>t1metrics</literal> and
    <literal>ttfmetrics</literal> targets in our build system. At the command
    prompt in <filename class="directory">manual/src/build</filename>, type
    (on one line!):</para>

    <blockquote>
      <programlisting>build ttfmetrics
  -Dff=<replaceable>D:\Path\To\fontfile</replaceable>.ttf -Dmf=<replaceable>filename</replaceable>.xml -Dsfx=<replaceable>xx</replaceable></programlisting>
    </blockquote>

    <para>to build a TTF metrics file, or</para>

    <blockquote>
      <programlisting>build t1metrics
  -Dff=<replaceable>D:\Path\To\fontfile</replaceable>.pfm -Dmf=<replaceable>filename</replaceable>.xml -Dsfx=<replaceable>xx</replaceable></programlisting>
    </blockquote>

    <para>for a Type 1 metrics file.</para>

    <para>Please note:</para>

    <itemizedlist>
      <listitem>
        <para>You must provide the full path to the font file, but only a file
        name for the metrics file. The metrics file will be placed in
        <filename
        class="directory">manual/config/<replaceable>xx</replaceable></filename>,
        with <literal><replaceable>xx</replaceable></literal> your language
        code.</para>
      </listitem>

      <listitem>
        <para>You are free in your choice of the metrics file's base name, but
        it's wise to make it indicative of the font.</para>
      </listitem>

      <listitem>
        <para>For the <literal>t1metrics</literal> target, you must specify
        the <filename class="extension">.pfm</filename> file, not the
        <filename class="extension">.pfb</filename>.</para>
      </listitem>

      <listitem>
        <para>The second character of <literal>t1metrics</literal> is the
        digit <literal>1</literal> (one), not the letter
        <literal>el</literal>.</para>
      </listitem>

      <listitem>
        <para>Combat RSI! You can save yourself no less than six keystrokes by
        omitting the <parameter>sfx</parameter> parameter and typing
        <literal>-Dmf=<replaceable>xx</replaceable>/<replaceable>filename</replaceable>.xml</literal>.
        (This is a relaxation of the first note.)</para>
      </listitem>
    </itemizedlist>

    <para>Remember that you must repeat this step for every font you add. If
    the bold and/or italic variations reside in different files, you must also
    create a separate metrics file for each variation.</para>

    <important>
      <para>Metrics files created with FOP 0.20.5 (which was part of our build
      tools until April 2007) are not usable with our current FOP version
      (0.93 or higher). If you have such files in your tree, regenerate them
      with the latest tool set. Notice however that performing a cvs update
      may already bring you the current metrics files.</para>
    </important>

    <section id="fontembed-metrics-ttc">
      <title>Font collections</title>

      <para>Some TrueType fonts are packed together in <filename
      class="extension">.ttc</filename> files (TrueType collections). The
      <literal>ttcmetrics</literal> target allows you to build metrics files
      for such fonts:</para>

      <blockquote>
        <programlisting>build ttcmetrics -Dcf=<replaceable>D:\Path\To\collection</replaceable>.ttc 
                   -Dfn=<replaceable>fontname</replaceable> -Dmf=<replaceable>filename</replaceable>.xml -Dsfx=<replaceable>xx</replaceable></programlisting>
      </blockquote>

      <para>The <parameter>ff</parameter> (font file) parameter has been
      replaced with <parameter>cf</parameter> (collection file), and there's
      an additional <parameter>fn</parameter> (font name) parameter. To find
      out which fonts are in a collection, call the
      <literal>ttcmetrics</literal> target with only the first parameter, like
      this:</para>

      <blockquote>
        <programlisting>build ttcmetrics -Dcf=<replaceable>D:\Path\To\collection</replaceable>.ttc</programlisting>
      </blockquote>

      <para>This will result in an exception and a 20-line Java stack trace,
      but just before that you'll find a list of all the fonts contained in
      the collection.</para>
    </section>
  </section>

  <section id="fontembed-fop-userconfig">
    <title>Step 4: Create a FOP userconfig file</title>

    <titleabbrev>4: Create FOP userconfig file</titleabbrev>

    <para>This is the most complicated step. You have to edit the
    <filename>fop-userconfig.xml</filename> file to tell FOP:</para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>which fonts (and variations) are to be included;</para>
      </listitem>

      <listitem>
        <para>where the font files can be found;</para>
      </listitem>

      <listitem>
        <para>where the metrics files can be found.</para>
      </listitem>
    </itemizedlist>

    <para>OK, let's go for it:</para>

    <procedure>
      <step>
        <para>If necessary, copy <filename>fop-userconfig.xml</filename> from
        the general <filename class="directory">manual/config</filename> dir
        into your language subdirectory (e.g. <filename
        class="directory">manual/config/ja</filename>).</para>
      </step>

      <step>
        <para>Open the file in a text or XML editor and find the
        <literal>font-base</literal> entry. Replace
        <quote><literal>xx</literal></quote> in the value with your language
        code, so that the URL points to the correct config subdirectory.
        Uncomment the entry!</para>
      </step>

      <step>
        <para>Now go on to the <sgmltag
        class="element">&lt;fonts&gt;</sgmltag> element. You will find some
        commented-out example fonts already present.</para>
      </step>

      <step>
        <para>Insert a <sgmltag class="element">&lt;font&gt;</sgmltag> element
        for the first font to add:</para>

        <programlisting>&lt;font metrics-url="msmincho.xml" kerning="yes"
      embed-url="file:///D:/WINNT/Fonts/MSMincho.ttf"&gt;
  &lt;font-triplet name="MSMincho" style="normal" weight="normal"/&gt;
&lt;/font&gt;</programlisting>

        <para>Notes:</para>

        <itemizedlist>
          <listitem>
            <para><literal>metrics-url</literal> refers to the font metrics
            file you've created before, and which is in the same folder as
            <filename>fop-userconfig.xml</filename>.</para>
          </listitem>

          <listitem>
            <para><literal>embed-url</literal> must be a URL pointing to the
            font file itself. Attention! For Type 1 fonts, you must specify
            the <filename class="extension">.pfb</filename> file here, not the
            <filename class="extension">.pfm</filename> like you did when
            creating the metrics file.</para>

            <important id="fontembed-edit-embedfile">
              <para>Even if the entire setup already exists, it may be
              necessary to edit the <literal>embed-url</literal>, as it is
              possible that you have the font in another location than the
              person who committed the setup to CVS. Other than that, no
              configuration changes should be necessary.</para>
            </important>
          </listitem>

          <listitem>
            <para>The <literal>font-triplet name</literal> must be the same as
            the name you used in <filename>fo-params.txt</filename> to
            override the default font.</para>

            <!--The <font-name> near the beginning of the metrics file may be different.
It is by this name that the font is included in the PDF.-->
          </listitem>
        </itemizedlist>
      </step>

      <step>
        <para>Now you have to add information for the bold, italic, and
        bold-italic variations of the font. Often these come from different
        font files and you will have generated separate metrics files for
        them. If that is indeed the case, each variation gets its own <sgmltag
        class="element">&lt;font&gt;</sgmltag> entry, e.g. for
        bold-italic:</para>

        <programlisting>&lt;font metrics-url="msmincho-bi.xml" kerning="yes"
      embed-url="file:///D:/WINNT/Fonts/MSMinchoBI.ttf"&gt;
  &lt;font-triplet name="MSMincho" style="italic" weight="bold"/&gt;
&lt;/font&gt;</programlisting>

        <para>Note that the <literal>font-triplet name</literal> must be the
        same for each variation: the name you used in
        <filename>fo-params.txt</filename>.</para>

        <para>Sometimes there are no bold or italic variations of a font. In
        that case you must <quote>fake it</quote>, because the intermediate
        <filename class="extension">.fo</filename> file does specify these
        variations in places, and if they don't seem to exist you'll get the
        dreaded ### #### ## in the PDF again. For every non-existing
        variation, add a <sgmltag
        class="element">&lt;font-triplet&gt;</sgmltag> element to the
        variation that should be used instead:</para>

        <programlisting>&lt;font metrics-url="msmincho.xml" kerning="yes"
      embed-url="file:///D:/WINNT/Fonts/MSMincho.ttf"&gt;
  &lt;font-triplet name="MSMincho" style="normal" weight="normal"/&gt;
  &lt;font-triplet name="MSMincho" style="italic" weight="normal"/&gt;
&lt;/font&gt;</programlisting>

        <para>If neither bold nor italic exist, you'll end up with four
        <sgmltag class="element">&lt;font-triplet&gt;</sgmltag> children in
        the <sgmltag class="element">&lt;font&gt;</sgmltag> element.</para>
      </step>

      <step>
        <para>Repeat items 4 and 5 for every font family you've added to
        <filename>fo-params.txt</filename>.</para>
      </step>
    </procedure>

    <para>If everything has gone right, you should now be able to generate
    PDFs in your language.</para>

    <important>
      <para>The FOP 0.20.5 userconfig files (which we used until April 2007)
      don't have the right format for our current FOP version (0.93 or
      higher). If FOP complains about this, do a cvs update. If the format
      still isn't right, look in
      <filename>manual/config/fop-userconfig.xml</filename> and give your
      localised userconfig file the same structure.</para>
    </important>
  </section>

  <section id="fontembed-build-pdf">
    <title>Step 5: Build the PDF and commit your work</title>

    <titleabbrev>5: Build PDF and commit</titleabbrev>

    <para>To put your configuration to the test, build a PDF in your language,
    e.g.:</para>

    <blockquote>
      <programlisting>build pdf -Drootid=qsg15-ru -Dsfx=ru</programlisting>
    </blockquote>

    <para>Inspect the result carefully. If you find any <quote>### ####
    ##</quote> spots in the document, the location may give you a clue as to
    what went wrong:</para>

    <itemizedlist>
      <listitem>
        <para>If they are in the titles, you probably forgot to override the
        <parameter>title.font.family</parameter> in
        <filename>fo-params.txt</filename> and/or to add the bold or
        bold-italic variations in
        <filename>fop-userconfig.xml</filename>.</para>
      </listitem>

      <listitem>
        <para>If they occur in some places in the body text, you may have
        forgotten to replace the
        <parameter>monospace.font.family</parameter>.</para>
      </listitem>

      <listitem>
        <para>If the document mostly consists of
        <quote><literal>#</literal></quote>s but the titles are OK, chances
        are that you didn't supply a <parameter>body.font.family</parameter>
        (this should make you feel <emphasis>really</emphasis> silly!)</para>
      </listitem>

      <listitem>
        <para>If the pound signs are in isolated places, maybe you have to
        override the Symbol and/or Dingbat families after all.</para>
      </listitem>
    </itemizedlist>

    <para>Comparing your PDF to the English original may also help to find the
    cause of the problem. And of course, there's always the
    <literal>firebird-docs</literal> list.</para>

    <para>Once everything works fine, add and commit the following to
    CVS:</para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>The <filename class="directory">manual/config/xx</filename>
        language subdirectory (if it's not in CVS yet).</para>
      </listitem>

      <listitem>
        <para>The <filename class="extension">fo-params.txt</filename> file in
        that subdirectory.</para>
      </listitem>

      <listitem>
        <para>Any <filename class="extension">.xml</filename> metrics files in
        that subdirectory.</para>
      </listitem>

      <listitem>
        <para>The <filename>fop-userconfig.xml</filename> file in that
        subdirectory.</para>
      </listitem>
    </itemizedlist>

    <para>If you don't have CVS write access, ask a subproject member to
    commit your work for you.</para>
  </section>

  <section id="fontembed-afterword">
    <title>Afterword</title>

    <para>We are still relatively new to translating Firebird docs to
    non-Western scripts, and I suppose we'll have to learn a lot from
    experience. Please post any error reports, comments and suggestions to the
    <literal>firebird-docs</literal> list. Good luck with your docwriting and
    translation efforts – it's great being on this subproject!</para>
  </section>

  <appendix id="fontembed-dochist">
    <title>Document history</title>

    <para>The exact file history is recorded in the <filename
    class="directory">manual</filename> module in our CVS tree; see <ulink
    url="http://sourceforge.net/cvs/?group_id=9028">http://sourceforge.net/cvs/?group_id=9028</ulink></para>

    <para><revhistory>
        <revision>
          <revnumber>0.1</revnumber>

          <date>22 Dec 2005</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>First edition.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>0.1.1</revnumber>

          <date>23 Dec 2005</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>Small correction in Step 3 section.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>0.1.2</revnumber>

          <date>24 Dec 2005</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para>Removed incorrect font name requirement; added notice about
            editing embed-file URL.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>0.1.3</revnumber>

          <date>25 Jan 2007</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para><citetitle>How the PDF is created</citetitle>: Removed a few
            words from the last sentence, just above the steps table.</para>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.0</revnumber>

          <date>18 Apr 2007</date>

          <authorinitials>PV</authorinitials>

          <revdescription>
            <para><citetitle>Create metrics files</citetitle> and
            <citetitle>Create a FOP userconfig file</citetitle>: Brought up to
            date with FOP 0.93.</para>

            <para><citetitle>Afterword</citetitle>: Changed wording. We're not
            complete newbies anymore :-)</para>
          </revdescription>
        </revision>
      </revhistory></para>
  </appendix>

  <appendix id="fontembed-license">
    <title>License notice</title>

    <para>The contents of this Documentation are subject to the Public
    Documentation License Version 1.0 (the <quote>License</quote>); you may
    only use this Documentation if you comply with the terms of this License.
    Copies of the License are available at <ulink
    url="http://www.firebirdsql.org/pdfmanual/pdl.pdf">http://www.firebirdsql.org/pdfmanual/pdl.pdf</ulink>
    (PDF) and <ulink
    url="http://www.firebirdsql.org/manual/pdl.html">http://www.firebirdsql.org/manual/pdl.html</ulink>
    (HTML).</para>

    <para>The Original Documentation is titled <citetitle>Using non-Western
    fonts in your Firebird docs</citetitle>.</para>

    <para>The Initial Writer of the Original Documentation is: Paul
    Vinkenoog.</para>

    <para>Copyright (C) 2005–2007. All Rights Reserved. Initial Writer
    contact: paulvink at users dot sourceforge dot net.</para>
  </appendix>
</article>