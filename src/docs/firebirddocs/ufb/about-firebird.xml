<?xml version="1.0" encoding="UTF-8"?>
<!-- For standalone validation, uncomment the following DOCTYPE declaration. -->
<!-- DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"> "file:../docs/docbookx/docbookx.dtd" -->
<!-- book id="usingfirebird" -->
<chapter id="ufb-about">
  <title>About Firebird</title>

  <!--TODO: Update the whole shebang to Firebird 2-->

  <para>Firebird is a powerful, compact client/server SQL relational database
  management system which can run on a variety of server and client operating
  system platforms including Windows, Linux and several other UNIX platforms,
  FreeBSD and Apple Macintosh OS/X.</para>

  <para>It features a higher level of compliance with SQL standards than any
  other industrial-strength client/server RDBMS on the market today, while
  implementing some powerful language features in the vendor-specific sphere
  of procedure programming.</para>

  <section id="ufb-about-history">
    <title>Firebird's history</title>

    <para>Developed as an ongoing open source project, Firebird is the first
    new-generation descendant of Borland's InterBase 6.0 Open Edition code
    which was released for open source development in July, 2000, under the
    InterBase Public License (IPL).</para>

    <para>The Firebird source code tree is maintained on the international
    open source code foundry, Sourceforge, by a large team of professional
    developers who donate time and expertise voluntarily to fix, develop and
    enhance this popular and feature-rich database management software.</para>

    <para>The Firebird software products are distributed completely free of
    registration or deployment fees.</para>
  </section>

  <section id="ufb-about-features">
    <title>Overview of Features</title>

    <para>Firebird is a true client/server software, architected for use in
    local and wide-area networks. Accordingly, its core consists of two main
    software programs: the database server, which runs on a network host
    computer, and the client library, through which users on remote
    workstations connect to and communicate with databases managed by the
    server.</para>

    <para>TCP/IP is the network protocol of choice for Firebird on all
    platforms, although Windows Networking (NetBEUI) is supported for networks
    having Firebird running on a Windows NT, 2000 or XP host server.</para>

    <para>It is possible to run both server and client on the same physical
    machine and have the single client connect to the server through TCP/IP
    local loopback. On Windows machines, a local client can also connect to a
    database by sharing inter-process communications memory with the Firebird
    server.</para>

    <section id="ufb-about-features-server">
      <title>Firebird Server</title>

      <!--Lot of duplication with table further below. Make this more general and refer to table for exact figures.-->

      <para>Firebird makes efficient use of its host computer's resources. The
      server process uses approximately 2 MB of memory. Each client connection
      is likely to add approximately 115 KB to server memory consumption, more
      or less, according to the structure of the database and the client
      characteristics.</para>

      <para>Disk space for a minimal Firebird installation ranges from 9–12
      MB, depending on the platform. Additional disk space is required for
      temporary storage during operation and additional memory is needed for
      database page caching. Both are configurable according to performance
      demands and the likely volume and type of data to be handled.</para>

      <para>Firebird server runs on a number of platforms, including</para>

      <itemizedlist>
        <listitem>
          <para>Microsoft Windows NT 4.0 and Windows 2000 (Server or
          Workstation editions)</para>
        </listitem>

        <listitem>
          <para>Windows 95/98 and ME</para>
        </listitem>

        <listitem>
          <para>Windows XP (Home, Professional and .NET editions)</para>
        </listitem>

        <listitem>
          <para>Linux, FreeBSD and several UNIX operating systems</para>
        </listitem>

        <listitem>
          <para>MacOS X (Darwin)</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="ufb-about-features-clients">
      <title>Firebird clients</title>

      <para>A remote workstation or a local client requires only the shared
      <emphasis>gds</emphasis> library – a dynamic link library on Windows and
      a shared object on other platforms – and an application program which
      can pass and receive parameters to and from the library's interface. The
      size of the <emphasis>gds</emphasis> library is approximately 350
      Kb.</para>

      <para>Generally, you would install a copy of the client library on the
      host server, for use with several of the Firebird command-line utilities
      and/or any server-based management programs you might use. Many of these
      utilities can be run remotely, however. A remote system administrator
      can manage some of the essential services provided by these utilities by
      accessing them through a host service controller process.</para>

      <para>For Java connectivity, Firebird provides the JDBC/JCA-compliant
      Jaybird driver. Client applications written against Jaybird can run on
      any Java-enabled platform, including platforms that are not supported
      for the Firebird <emphasis>server</emphasis>. The lecagy InterClient
      Java driver is no longer supported, due to its severe
      limitations.</para>
    </section>

    <section id="ufb-about-features-summary">
      <title>Summary of features</title>

      <table frame="all">
        <title>Summary of features</title>

        <tgroup cols="2">
          <colspec colname="colFeature" colwidth="1*" />

          <colspec colname="colDescription" colwidth="4*" />

          <thead>
            <row>
              <entry><para>Firebird Feature</para></entry>

              <entry><para>Description</para></entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry><para>SQL compliance</para></entry>

              <entry><para>Firebird conforms to entry-level SQL-92
              requirements. It has support for formal, cascading referential
              integrity constraints, updatable views, and full, left and right
              outer joins. Client applications can link to the Firebird API, a
              messenger function library for client-server
              communication.</para><para>The Firebird server supports
              development of dynamic SQL client applications. It also ships
              with a host-language precompiler and in-engine language support
              for embedded SQL development in host languages such as C/C++ and
              COBOL.</para><para>Several extended SQL features are also
              implemented. Some of them (e.g. stored procedures and triggers,
              SQL roles, and segmented blob support) anticipate SQL99
              extensions.</para></entry>
            </row>

            <row>
              <entry><para>Multiuser database access</para></entry>

              <entry><para>Firebird is designed to provide for many clients
              accessing a single database at the same time. Client
              applications can also have connections to several databases
              simultaneously. Firebird will automatically protect
              cross-database transactions through a two-phase commit
              mechanism. Triggers and stored procedures can post
              <firstterm>event messages</firstterm> to inform interested
              clients of specific events in the database.</para></entry>
            </row>

            <row>
              <entry><para>User-defined functions</para></entry>

              <entry><para>User-defined functions (UDFs) can be written and
              stored on the server machine in external shared object
              libraries. Once it is declared to a Firebird database as an
              external function, a UDF is available to any client application
              accessing the database, as if it were a native function of the
              SQL language.</para><para>This flexibility accounts for the very
              small footprint of the server engine: Firebird database
              application solutions are deployed without the extra cargo of a
              server that supports hundreds of unused functions natively in
              its engine.</para></entry>
            </row>

            <row>
              <entry><para>Transactions</para></entry>

              <entry><para>Firebird client applications have full control over
              the starting, committing, and rolling back of transactions.
              Every transaction exists in its own consistent context
              determining isolation from other transactions and resolution of
              multi-user conflicts at commit time.</para><para>A transaction's
              uncommitted view of the state of the database is kept consistent
              with its initial view and any changes which are made within its
              own context.</para><para>Client applications can isolate
              multiple tasks in separate transactions simultaneously. A single
              transaction can bridge a task involving an unlimited number of
              connected databases, with an automatic two-phase commit
              mechanism to protect integrity, should a database become
              unavailable before the transaction completes.</para><para>For
              more detailed information, see <link
              linkend="ufb-transactions">Transactions in
              Firebird</link>.</para></entry>
            </row>

            <row>
              <entry><para>Multigenerational architecture</para></entry>

              <entry><para>Firebird uses a multi-generational architecture, by
              which multiple versions of each data row are created and stored
              as it accessed by a transaction. In a background thread, extinct
              versions are garbage-collected and the current and pending
              versions are managed, in order to give each transaction a
              persistent view and to resolve priorities when update conflicts
              occur.</para><para>The multi-generational architecture of
              Firebird means that readers never block writers. Firebird allows
              any row to be visible to any transaction, even if other
              transactions have updates pending for it.</para><para>The
              Firebird engine maintains version statistics which it uses, in
              conjunction with the isolation and lock response attributes of
              each transaction, to determine which transaction gets priority
              when conflicting updates are requested.</para></entry>
            </row>

            <row>
              <entry><para>Optimistic row-level locking</para></entry>

              <entry><para>In Firebird, user-initiated locking is unnecessary.
              The engine locks a row to other transactions only when a
              transaction signals that it is ready to update it. This is known
              as optimistic row-level locking. This style of locking has great
              advantages in increasing throughput and reducing serialization
              for client tasks, when compared with systems that lock the rows,
              or even the entire tables, from the moment the transaction
              begins.</para></entry>
            </row>

            <row>
              <entry><para>BLOB filters</para></entry>

              <entry><para>Firebird provides the capability for the developer
              to supply filter code for converting stored BLOBs from one
              format to another. For example, a BLOB filter could be written
              to output a text BLOB, stored in RichText format, as XML or
              HTML; or to output a stored JPEG image in PNG format. The
              filters, written in the developer's language of choice and
              compiled for the server platform OS, are stored on the server
              machine in a shared object library and declared to databases,
              exactly as UDF libraries are.</para></entry>
            </row>

            <row>
              <entry><para>Database administration</para></entry>

              <entry><para>Firebird comes with various command-line utilities
              for managing databases and servers. Thanks to its open source
              character, Firebird is also abundantly supported by open source,
              freeware and commercial GUI database administration utilities.
              Using his or her preferred constellation of tools, the database
              administrator can<itemizedlist>
                  <listitem>
                    <para>Manage server security</para>
                  </listitem>

                  <listitem>
                    <para>Make and restore database backups</para>
                  </listitem>

                  <listitem>
                    <para>Perform maintenance tasks</para>
                  </listitem>

                  <listitem>
                    <para>Produce database and lock manager statistics</para>
                  </listitem>
                </itemizedlist></para></entry>
            </row>

            <row>
              <entry><para>Security</para></entry>

              <entry><para>Firebird maintains a security database (currently
              hard-coded as <systemitem>isc4.gdb)</systemitem> storing user
              names and encrypted passwords. It is located in the root
              directory of the server installation and controls access to the
              server itself and all databases in its physical domain. The
              SYSDBA account has full, destructive privileges to all databases
              on the server.</para><para>Firebird provides the capability to
              define ROLEs at database level. Within a database, only SYSDBA
              and the database owner have full privileges; otherwise, all
              privileges must be granted explicitly to individual users and/or
              roles. It is possible – and recommended – to define a set of
              permissions for a role and then grant that role to specific
              users as required.</para><para>The SYSDBA can add and delete
              users' accounts names and modify the details of an account,
              including the password. Passwords, once stored, are not
              human-readable, even by the SYSDBA.</para></entry>
            </row>

            <row>
              <entry><para>Backups and restores</para></entry>

              <entry><para>The command-line tool <systemitem>gbak</systemitem>
              backs up a database by dismantling it into a compact structure
              in which metadata, data and current configuration settings are
              stored separately.</para><para>The gbak program also performs
              some important housekeeping tasks on the database itself during
              the backup process. The file generated is not readable as a
              database file.</para><para>The backup process doesn't need
              exclusive access to the database. Other clients can remain
              connected and perform operations on the database while the
              backup is in progress.</para><para>The same tool is used to
              restore a backup file into a database. Databases can be restored
              into a new file or can overwrite an existing database
              file.</para><para>Because of the useful tasks performed by
              <application>gbak</application>, experienced Firebird
              programmers often use a backup-restore cycle
              to:</para><itemizedlist>
                  <listitem>
                    <para>Erase obsolete record versions</para>
                  </listitem>

                  <listitem>
                    <para>Change the database page size</para>
                  </listitem>

                  <listitem>
                    <para>Convert the database from single- to
                    multi-file</para>
                  </listitem>

                  <listitem>
                    <para>Safely transfer a database to another operating
                    system</para>
                  </listitem>

                  <listitem>
                    <para>Upgrade InterBase or Firebird databases to a newer
                    version</para>
                  </listitem>

                  <listitem>
                    <para>Make a metadata-only backup, to create a new, empty
                    database with the same structure.</para>
                  </listitem>
                </itemizedlist><para>Several user-friendly GUI front-ends are
              available for gbak, both as stand-alone tools and as utilities
              within some of the database administration programs. It is also
              very simple to set up OS-level scripts, batch files or daemons
              to perform backups.</para><para>For more information on this
              subject, see <link linkend="ufb-gbak">Database Backup and
              Restore</link>.</para></entry>
            </row>

            <row>
              <entry><para>Other tools</para></entry>

              <entry><para>Firebird ships with several other command-line
              administration tools, including</para><itemizedlist>
                  <listitem>
                    <para>isql – an SQL query utility which can run dynamic
                    SQL (DSQL) and several specialized statements
                    interactively or in batch from a script. This is the tool
                    to use for quick access to information about your metadata
                    and for running data definition scripts – see <link
                    linkend="ufb-using-isql">chapter 10, Interactive SQL
                    Utility (isql)</link></para>
                  </listitem>

                  <listitem>
                    <para>gfix – a database housekeeping and repair kit for
                    minor corruptions. This tool is often used in combination
                    with some of the utilities in the gbak program for
                    identifying and recovering damaged data – see <link
                    linkend="ufb-gfix">chapter 24, Housekeeping &amp; Repair:
                    gfix</link>.</para>
                  </listitem>

                  <listitem>
                    <para>gsec – a command-line interface to the security
                    database, isc4.gdb – see <link
                    linkend="ufb-security">chapter 22, Managing
                    Security</link></para>
                  </listitem>

                  <listitem>
                    <para>gstat – a utility for printing out the current
                    configuration and statistics of a running database. See
                    <link linkend="ufb-statistics">chapter 22, Server and
                    Database Statistics</link>.</para>
                  </listitem>

                  <listitem>
                    <para>gds_lock_print or lockpr – a utility for printing
                    out the Lock Manager report on a running database. See
                    <link linkend="ufb-statistics">chapter 22, Server and
                    Database Statistics</link>.</para>
                  </listitem>
                </itemizedlist></entry>
            </row>

            <row>
              <entry><para>Other APIs</para></entry>

              <entry><para>Firebird provides two additional APIs to assist
              developers to produce applications for system administration and
              for installation and deployment.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
  </section>

  <section id="ufb-about-arch">
    <title>Comparing Superserver Architecture with Classic</title>

    <para>Firebird servers ship with two distinct architectures for managing
    multiple client connections. On Windows, Firebird uses a multi-client,
    multi-threaded implementation of the Firebird server process, known as
    "Superserver architecture", replacing the Classic implementation used for
    older InterBase(R) predecessors. Both Superserver and Classic
    architectures are available for Firebird on Linux, Solaris and possibly
    others.</para>

    <para>The so-called "Classic" architecture of InterBase(R) server starts a
    separate process for each connection to a database under its control. Each
    client is allocated its own database cache buffers. SuperServer serves
    many clients simultaneously within a single process. Instead of separate
    server processes for each connection it uses threads of a single process
    and pools the database cache buffers for use by all connections.</para>

    <para>If you are upgrading from a previous version of Firebird or faced
    with the choice between Classic and Superserver, the information listed in
    Table 1 (below) will help to explain what the differences are and how they
    affect database operations.</para>

    <para>The server architecture does not affect the structure of databases
    or the way client applications work. Firebird databases built on a Classic
    server can be operated on by an equivalent Superserver server, and vice
    versa. The same gds client library can connect to either server.</para>

    <para>In other words, if you begin by installing the Superserver
    distribution of Firebird on your Linux host machine and, later, decide to
    change to Classic, any applications you wrote for your Superserver-hosted
    databases will work unmodified and the databases themselves will continue
    to behave as they did before.</para>

    <note>
      <para>At the time of writing, no publicly distributable Classic server
      software was available for Windows.</para>

      <para>Additional details about Classic and Superserver server
      architectures can be found in the technical documentation pages of the
      <ulink url="http://www.ibphoenix.com">IB Phoenix web
      site</ulink>.</para>
    </note>

    <section id="ufb-about-arch-compare">
      <title>Comparison of characteristics</title>

      <table frame="all">
        <title>Table 1: Comparison of Classic and SuperServer
        architectures</title>

        <tgroup cols="3">
          <colspec colname="c1" />

          <colspec colname="c2" />

          <colspec colname="c3" />

          <spanspec align="center" nameend="c3" namest="c2"
                    spanname="span2and3" />

          <thead>
            <row>
              <entry><para> </para></entry>

              <entry spanname="span2and3"><para>ARCHITECTURE</para></entry>
            </row>

            <row>
              <entry><para>Feature</para></entry>

              <entry><para>Classic</para></entry>

              <entry><para>SuperServer</para></entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry><para>Executable</para></entry>

              <entry><para><systemitem>gds_inet_server</systemitem></para></entry>

              <entry><para><systemitem>ibserver</systemitem></para></entry>
            </row>

            <row>
              <entry><para>Processes</para></entry>

              <entry><para>Multiple, on demand, one instance per client
              connection</para></entry>

              <entry><para>Single server process, each client runs in its own
              thread</para></entry>
            </row>

            <row>
              <entry><para>Lock management</para></entry>

              <entry><para><systemitem>gds_lock_mgr</systemitem>
              process</para></entry>

              <entry><para>Implemented as a thread</para></entry>
            </row>

            <row>
              <entry><para>Local access</para></entry>

              <entry><para>Direct I/O to the database file is
              possible</para></entry>

              <entry><para>Uses a network style of access</para></entry>
            </row>

            <row>
              <entry><para>Resource use</para></entry>

              <entry><para>One cache per process</para></entry>

              <entry><para>One cache space for all clients</para></entry>
            </row>

            <row>
              <entry><para>Security on UNIX</para></entry>

              <entry><para>Executable and Lock Manager must run as
              root</para></entry>

              <entry><para>Can run as a non-root <systemitem>uid</systemitem>,
              with access restrictions</para></entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <section>
        <title>Executable and processes</title>

        <itemizedlist>
          <listitem>
            <para>Classic</para>

            <para>Runs on demand as multiple processes. When a client attempts
            to connect to a Firebird database, one instance of the
            <systemitem> gds_inet_server</systemitem> executable is initiated
            and remains dedicated to that client connection for the duration
            of the connection.</para>
          </listitem>

          <listitem>
            <para>SuperServer</para>

            <para>Runs as a single process, an invocation of the <systemitem>
            ibserver</systemitem> executable.
            <systemitem>ibserver</systemitem> is started once by the system
            administrator or by a system boot script. This process runs
            always, waiting for connection requests. Even when no client is
            connected to a database on the server,
            <systemitem>ibserver</systemitem> continues to run quietly. The
            SuperServer process does not depend on <systemitem>
            inetd</systemitem>; it waits for connection requests to the
            <systemitem>gds_db</systemitem> service itself.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Lock management</title>

        <itemizedlist>
          <listitem>
            <para>Classic</para>

            <para>For every client connection a separate server process is
            started to execute the database engine, and each server process
            has a dedicated database cache. The server processes contend for
            access to the database, so a Lock Manager subsystem is required to
            arbitrate and synchronize concurrent page access among the
            processes.</para>
          </listitem>

          <listitem>
            <para>SuperServer</para>

            <para>The lock manager is implemented as a thread in the
            <systemitem> ibserver</systemitem> executable. Therefore Firebird
            does not use the <systemitem>gds_lock_mgr</systemitem> process.
            The lock management thread uses inter-thread communication
            mechanisms rather than POSIX signals that are used by
            gds_lock_manager on Classic.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Resource use</title>

        <itemizedlist>
          <listitem>
            <para>Classic</para>

            <para>Each instance of <systemitem>gds_inet_server</systemitem>
            keeps a cache of database pages in its memory space. While the
            resource use per client is greater than in SuperServer, Classic
            uses fewer overall resources when the number of concurrent
            connections is low.</para>
          </listitem>

          <listitem>
            <para>SuperServer</para>

            <para>employs one single cache space which is shared by client
            attachments, allowing more efficient use and management of cache
            memory when the number of simultaneous connections grows
            larger.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Local access method</title>

        <itemizedlist>
          <listitem>
            <para>Classic</para>

            <para>Permits application processes that are running on the same
            machine as the database and server to perform I/O on database
            files directly.</para>
          </listitem>

          <listitem>
            <para>SuperServer</para>

            <para>Supports local access on Windows platforms only. It requires
            applications to request <systemitem> ibserver</systemitem> I/O
            operations by proxy, using a network method. SuperServer does not
            support true local access as Classic does, but simulates a network
            connection in the shared inter-process communication (IPC) space.
            This is important because Classic's use of direct I/O is faster
            and safer than the IPC mechanism used by SuperServer.</para>

            <para>On non-Windows platforms – and recommended for Windows too –
            local connections are made through the localhost server (at IP
            address 127.0.0.1, by convention).</para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Security on Linux and UNIX platforms</title>

        <itemizedlist>
          <listitem>
            <para>Classic</para>

            <para>server executables <systemitem> gds_inet_server</systemitem>
            and <systemitem>gds_lock_mgr</systemitem> must run as root. The
            lock manager must have the superuser privilege to send signals to
            the processes.</para>
          </listitem>

          <listitem>
            <para>SuperServer</para>

            <para>Can be configured to run as a non-root
            <systemitem>uid</systemitem> for enhanced security. The
            permissions on database files can be restricted to allow only the
            Firebird server <systemitem>uid</systemitem> to access the
            database.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>

    <section id="ufb-about-arch-which">
      <title>Which is better?</title>

      <para>In abstract terms, neither architecture is a clear winner. One
      architecture generally outshines the other under specific workload
      conditions:</para>

      <itemizedlist>
        <listitem>
          <para>A single application running on the same machine as the server
          is faster with the Classic architecture</para>
        </listitem>

        <listitem>
          <para>For an application embedded in an appliance, Classic is
          better, because it provides a single process from application to
          disk.</para>
        </listitem>

        <listitem>
          <para>On a single-processor machine, an application with larger
          numbers of frequently contending clients is faster with SuperServer,
          because of the shared cache.</para>
        </listitem>

        <listitem>
          <para>On SMP machines, small numbers of clients whose data updates
          do not impact others' tasks work better in the Classic
          architecture.</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section id="ufb-about-sysreq">
    <title>System Requirements</title>

    <section id="ufb-about-sysreq-memory">
      <title>Server Memory (all platforms)</title>

      <table frame="all">
        <title>Table 3: System Requirements</title>

        <tgroup cols="2">
          <colspec colname="colItem" colwidth="1*" />

          <colspec colname="colResourceUsage" colwidth="3*" />

          <tbody>
            <row>
              <entry><para>Firebird server process</para></entry>

              <entry><para>The Firebird server process makes efficient use of
              the server's resources, utilizing around 2 Mb of
              memory.</para></entry>
            </row>

            <row>
              <entry><para>Client connections</para></entry>

              <entry><para>Each client connection uses around 115 K of
              additional memory on the server host. The exact load depends on
              the structure of the database and the client
              characteristics.</para></entry>
            </row>

            <row>
              <entry><para>Database cache</para></entry>

              <entry><para>The default is configurable, in database pages.
              Superserver shares a single cache among all connections and
              increases cache automatically when required. Classic creates an
              individual cache per connection.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>

    <section id="ufb-about-sysreq-diskspace">
      <title>Disk space</title>

      <table frame="all">
        <title>Table 4: Approximate Disk Space Requirements</title>

        <tgroup cols="2">
          <colspec colname="colItem" colwidth="1*" />

          <colspec colname="colDiskspace" colwidth="3*" />

          <tbody>
            <row>
              <entry><para>Server</para></entry>

              <entry><para>A minimal server installation requires 9–12 Mb disk
              space, depending on the platform.</para></entry>
            </row>

            <row>
              <entry><para>Client library</para></entry>

              <entry><para>350 Kb</para></entry>
            </row>

            <row>
              <entry><para>Command-line tools</para></entry>

              <entry><para>~ 900 Kb</para></entry>
            </row>

            <row>
              <entry><para>Db management utility</para></entry>

              <entry><para>1Mb - 6 Mb, depending on utility
              selected.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>

    <section id="ufb-about-sysreq-specs">
      <title>Minimum machine specifications</title>

      <table frame="all">
        <title>Minimum machine specifications</title>

        <tgroup cols="4">
          <thead>
            <row>
              <entry><para>Operating system</para></entry>

              <entry><para>Version</para></entry>

              <entry><para>CPU</para></entry>

              <entry><para>RAM</para></entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry><para>Microsoft Windows</para></entry>

              <entry><para>NT 4.0 with service pack 6a</para><para>Windows
              95/98/ME</para><para>Windows 2000 with service pack
              1</para><para>Windows XP</para></entry>

              <entry><para>486DX2 66MHz min., Pentium 100MHz or greater
              recommended</para><para>Single CPU recommended</para></entry>

              <entry><itemizedlist>
                  <listitem>
                    <para>16Mb min. for client</para>
                  </listitem>

                  <listitem>
                    <para>64Mb min. for multi-client server</para>
                  </listitem>
                </itemizedlist></entry>
            </row>

            <row>
              <entry><para>Linux</para></entry>

              <entry><para>Red Hat 6.2 or higher, TurboLinux 6.0 or higher,
              SuSe 7.0 or higher, Mandrake 7.2 or higher</para></entry>

              <entry><para>Intel 486 or higher</para></entry>

              <entry><itemizedlist>
                  <listitem>
                    <para>16Mb min. for client</para>
                  </listitem>

                  <listitem>
                    <para>64Mb min. for multi-client server</para>
                  </listitem>
                </itemizedlist></entry>
            </row>

            <row>
              <entry><para>Solaris</para></entry>

              <entry><para>2.6 or 2.7</para></entry>

              <entry><para>SPARC, UltraSPARC</para></entry>

              <entry><itemizedlist>
                  <listitem>
                    <para>16Mb min. for client</para>
                  </listitem>

                  <listitem>
                    <para>64Mb min. for multi-client server</para>
                  </listitem>
                </itemizedlist></entry>
            </row>

            <row>
              <entry><para>Solaris</para></entry>

              <entry><para>?</para></entry>

              <entry><para>Intel</para></entry>

              <entry><itemizedlist>
                  <listitem>
                    <para>32 Mb min.</para>
                  </listitem>

                  <listitem>
                    <para>64 Mb for multi-client server</para>
                  </listitem>
                </itemizedlist></entry>
            </row>

            <row>
              <entry><para>Apple Macintosh</para></entry>

              <entry><para>Mac OS/X (Darwin)</para></entry>

              <entry><para>See distribution notes</para></entry>

              <entry><para>See distribution notes</para></entry>
            </row>

            <row>
              <entry><para>FreeBSD</para></entry>

              <entry><para>v.4.x</para></entry>

              <entry><para>See distribution notes</para></entry>

              <entry><para>See distribution notes</para></entry>
            </row>

            <row>
              <entry><para>HP-UX</para></entry>

              <entry><para>10.0 or higher</para></entry>

              <entry><para>See distribution notes</para></entry>

              <entry><para>See distribution notes</para></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
  </section>
</chapter>