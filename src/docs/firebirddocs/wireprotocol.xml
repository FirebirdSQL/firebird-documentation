<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"../../../tools/docbook-dtd/docbookx.dtd">
<article id="wireprotocol">
	<articleinfo>
		<title>The <application>Firebird</application> wire protocol</title>
		<subtitle>(As implemented in the <application>.NET</application> provider)</subtitle>
		<author>
			<firstname>Carlos</firstname>
			<surname>Guzman Alvarez</surname>
		</author>
		<revhistory>
			<revision>
				<revnumber>0.1</revnumber>
				<date>31 May 2004</date>
				<revremark>First draft for review.</revremark>
			</revision>
			<revision>
				<revnumber>0.2</revnumber>
				<date>02 Jun 2004</date>
				<revremark>Fixed issues reported by Paul Vinkenoog.</revremark>
			</revision>
			<revision>
				<revnumber>0.3</revnumber>
				<date>03 Jun 2004</date>
				<revremark>Added new subsections to the Statements section.</revremark>
			</revision>
			<revision>
				<revnumber>0.4</revnumber>
				<date>05 Jun 2004</date>
				<revremark>Fixed issues reported by Paul Vinkenoog.</revremark>
			</revision>
			<revision>
				<revnumber>0.5</revnumber>
				<date>06 Jun 2004</date>
				<revremark>Fixed issues reported by Paul Vinkenoog.</revremark>
			</revision>
			<revision>
				<revnumber>0.6</revnumber>
				<date>07 Jun 2004</date>
				<revremark>Added events system documentation.</revremark>
			</revision>
			<revision>
				<revnumber>0.7</revnumber>
				<date>16 Jun 2004</date>
				<revremark>Modifed document ID to wireprotocol.</revremark>
			</revision>
			<revision>
				<revnumber>0.8</revnumber>
				<date>17 Jun 2004</date>
				<revremark>Added two new segmendted lists.</revremark>
			</revision>
			<revision>
				<revnumber>0.9</revnumber>
				<date>18 Jun 2004</date>
				<revremark>
					<para>Improved segmentedlist usage.</para>
					<para>Fixed rendering of important tags.</para>
				</revremark>
			</revision>
			<revision>
				<revnumber>0.10</revnumber>
				<date>19 Jun 2004</date>
				<revremark>
					<para>Changed rendering of important tags using Paul Vinkenoog fix.</para>
				</revremark>
			</revision>
			<revision>
				<revnumber>0.11</revnumber>
				<date>20 Jun 2004</date>
				<revremark>
					<para>Added new segmentedlist.</para>
					<para>Updated Statements.Prepare documentation.</para>
					<para>Updated Statements.Execute documentation.</para>
					<para>Updated Blobs.GetSegment documentation.</para>
					<para>Updated Blobs.Seek documentation.</para>
				</revremark>
			</revision>
			<revision>
				<revnumber>0.12</revnumber>
				<date>21 Jun 2004</date>
				<revremark>
					<para>Updated services information.</para>
				</revremark>
			</revision>
		</revhistory>
	</articleinfo>
	<sect1 id="wireprotocol-responses">
		<title>Responses</title>
		<sect2 id="wireprotocol-responses-generic">
			<title>Generic response</title>
			<para>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>Operation code</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</para>
			<para>
				If operation equals <constant>op_response</constant> :
			</para>
			<para>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>Object handle</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int64</type>
						</term>
						<listitem>
							<para>Object ID</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Buffer</type>
						</term>
						<listitem>
							<para>Data</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Byte[]</type>
						</term>
						<listitem>
							<para>Status vector</para>
							<para>
								<important>
									<para>
										Information about how to parse the status vector can be found in the Interbase 6.0 documentation set</para>
								</important>
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</para>
		</sect2>
		<sect2 id="wireprotocol-responses-sql">
			<title>SQL response</title>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				If operation equals <constant>op_sql_response</constant> :
			</para>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Message count</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Data row</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="wireprotocol-responses-fetch">
			<title>Fetch response</title>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				If operation equals <constant>op_fetch_response</constant> :
			</para>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Status</para>
						<para>
							<important>
								<para>End of cursor is indicated with a non-zero status.</para>
								<para>A status with value of 100 means that there are no more rows.</para>
							</important>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Count</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="wireprotocol-responses-slice">
			<title>Slice response</title>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				If operation equals <constant>op_slice</constant> :
			</para>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Slice length</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Slice length</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Slice data</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
	</sect1>
	<sect1 id="wireprotocol-databases">
		<title>Databases</title>
		<sect2 id="wireprotocol-databases-attach">
			<title>Attach</title>
			<para>Attachments to a database are done in two steps.</para>
			<sect3>
				<title>Identification</title>
				<bridgehead renderas="sect4">Client</bridgehead>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Operation code (<constant>op_connect</constant>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Operation code (<constant>op_attach</constant>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Version (<constant>CONNECT_VERSION2</constant>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Architecture type (<emphasis>Generic = 1</emphasis>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>String</type>
						</term>
						<listitem>
							<para>
								Database path
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Protocol versions understood (<emphasis>1</emphasis>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Buffer</type>
						</term>
						<listitem>
							<para>
							User identification
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				<important>
					<para>The next block of data should be sent as many times 
					as protocols are supported.</para>
				</important>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Protocol version (<constant>PROTOCOL_VERSION10</constant>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Architecture type (<emphasis>Generic = 1</emphasis>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Minimum type (<emphasis>2</emphasis>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Maximum type (<emphasis>3</emphasis>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Preference weight (<emphasis>2</emphasis>)
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				<bridgehead renderas="sect4">Server</bridgehead>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Operation code
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				<para>
					If operation equals <constant>op_accept</constant> :
				</para>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Protocol version number
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Architecture for protocol
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Minumum type
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</sect3>
			<sect3>
				<title>Attachment.</title>
				<bridgehead renderas="sect4">Client</bridgehead>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Operation code (<constant>op_attach</constant>)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>
								Database object id (0)
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>String</type>
						</term>
						<listitem>
							<para>
								Database path
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Buffer</type>
						</term>
						<listitem>
							<para>
								Database parameter buffer
							</para>
							<para>
								<segmentedlist id="segmentedlist-dpb">
									<title>List of parameters sent in the DPB :</title>
									<?dbhtml list-presentation="table"?>
									<?dbfo list-presentation="table"?>
									<segtitle>Parameter</segtitle>
									<segtitle>Description</segtitle>
									<segtitle>Value</segtitle>
									<segtitle>Optional</segtitle>
									<seglistitem>
										<seg>
											<para>
												<constant>isc_dpb_version1</constant>
											</para>
										</seg>
										<seg>
											<para>Version</para>
										</seg>
										<seg />
										<seg />
									</seglistitem>
									<seglistitem>
										<seg>
											<para>
												<constant>isc_dpb_dummy_packet_interval</constant>
											</para>
										</seg>
										<seg>
											<para>Dummy packet interval</para>
										</seg>
										<seg>
											<para>120</para>
										</seg>
										<seg />
									</seglistitem>
									<seglistitem>
										<seg>
											<para>
												<constant>isc_dpb_sql_dialect</constant>
											</para>
										</seg>
										<seg>
											<para>SQL dialect</para>
										</seg>
										<seg>
											<para>3</para>
										</seg>
										<seg />
									</seglistitem>
									<seglistitem>
										<seg>
											<para>
												<constant>isc_dpb_lc_ctype</constant>
											</para>
										</seg>
										<seg>
											<para>Character set</para>
										</seg>
										<seg />
										<seg />
									</seglistitem>
									<seglistitem>
										<seg>
											<para>
												<constant>isc_dpb_sql_role_name</constant>
											</para>
										</seg>
										<seg>
											<para>User role</para>
										</seg>
										<seg />
										<seg>
											<para>*</para>
										</seg>
									</seglistitem>
									<seglistitem>
										<seg>
											<para>
												<constant>isc_dpb_connect_timeout</constant>
											</para>
										</seg>
										<seg>
											<para>Connection timeout</para>
										</seg>
										<seg />
										<seg />
									</seglistitem>
									<seglistitem>
										<seg>
											<para>
												<constant>isc_dpb_user_name</constant>
											</para>
										</seg>
										<seg>
											<para>User name</para>
										</seg>
										<seg />
										<seg />
									</seglistitem>
									<seglistitem>
										<seg>
											<para>
												<constant>isc_dpb_password</constant>
											</para>
										</seg>
										<seg>
											<para>User password</para>
										</seg>
										<seg />
										<seg />
									</seglistitem>
								</segmentedlist>
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				<bridgehead renderas="sect4">Server</bridgehead>
				<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where the object handle is the database handle.</para>
			</sect3>
		</sect2>
		<sect2 id="wireprotocol-databases-detach">
			<title>Detach</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_detach</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Database handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-databases-create">
			<title>Create</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<para>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>Operation code (<constant>op_create</constant>)</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>Database object id (0)</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>String</type>
						</term>
						<listitem>
							<para>Database path</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Buffer</type>
						</term>
						<listitem>
							<para>Database parameter buffer</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</para>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where the Object handle is the database handle.</para>
		</sect2>
		<sect2 id="wireprotocol-databases-drop">
			<title>Drop</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_drop_database</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Database handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-databases-information">
			<title>Information request</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_info_database</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Database handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Incarnation of object (<emphasis>0</emphasis>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Requested information items</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Requested information items buffer length</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where Data is holds the requested information.</para>
		</sect2>
	</sect1>
	<sect1 id="wireprotocol-transactions">
		<title>Transactions</title>
		<sect2 id="wireprotocol-transactions-start">
			<title>Start transaction</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_transaction</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Database handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Transaction parameter buffer</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where Object handle is the new transaction handle.</para>
		</sect2>
		<sect2 id="wireprotocol-transactions-commit">
			<title>Commit transaction</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_commit</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-transactions-rollback">
			<title>Rollback transaction</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_rollback</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-transactions-commitretain">
			<title>Commit retaining</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_commit_retaining</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link>.</para>
		</sect2>
		<sect2 id="wireprotocol-transactions-rollbackretain">
			<title>Rollback retaining</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_rollback_retaining</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-transactions-prepare">
			<title>Prepare</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_prepare2</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
	</sect1>
	<sect1 id="wireprotocol-statements">
		<title>Statements</title>
		<sect2 id="wireprotocol-statements-allocate">
			<title>Allocate</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_allocate_statement</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Database handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where Object Handle is the allocated statement handle.</para>
		</sect2>
		<sect2 id="wireprotocol-statements-free">
			<title>Free</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_free_statement</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Statement handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>
							<segmentedlist>
								<title />
								<?dbhtml list-presentation="table"?>
								<?dbfo list-presentation="table"?>
								<segtitle>Option</segtitle>
								<segtitle>Description</segtitle>
								<seglistitem>
									<seg>
										<para>
											<constant>DSQL_close</constant>
										</para>
									</seg>
									<seg>
										<para>Closes the statement.</para>
									</seg>
								</seglistitem>
								<seglistitem>
									<seg>
										<para>
											<constant>DSQL_drop</constant>
										</para>
									</seg>
									<seg>
										<para>Releases the statement.</para>
									</seg>
								</seglistitem>
							</segmentedlist>
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-statements-prepare">
			<title>Prepare</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_prepare_statement</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Statement handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>SQL dialect</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>String</type>
					</term>
					<listitem>
						<para>Statement to be prepared</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Describe information items</para>
						<para>
							<itemizedlist mark="none" spacing="compact">
								<title>List of requested information items :</title>
								<listitem>
									<para>
										<constant>isc_info_sql_select</constant>
									</para>
								</listitem>
								<listitem>
									<para>
										<constant>isc_info_sql_describe_vars</constant>
									</para>
								</listitem>
								<listitem>
									<para>
										<constant>isc_info_sql_sqlda_seq</constant>
									</para>
								</listitem>
								<listitem>
									<para>
										<constant>isc_info_sql_type</constant>
									</para>
								</listitem>
								<listitem>
									<para>
										<constant>isc_info_sql_sub_type</constant>
									</para>
								</listitem>
								<listitem>
									<para>
										<constant>isc_info_sql_length</constant>
									</para>
								</listitem>
								<listitem>
									<para>
										<constant>isc_info_sql_scale</constant>
									</para>
								</listitem>
								<listitem>
									<para>
										<constant>isc_info_sql_field</constant>
									</para>
								</listitem>
								<listitem>
									<para>
										<constant>isc_info_sql_relation</constant>
									</para>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Target buffer length (1024)</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link> - Where Data holds the statement description (matching the requested information items)
			</para>
		</sect2>
		<sect2 id="wireprotocol-statements-describe">
			<title>Describe</title>
			<para>
			Describe of output parameters of a query is done using the <link linkend="wireprotocol-statements-information">Statements information request message</link>
			</para>
			<itemizedlist mark="none" spacing="compact">
				<title>List of requested information items :</title>
				<listitem>
					<para>
						<constant>isc_info_sql_select</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_describe_vars</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_sqlda_seq</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_type</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_sub_type</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_length</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_scale</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_field</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_relation</constant>
					</para>
				</listitem>
			</itemizedlist>
		</sect2>
		<sect2 id="wireprotocol-statements-describe-bind">
			<title>Describe bind (input parameters)</title>
			<para>
			Describe of input parameters of a query is done using the <link linkend="wireprotocol-statements-information">Statements information request message</link>
			</para>
			<itemizedlist mark="none" spacing="compact">
				<title>List of requested information items :</title>
				<listitem>
					<para>
						<constant>isc_info_sql_select</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_describe_vars</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_sqlda_seq</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_type</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_sub_type</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_length</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_scale</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_field</constant>
					</para>
				</listitem>
				<listitem>
					<para>
						<constant>isc_info_sql_relation</constant>
					</para>
				</listitem>
			</itemizedlist>
		</sect2>
		<sect2 id="wireprotocol-statements-execute">
			<title>Execute</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code</para>
						<para>
							<segmentedlist>
								<title />
								<?dbhtml list-presentation="table"?>
								<?dbfo list-presentation="table"?>
								<segtitle>Operation</segtitle>
								<segtitle>Usage</segtitle>
								<seglistitem>
									<seg>
										<para>
											<constant>op_execute</constant>
										</para>
									</seg>
									<seg>
										<para>DDL and DML statements.</para>
									</seg>
								</seglistitem>
								<seglistitem>
									<seg>
										<para>
											<constant>op_execute2</constant>
										</para>
									</seg>
									<seg>
										<para>Stored procedures.</para>
									</seg>
								</seglistitem>
							</segmentedlist>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Statement handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>If the statement has input parameters :</para>
			<variablelist>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Parameters in BLR format</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Message number (0) ??</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Number of messages (1) ??</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Parameter values</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				If not :
			</para>
			<variablelist>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Empty (length only 0)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Message number (0) ??</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Number of messages (0) ??</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				If the statement is an stored procedure and there are output parameters :
			</para>
			<variablelist>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Output parameters in BLR format</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Output message number (0) ??</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				If operation equals <constant>op_sql_response</constant> :
			</para>
			<para>
				<link linkend="wireprotocol-responses-sql">SQL response</link>
			</para>
			<para>
				if not :
			</para>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2>
			<title>Rows affected by query execution</title>
			<para>
				Obtain the rows affected by a query is done using the <link linkend="wireprotocol-statements-information">Statements information request message</link>
			</para>
			<itemizedlist mark="none" spacing="compact">
				<title>List of requested information items :</title>
				<listitem>
					<para>
						<constant>isc_info_sql_records</constant>
					</para>
				</listitem>
			</itemizedlist>
		</sect2>
		<sect2 id="wireprotocol-statements-fetch">
			<title>Fetch</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_fetch</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Statement handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Output parameters in BLR format</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Message number</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Message count/Fetch size (200)</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				If operation equals <constant>op_fetch_response</constant> :
			</para>
			<para><link linkend="wireprotocol-responses-fetch">Fetch response</link>.</para>
			<para>
				If not :
			</para>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link>.</para>
		</sect2>
		<sect2>
			<title>Set cursor name</title>
			<para>
				<bridgehead renderas="sect4">Client</bridgehead>
				<variablelist>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>Operation code (<constant>op_set_cursor</constant>)</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>Statement handle</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>String</type>
						</term>
						<listitem>
							<para>Cursor name (null terminated)</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>
							<type>Int32</type>
						</term>
						<listitem>
							<para>Cursor type (0).</para>
							<important>
								<para>Reserved for future use</para>
							</important>
						</listitem>
					</varlistentry>
				</variablelist>
			</para>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-statements-information">
			<title>Information request</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_info_sql</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Statement handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Incarnation of object (0)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Requested information items</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Requested information items buffer length</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where Data holds the requested information.</para>
			<para>
				<important>
					<para>
						Information about how to parse the information buffer sent by the Firebird server can be found in the Interbase 6.0 documentation set
					</para>
				</important>
			</para>
		</sect2>
	</sect1>
	<sect1 id="wireprotocol-blobs">
		<title>Blobs</title>
		<sect2 id="wireprotocol-blobs-create">
			<title>Create/Open</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code</para>
						<para>
							<segmentedlist>
								<title />
								<?dbhtml list-presentation="table"?>
								<?dbfo list-presentation="table"?>
								<segtitle>Operation</segtitle>
								<segtitle>Description</segtitle>
								<seglistitem>
									<seg>
										<para>
											<constant>op_create_blob</constant>
										</para>
									</seg>
									<seg>
										<para>Creates a new blob</para>
									</seg>
								</seglistitem>
								<seglistitem>
									<seg>
										<para>
											<constant>op_open_blob</constant>
										</para>
									</seg>
									<seg>
										<para>Opens an exiting blob</para>
									</seg>
								</seglistitem>
							</segmentedlist>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Blob parameter buffer (<emphasis>optional</emphasis>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int64</type>
					</term>
					<listitem>
						<para>Blob ID</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where :</para>
			<orderedlist numeration="loweralpha">
				<listitem>
					<para>Object handle is the blob handle</para>
				</listitem>
				<listitem>
					<para>Blob id is the blob id</para>
				</listitem>
			</orderedlist>
		</sect2>
		<sect2 id="wireprotocol-blobs-getsegment">
			<title>Get segment</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_get_segment</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Blob handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Segment length (<emphasis>max length = 32768</emphasis>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Data segment (0)</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where Data is the blob segment.</para>
		</sect2>
		<sect2 id="wireprotocol-blobs-putsegment">
			<title>Put segment</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_batch_segments</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Blob handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Blob Segments</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-blobs-seek">
			<title>Seek</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_seek_blob</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Blob handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Seek mode (0)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Offset</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where ObjectHandle is the current position.</para>
		</sect2>
	</sect1>
	<sect1 id="wireprotocol-arrays">
		<title>Arrays</title>
		<sect2 id="wireprotocol-arrays-getslice">
			<title>Get slice</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_get_slice</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Transaction handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int64</type>
					</term>
					<listitem>
						<para>Array handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Slice length</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Slice descriptor (SDL)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>String</type>
					</term>
					<listitem>
						<para>Slice parameters (Always an empty string)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Slice (Always empty)</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-slice">Slice response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-arrays-putslice">
			<title>Put slice</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_put_slice</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>transaction handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int64</type>
					</term>
					<listitem>
						<para>Array handle (0)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Slice length</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Slice descriptor (SDL)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>String</type>
					</term>
					<listitem>
						<para>Slice parameters (Always an empty string)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Slice length</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Slice data</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where BlobId is the array handle.</para>
		</sect2>
	</sect1>
	<sect1 id="wireprotocol-services">
		<title>Services</title>
		<sect2 id="wireprotocol-services-attach">
			<title>Attach</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_service_attach</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Database object ID (0)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>String</type>
					</term>
					<listitem>
						<para>Service name</para>
						<para>For local connections : service_mgr </para>
						<para>For remote connections: HostName: service_mgr</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Service parameter buffer</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where Object handle is the services manager attachement handle.</para>
		</sect2>
		<sect2 id="wireprotocol-services-detach">
			<title>Detach</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_service_detach</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Services manager attachment handle</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-services-start">
			<title>Start</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_service_start</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Services manager attachment handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Incarnation of object (0)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Services parameter buffer</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para>
				<link linkend="wireprotocol-responses-generic">Generic response</link>
			</para>
		</sect2>
		<sect2 id="wireprotocol-services-query">
			<title>Query service</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_service_info</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Services manager attachment handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Incarnation of object (0)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Services parameter buffer</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Requested information items</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Requested information items buffer length</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where Data contains the requested information.</para>
		</sect2>
	</sect1>
	<sect1 id="wireprotocol-events">
		<title>Events</title>
		<sect2 id="wireprotocol-events-connect-request">
			<title>Connection request</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_connect_request</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>
							Connection type (<constant>P_REQ_async</constant>)
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>
							Partner identification (0)
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>
							Attachment handle
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int16</type>
					</term>
					<listitem>
						<para>Port number</para>
						<para>
							<important>
								<para>This is part of the sockaddr_in structure.</para>
								<para>It is not in XDR format</para>
							</important>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int16</type>
					</term>
					<listitem>
						<para>Socket family</para>
						<para>
							<important>
								<para>This is part of the sockaddr_in structure.</para>
								<para>It is not in XDR format</para>
							</important>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Byte[4]</type>
					</term>
					<listitem>
						<para>IP Address</para>
						<para>
							<important>
								<para>This is part of the sockaddr_in structure.</para>
								<para>It is not in XDR format</para>
							</important>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Byte[8]</type>
					</term>
					<listitem>
						<para>Zeroes</para>
						<para>
							<important>
								<para>This is part of the sockaddr_in structure.</para>
								<para>It is not in XDR format</para>
							</important>
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Byte[4]</type>
					</term>
					<listitem>
						<para>Garbage</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
		<sect2 id="wireprotocol-events-que-events">
			<title>Queue events</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_que_events</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Database handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Buffer</type>
					</term>
					<listitem>
						<para>Events parameter buffer</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Ast function address</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Ast parameters function address</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Local event id</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link> - Where Object Handle holds the remote event id.</para>
		</sect2>
		<sect2 id="wireprotocol-events-cancel-events">
			<title>Cancel events</title>
			<bridgehead renderas="sect4">Client</bridgehead>
			<variablelist>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Operation code (<constant>op_cancel_events</constant>)</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Database handle</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>
						<type>Int32</type>
					</term>
					<listitem>
						<para>Local event id</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<bridgehead renderas="sect4">Server</bridgehead>
			<para><link linkend="wireprotocol-responses-generic">Generic response</link>.</para>
		</sect2>
	</sect1>
	<appendix id="wireprotocol-appendix-xdr">
		<title>External Data Representation (XDR)</title>
		<para>The Firebird wire protocol uses XDR for exchange messages between client and server.</para>
	</appendix>
	<appendix id="wireprotocol-appendix-types">
		<title>Data types</title>
		<variablelist>
			<varlistentry>
				<term>
					<type>Int32</type>
				</term>
				<listitem>
					<para>Integer 32-bits</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<type>Int64</type>
				</term>
				<listitem>
					<para>Integer 64-bits</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<type>Buffer</type>
				</term>
				<listitem>
					<para>
						<segmentedlist>
							<title>Composed by :</title>
							<?dbhtml list-presentation="table"?>
							<?dbfo list-presentation="table"?>
							<segtitle>Type</segtitle>
							<segtitle>Description</segtitle>
							<seglistitem>
								<seg>
									<para>
										<type>Int32</type>
									</para>
								</seg>
								<seg>
									<para>Length.</para>
								</seg>
							</seglistitem>
							<seglistitem>
								<seg>
									<para>
										<type>Byte[]</type>
									</para>
								</seg>
								<seg>
									<para>Buffer data.</para>
								</seg>
							</seglistitem>
						</segmentedlist>
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<type>Byte[]</type>
				</term>
				<listitem>
					<para>An array of bytes</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>
					<type>String</type>
				</term>
				<listitem>
					<para>A text string (<emphasis>Read/Written as a buffer</emphasis>)</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</appendix>
</article>