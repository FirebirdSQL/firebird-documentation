<?xml version="1.0" encoding="UTF-8"?>
<chapter id="rnfb210-intl">
  <chapterinfo>
    <title>Supporto alle lingue internazionali (INTL)</title>

    <author>
      <firstname>Adriano</firstname>

      <surname>dos Santos Fernandes</surname>
    </author>
  </chapterinfo>

  <para>Questo capitolo descrive la nuova interfaccia al supporto per le
  lingue internazionali che è stato introdotto con Firebird 2. A partire da
  allora, sono state aggiunte funzionalità e migliorie, inclusa la possibilità
  di implementare generici ordinamenti UNICODE da librerie esterne. Inoltre è
  stata aggiunta una sintassi DDL per applicare tutto ciò, nella forma della
  frase <xref linkend="rnfb210-intl-crtcolln" />.</para>

  <section id="rnfb20x-charsets">
    <sectioninfo>
      <title>Interfacia INTL per i set di caratteri non ASCII</title>

      <author>
        <firstname>A.</firstname>

        <surname>dos Santos Fernandes</surname>
      </author>
    </sectioninfo>

    <para>Definita inizialmente da N. Samofatov, la nuova interfaccia di
    Firebird 2 per i caratteri internazionali ha molte nuove funzionalità
    sviluppate dall'autore.</para>

    <section id="rnfb20x-charsets-arch">
      <title>Architettura</title>

      <para>Firebird permette di definire il set di caratteri e l'ordinamento
      in qualsiasi dichiarazione di campo o variabile a caratteri. Il set di
      caratterio di default può essere inoltre specificato al momento della
      creazione del database, in modo che ogni dichiarazione CHAR o VARCHAR
      usi quel default se non include una specifica clausola CHARACTER
      SET.</para>

      <para>Alla connesione normalmente si specifica il set di caratteri che
      il <emphasis>client</emphasis> intende usare per leggere le stringhe. Se
      non viene specificato un set di caratteri "client" (o di "connessione"),
      si impone il set di caratteri NONE.</para>

      <para>Due speciali set di caratteri, NONE e OCTETS, possono essere
      utilizzati nelle dichiarazioni. Tuttavia, OCTETS non può essere
      specificato per le connessioni. I due set sono simili, tranne che per
      NONE il carattere spazio è ASCII 0x20, mentre per OCTETS è 0x00.</para>

      <para>NONE e OCTETS sono <quote>speciali</quote> nel senso che usano
      nelle conversioni regole differenti da quelle degli altri setdi
      caratteri.</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para>Negli altri set di caratteri le conversioni sono effettuate in
          questo modo: CHARSET1-&gt;UNICODE-&gt;CHARSET2.</para>
        </listitem>

        <listitem>
          <para>Con NONE/OCTETS i bytes che compongono le stringhe sono
          copiati direttamente così come sono : NONE/OCTETS-&gt;CHARSET2 e
          CHARSET1-&gt;NONE/OCTETS.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="rnfb20x-charsets-enh">
      <title>Miglioramenti</title>

      <para>I miglioramenti apportati da questo nuovo sistema
      includono:</para>

      <section id="rnfb20x-charsets-enh-well-formed">
        <title>Controllo sulla corretta formazione</title>

        <para>Alcuni set di caratteri (specialmente a byte multipli) non
        accettano proprio qualsiasi stringa. Ora, il sistema verifica che le
        stringhe siano corrette quando le assegna da NONE/OCTETS e quando le
        stringhe sono inviate al client (sia come statement che come
        parametri).</para>
      </section>

      <section id="rnfb20x-charsets-enh-ucase">
        <title>Maiuscole</title>

        <para>In Firebird 1.5.x, solo i caratteri ASCII sono convertiti in
        maiuscole nell'ordinamento default (binario) di qualsiasi set di
        caratteri, che è quello usato quando non viene specificata la
        COLLATION.</para>

        <para>Per esempio,</para>

        <programlisting>
  isql -q -ch dos850
  SQL&gt; create database 'test.fdb';
  SQL&gt; create table t (c char(1) character set dos850);
  SQL&gt; insert into t values ('a');
  SQL&gt; insert into t values ('e');
  SQL&gt; insert into t values ('á');
  SQL&gt; insert into t values ('é');
  SQL&gt;
  SQL&gt; select c, upper(c) from t;

  C      UPPER
  ====== ======
       a      A
       e      E
       á      á
       é      é
        </programlisting>

        <para>In Firebird 2 il risultato è invece questo:</para>

        <programlisting>
  C      UPPER
  ====== ======
       a      A
       e      E
       á      Á
       é      É
        </programlisting>
      </section>

      <section id="rnfb20x-charsets-enh-max-string">
        <title>Lunghezza massima di una stringa</title>

        <para>In Firebird 1.5.x non viene verificata la lunghezza logica di
        una stringa di un set di caratteri multibyte (MBCS). Pertanto, un
        campo UNICODE_FSS prende tre volte il numero di caratteri della
        dimensione dichiarata del campo, essendo tre bytes la lunghezza
        massima di un carattere UNICODE_FSS.</para>

        <para>Questo è stato mantenuto per compatibilitò solo per i set di
        caratteri preesistenti. Tuttavia i nuovi set di caratteri, ad esempio
        UTF8, non mantengono questo limitazione.</para>
      </section>

      <section id="rnfb20x-charsets-enh-attcharset">
        <title><emphasis>sqlsubtype</emphasis> ed il set di caratteri per la
        connessione</title>

        <!--MIMMO : ho aggiunto alla fine "dichiarato nel DDL"-->

        <para>Quando il set di caratteri di un campo CHAR o VARCHAR non è né
        NONE né OCTETS, ed il set di caratteri della connessione non è NONE,
        il membro <emphasis>sqlsubtype</emphasis> di una XSQLVAR pertinente a
        quella colonna ora contiene il numero del set di caratteri della
        connessione e non quello del set di caratteri della colonna dichiarato
        nel DDL.</para>
      </section>

      <section id="rnfb20x-charsets-enh-blob">
        <title>Miglioramenti per i BLOB</title>

        <para>Sono stati fatti diversi miglioramenti per la gestione dei BLOB
        di testo.</para>

        <section id="rnfb20x-charsets-enh-blob-collate">
          <title>Clausola COLLATE per i BLOB</title>

          <para>Si può specificarte una nuova clausola DML COLLATE ai
          BLOB.</para>

          <para>
            <emphasis role="bold">Esempio</emphasis>
          </para>

          <programlisting>
  select blob_column from table
    where blob_column collate unicode = 'foo';
          </programlisting>
        </section>

        <section id="rnfb20x-charsets-enh-blob-compare">
          <title>Confronti sul contenuto completo dei BLOB</title>

          <para>Si possono effettuare operazioni di confronto sull'intero
          contenuto di un BLOB di testo.</para>
        </section>

        <section id="rnfb20x-charsets-enh-blob-convert">
          <title>Conversioni sul set di caratteri dei BLOB</title>

          <para>Si possono effettuare conversioni fra i set di caratteri
          durante l'assegnazione di un BLOB ad una stringa o ad un altro
          BLOB</para>
        </section>
      </section>
    </section>

    <section id="rnfb20x-charsets-intl">
      <title>INTL Plug-in</title>

      <para>I set di caratteri e gli ordinamenti sono installati usando un
      <firstterm>manifest file</firstterm> (documento di configurazione in
      formato particolare).</para>

      <para><!--MIMMO - ho specificato le diverse dir in windows e linux-->Il
      manifest file deve essere messo nel sottodirettorio
      <filename>intl</filename> dell'installazione (cioè
      <filename>$rootdir/intl</filename> in Linux o
      <filename>C:\Programmi\Firebird\Firebird_2_1\intl</filename> in Windows)
      con l'estensione <filename>.conf</filename>. Viene usato per trovare i
      set di caratteri e gli ordinamenti nelle librerie. Se un set di
      caratteri o un ordinamento sono elencati più di una volta, non viene
      caricato e viene inserito un errore nel log.</para>

      <para>Il file <filename>/intl/fbintl.conf</filename> è un esempio di
      manifest file da cui sono state estratte le righe seguenti:</para>

      <literallayout class="monospaced">
   &lt;intl_module fbintl&gt;
       filename    $(this)/fbintl
   &lt;/intl_module&gt;

   &lt;charset ISO8859_1&gt;
       intl_module    fbintl
       collation    ISO8859_1
       collation    DA_DA
       collation    DE_DE
       collation    EN_UK
       collation    EN_US
       collation    ES_ES
       collation    PT_BR
       collation    PT_PT
   &lt;/charset&gt;

   &lt;charset WIN1250&gt;
       intl_module    fbintl
       collation    WIN1250
       collation    PXW_CSY
       collation    PXW_HUN
       collation    PXW_HUNDC
   &lt;/charset&gt;
      </literallayout>

      <note>
        <para>Il simbolo $(this) viene usato per indicare la directory in cui
        è il manifest file stesso. Inoltre l'estensione della libreria va
        omessa.</para>
      </note>
    </section>

    <section id="rnfb20x-charsets-new">
      <title>Nuovi set di caratteri ed ordinamenti</title>

      <para>Due nuovi set di caratteri aggiunti in Firebird 2 sono di
      particolare interesse per chi ha litigato in passato con i pasticci
      generati da UNICODE_FSS nelle versioni precedenti.</para>

      <section id="rnfb20x-charsets-new-utf8">
        <title>Set di caratteri UTF8</title>

        <para>Il set di caratteri UNICODE_FSS ha diversi problemi: è una
        vecchia versione di UTF8 che accetta stringhe malformate e non
        determina la lunghezza massima corretta di una stringa. In FB 1.5.X
        UTF8 è di fatto un alias di UNICODE_FSS.</para>

        <para>Ora, UTF8 è un nuovo set di caratteri, senza i problemi
        correlati a UNICODE_FSS.</para>
      </section>

      <section id="rnfb20x-charsets-new-uni">
        <title>Ordinamenti UNICODE (per UTF8)</title>

        <para>UCS_BASIC ordina come UTF8 senza nessuna specifica (sarebbe
        UNICODE in ordine binario). L'ordinamento UNICODE ordina invece usando
        l'UCA (Unicode Collation Algorithm).</para>

        <para>
          <emphasis role="bold">Esempio di ordinamenti:</emphasis>
        </para>

        <programlisting>
  isql -q -ch dos850
  SQL&gt; create database 'test.fdb';
  SQL&gt; create table t (c char(1) character set utf8);
  SQL&gt; insert into t values ('a');
  SQL&gt; insert into t values ('A');
  SQL&gt; insert into t values ('á');
  SQL&gt; insert into t values ('b');
  SQL&gt; insert into t values ('B');
  SQL&gt; select * from t order by c collate ucs_basic;

  C
  ======
  A
  B
  a
  b
  á

  SQL&gt; select * from t order by c collate unicode;

  C
  ======
  a
  A
  á
  b
  B
        </programlisting>
      </section>
    </section>

    <section id="rnfb210-intl-devel">
      <title>Sviluppi nella V.2.1</title>

      <para>La versione 2.1 aggiunge delle funzionalità relative a</para>

      <orderedlist>
        <listitem>
          <para>usare i set di caratteri ICU definendoli in
          <filename>fbintl.conf</filename></para>
        </listitem>

        <listitem>
          <para>L'ordinamento UNICODE (charset_UNICODE) è disponibile per
          tutti set di caratteri in <emphasis>fbintl</emphasis></para>
        </listitem>

        <listitem>
          <para>attributi per usare gli ordinamenti</para>
        </listitem>

        <listitem>
          <para>Frasi SQL per CREATE/DROP COLLATION</para>
        </listitem>

        <listitem>
          <para>Comando SHOW COLLATION ed estrazione degli ordinamenti in
          ISQL</para>
        </listitem>

        <listitem>
          <para>Verifica della buonaformattazione dei BLOB di testo</para>
        </listitem>

        <listitem>
          <para>Translitterazione dei BLOB di testo in automatico</para>
        </listitem>
      </orderedlist>
    </section>

    <section id="rnfb210-intl-icucharsets">
      <title>ICU Character Sets</title>

      <para>Tutti i set di caratteri non grandi e basati su ASCII presenti in
      ICU possono essere usati da Firebird 2.1. Per ridurre la fimensione del
      kit in distribuzione, si è personalizzato ICU per includere solo i set
      di caratteri essenziali e quelli per i quali c'è stata una specifica
      richiesta.</para>

      <para>Se il set di caratteri di cui si ha bisogno non è incluso, si
      possono sostituire le librerie ICU con altri moduli, reperibili al
      nostro sito o già installati nel sistema operativo.</para>

      <section id="rnfb210-intl-icureg">
        <title>Registrare un modulo per set di caratteri ICU</title>

        <para>Per usare un modulo per set di caratteri alternativo, bisogna
        registrarlo in due parti:</para>

        <orderedlist>
          <listitem>
            <para>nel file di configurazione dei libguaggi del server,
            <filename>intl/fbintl.conf</filename></para>
          </listitem>

          <listitem>
            <para>in ogni database che richiede di usarlo</para>
          </listitem>
        </orderedlist>

        <section id="rnfb210-intl-reginsvr">
          <title>Registrare un set di caratteri nel server</title>

          <para>Usando un editor di testi, registrare il nuovo set di
          caratteri nel manifest file <filename>intl/fbintl.conf</filename>,
          come segue:</para>

          <programlisting>
&lt;charset         NAME&gt;
    intl_module     fbintl
    collation       NAME [REAL-NAME]
&lt;/charset&gt;
          </programlisting>
        </section>

        <section id="rnfb210-intl-regindb">
          <title>Registrare un set di caratteri in un database</title>

          <para>Per registrare il modulo in un database, lanciare la procedura
          <filename>sp_register_character_set</filename>, il cui sorgente si
          trova nel sottodirettorio <filename>misc/intl.sql</filename> della
          radice di Firebird 2.1</para>

          <section id="rnfb210-intl-byscript">
            <title>Uso della Stored Procedure</title>

            <para>
              <emphasis role="bold">Un esempio</emphasis>
            </para>

            <para>Questa è ad esempio una dichiarazione in
            <filename>fbintl.conf</filename>:</para>

            <programlisting>
&lt;charset         GB&gt;
    intl_module     fbintl
    collation       GB GB18030
&lt;/charset&gt;
            </programlisting>

            <para>La stored procedure ha due parametri: una stringa che è
            l'identificatore del set di caratteri come dichiarato nel file di
            configurazione ed un intero che è il massimo numero di byte che
            occupa un singolo carattere in quella codifica. Nel nostro
            esempio:</para>

            <programlisting>
execute procedure sp_register_character_set ('GB', 4);
            </programlisting>
          </section>
        </section>

        <section id="rnfb210-intl-crtcolln" xreflabel="CREATE COLLATION">
          <title>La frase CREATE COLLATION</title>

          <para>
            <emphasis role="bold">Sintassi per CREATE COLLATION</emphasis>
          </para>

          <programlisting>
CREATE COLLATION &lt;name&gt;
    FOR &lt;charset&gt;
    [ FROM &lt;base&gt; | FROM EXTERNAL ('&lt;name&gt;') ]
    [ NO PAD | PAD SPACE ]
    [ CASE SENSITIVE | CASE INSENSITIVE ]
    [ ACCENT SENSITIVE | ACCENT INSENSITIVE ]
    [ '&lt;specific-attributes&gt;' ]
            </programlisting>

          <note>
            <para>Attributi specifici devono essere separati da punto e
            virgola (cioè ';' ) e sono sensibili alle maiuscole.</para>
          </note>

          <para>
            <emphasis role="bold">Esempi</emphasis>
          </para>

          <programlisting>
/* 1 */
CREATE COLLATION UNICODE_ENUS_CI
    FOR UTF8
    FROM UNICODE
    CASE INSENSITIVE
    'LOCALE=en_US';
/* 2 */
CREATE COLLATION NEW_COLLATION
    FOR WIN1252
    PAD SPACE;

/* NEW_COLLATION deve essere dichiarata nel file .conf
   bel direttorio $root/intl  */
          </programlisting>
        </section>
      </section>
    </section>

    <section id="rnfb210-intl-unicode" xreflabel="UNICODE Collations">
      <title>Gli ordinamenti UNICODE</title>

      <para>Gli ordinamenti UNICODE (sia sensibili che insensibili alle
      maiuscole) possono essere applicati a tutti i set di caratteri presenti
      in fbintl. Essi sono già registrati in <filename>fbintl.conf</filename>,
      ma bisogna registrarli nel database con le associazioni ed attributi
      prescelti.</para>

      <para>
        <emphasis role="bold">Convenzioni nel nome</emphasis>
      </para>

      <para>Per convenzione il nome da usare è nella forma <filename>&lt;nome
      set caratteri&gt;_&lt;ordinamento&gt;</filename>. Ad esempio,</para>

      <programlisting>
create collation win1252_unicode
  for win1252;

create collation win1252_unicode_ci
  for win1252
   from win1252_unicode
   case insensitive;
      </programlisting>

      <note>
        <para>Il nome del set di caratteri deve essere identico a come
        specificato in <filename>fbintl.conf</filename> (ad esempio ISO8859_1
        e non ISO88591).</para>
      </note>
    </section>

    <section id="rnfb210-intl-attribs">
      <title>Attributi specifici per gli ordinamenti</title>

      <note>
        <para>Alcuni attributi possono non funzionare con certi ordinamenti,
        anche se non riportano errori.</para>
      </note>

      <variablelist>
        <varlistentry>
          <term>DISABLE-COMPRESSIONS</term>

          <listitem>
            <para>Disabilita le contrazioni, cambiando di fatto l'ordine di un
            gruppo di caratteri.</para>

            <para>Valido per i set di carratteri ad un byte.</para>

            <para>Formato:   DISABLE-COMPRESSIONS={0 | 1}</para>

            <para>
              <emphasis role="bold">Esempio</emphasis>
            </para>

            <para>DISABLE-COMPRESSIONS=1</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>DISABLE-EXPANSIONS</term>

          <listitem>
            <para>Disabilita le espansioni, cambiando l'ordine di un carattere
            in un gruppo di caratteri.</para>

            <para>Valido per ordinamenti su set di caratteri ad un
            byte.</para>

            <para>Formato:   DISABLE-EXPANSIONS={0 | 1}</para>

            <para>
              <emphasis role="bold">Esempio</emphasis>
            </para>

            <para>DISABLE-EXPANSIONS=1</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>ICU-VERSION</term>

          <listitem>
            <para>Specifica quale versione della libreria ICU deve essere
            usata. I valori validi, sono quelli definiti in nel file di
            configurazione (<filename>intl/fbintl.conf</filename>) nella
            dichiarazione intl_module/icu_versions.</para>

            <para>Valido per UNICODE e UNICODE_CI.</para>

            <para>Formato:   ICU-VERSION={default | major.minor}</para>

            <para>
              <emphasis role="bold">Esempio</emphasis>
            </para>

            <para>ICU-VERSION=3.0</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>LOCALE</term>

          <listitem>
            <para>Specifica un ordinamento locale.</para>

            <para>Valido per UNICODE e UNICODE_CI. Richiede la versione
            completa delle librerie ICU.</para>

            <para>Formato:   LOCALE=xx_XX</para>

            <para>
              <emphasis role="bold">Esempio</emphasis>
            </para>

            <para>LOCALE=en_US</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>MULTI-LEVEL</term>

          <listitem>
            <para>Usa più di un livello per effettura gli ordinamenti.</para>

            <para>Valido per ordinamenti su set di caratteri ad un solo
            byte.</para>

            <para>Formato:   MULTI-LEVEL={0 | 1}</para>

            <para>
              <emphasis role="bold">Esempio</emphasis>
            </para>

            <para>MULTI-LEVEL=1</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>SPECIALS-FIRST</term>

          <listitem>
            <para>Ordina i caratteri speciali (spazi, simboli, ecc.) prima dei
            caratteri alfanumerici.</para>

            <para>Valido per ordinamenti su set di caratteri a singolo
            byte.</para>

            <para>Formato:   SPECIALS-FIRST={0 | 1}</para>

            <para>
              <emphasis role="bold">Esempio</emphasis>
            </para>

            <para>SPECIALS-FIRST=1</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section id="rnfb210-intl-chngs">
      <title>Modifiche agli ordinamenti in V.2.1</title>

      <variablelist>
        <varlistentry>
          <term>Spagnolo</term>

          <listitem>
            <para>L'ordinamento ES_ES (come il nuovo ES_ES_CI_AI)
            automaticamente usa gli attributi DISABLE-COMPRESSIONS=1;
            SPECIALS-FIRST=1.</para>

            <note>
              <para>Gli attributi sono memorizzati al momento della creazione
              del database, pertanto tale modifica non si applica a database
              con ODS precedente alla 11.1.</para>
            </note>

            <para>L'ordinamento ES_ES_CI_AI è stato standardizzato all'uso
            corrente.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>UTF-8</term>

          <listitem>
            <para>Ordinamento insensibile alle maiuscole per UTF-8. Vedere la
            richiesta <ulink
            url="http://tracker.firebirdsql.org/browse/CORE-972">CORE-972</ulink></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section id="rnfb210-intl-metafix">
    <title>Conversione del testo del metadata</title>

    <para>La versione 2.0.x di Firebird aveva due problemi relativi al set di
    caratteri ed all'estrazione del metadata:</para>

    <orderedlist>
      <listitem>
        <para>Creando o modificando gli oggetti, il testo associato al
        metadata non viene translitterato dal set di caratteri del Client a
        quello del sistema (UNICODE_FSS) per tali colonne BLOB. Invece
        venivano memorizzati i bytes così come stavano, nudi e crudi.</para>

        <para>I tipi di testo influenzati da questa coa erano i sorgente PSQL,
        le descrizioni, testi associati a vincoli ed indici, e così
        via.</para>

        <note>
          <para>Anche nella versione attuale (2.1.x) il problema può ancora
          accadere se un'operazione CREATE oppure ALTER viene effettuata col
          set di caratteri della connessione a NONE o UNICODE_FSS e si usano
          dati non UNICODE_FSS.</para>
        </note>
      </listitem>

      <listitem>
        <para>Leggendo i BLOB di testo, la translitterazione dal set di
        caratteri del BLOB al set di caratteri client non veniva
        effettuata.</para>
      </listitem>
    </orderedlist>

    <section id="rnfb210-metafix-repair">
      <title>Riparare il testo del metadata</title>

      <para>Se il tuo metadata è stato creato con una codifica non ASCII,
      bisogna riparare il database per poter leggere il metadata correttamente
      dopo un aggiornamento akka versione 2.1.</para>

      <important>
        <para>La procedura e composta da più passaggi attraverso il database,
        con l'utilizzo di alcuni script. Si raccomanda fortemente di
        disconnettersi e riconnettersi al database dopo ciascun passo.</para>

        <para>Il database deve essere già stato portato in ODS11.1 attraverso
        un ciclo di backup e di restore utilizzando gbak.</para>

        <para>Ovviamente, prima di iniziare a fare qualsiasi cosa, farsi una
        copia di sicurezza del database.</para>

        <para>Nell'esempio seguente, <emphasis>$fbroot$</emphasis> rappresenta
        il percorso del direttorio radice dell'installazione di Firebird, ad
        esmpio <filename>/opt/firebird</filename> su Linux oppure
        <filename>C:\Programmi\Firebird\Firebird_2_1</filename> su
        Windows.</para>

        <para><!--MIMMO - aggiunto l'avviso seguente-->Gli esempi indicano i
        percorsi per Linux. Su Windows vanno indicati secondo il suo
        standard.</para>
      </important>

      <section id="rnfb210-metafix-prepare1">
        <title>Creare le procedure nel database</title>

        <programlisting>
[1] isql /percorso/al/tuo/database.fdb
[2] SQL&gt; input '$fbroot$/misc/upgrade/metadata/metadata_charset_create.sql';
        </programlisting>
      </section>

      <section id="rnfb210-metafix-prepare2">
        <title>Verificare il database</title>

        <programlisting>
[1] isql /percorso/al/tuo/database.fdb
[2] SQL&gt; select * from rdb$check_metadata;
        </programlisting>

        <para>La procedura <emphasis>rdb$check_metadata</emphasis> elenca
        tutti gli oggetti che verifica.</para>

        <itemizedlist>
          <listitem>
            <para>Se non viene elevata nessuna eccezione, il metadata del
            database è a posto e si può proseguire alla sezione <quote>
                <xref linkend="rnfb210-metafix-rmv" />
              </quote>.</para>
          </listitem>

          <listitem>
            <para>Altrimenti, l'ultimo oggetto listato prima dell'eccezione è
            quello che ha problemi.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="rnfb210-metafix-fix">
        <title>Aggiustare il metadata</title>

        <para>Per sistemare il metadata, bisogna sapere in che set di
        caratteri è stato creato l'oggetto. Lo script d'aggiornamento funziona
        correttamente solo se tutto il metadata è stato creato usando lo
        stesso set di caratteri.</para>

        <programlisting>
[1] isql /percorso/al/tuo/database.fdb
[2] SQL&gt; input '$fbroot$/misc/upgrade/metatdata/metadata_charset_create.sql';
[3] SQL&gt; select * from rdb$fix_metadata('WIN1251');  -- sostituire WIN1251 col set di caratteri scelto
[4] SQL&gt; commit;
        </programlisting>

        <para>La procedura <emphasis>rdb$fix_metadata</emphasis> riporta le
        stesse informazioni di <emphasis>rdb$check_metadata</emphasis>, ma
        cambia i testi nel metadata.</para>

        <important>
          <para>Deve essere lanciato una ed una sola volta!</para>
        </important>

        <para>Dopo ciò si possono rimuovere le procedure di
        aggiornamento.</para>
      </section>

      <section id="rnfb210-metafix-rmv"
               xreflabel="Rimuovere le procedure d'aggiornamento">
        <title>Remove the upgrade procedures</title>

        <programlisting>
[1] isql /percorso/al/tuo/database.fdb
[2] SQL&gt; input '$fbroot$/misc/upgrade/metadata/metadata_charset_drop.sql';
        </programlisting>
      </section>
    </section>
  </section>

  <section id="rnfb21-intl-spprtd">
    <title>Set di caratteri supportati</title>

    <para>Vedere <xref linkend="rnfb210-appx-B" /> alla fine di queste note di
    rilascio, per la lista completa di tutti i set di caratteri
    supportati.</para>
  </section>
</chapter>