<?xml version="1.0" encoding="UTF-8"?>
<chapter id="rnfb210-scrty">
  <title>Sicurezza</title>

  <!--MIMMO == versione 2.1.3 : traduzione allineata-->

  <para>In questo capitolo ci sono i dettagli delle modifiche alla sicurezza
  in Firebird effettuate col rilascio di Firebird 2 e delle versioni
  succesive. Sono inoltre evidenziati le ulteriori modifiche ed i
  miglioramenti introdotti nella V.2.1.</para>

  <section id="rnfb20x-sec-summary">
    <title>Introduzione alle modifiche</title>

    <para>Il miglioramento dei sistemi di sicurezza ha avuto un notevole
    impulso in Firebird 2.0. Quanto segue è un riepilogo delle principali
    modifiche.</para>

    <section id="rnfb20x-sec-summary-sec-db">
      <title>Nuovo database della sicurezza</title>

      <para>Il nuovo database per la sicurezza è stato rinominato
      <function>security2.fdb</function>. Internamente, la tabella di
      autenticazione degli utenti, dove sono memorizzati i nomi e le password
      degli utenti, è stata rinominata <function>RDB$USERS</function>. Non
      esiste più la tabella <quote>users</quote> ma una nuova
      <emphasis>vista</emphasis> su RDB$USERS che è nominata
      <quote>USERS</quote>. Attraverso tale vista gli utenti possono cambiarsi
      le loro password.</para>

      <para>Per dettagli sul nuvo database, vedere <xref
      linkend="rnfb20x-sec-dtl-auth-fbtwo-secdb" /> nella sezione
      sull'autenticazione più oltre in questo capitolo.</para>

      <para>Per istruzioni sul come aggiornare dalla precedente versione del
      database della sicurezza, fare riferimento alla fine di questo capitolo
      alla sezione <xref linkend="rnfb20x-sec-new-db" />.</para>
    </section>

    <section id="rnfb210-sec-summary-wintrusted">
      <title>Usare il sistema di autenticazione degli utenti di
      Windows</title>

      <para><emphasis role="bold">(V.2.1)</emphasis> A partire da Firebird
      2.1, si può utilizzare il sistema di autenticazione degli utenti di
      Windows (<quote>Trusted User</quote> security) per verificare le
      credenziali degli utenti Firebird su una piattaforma Windows. Il
      contesto degli utenti convalidati viene passato al server Firebird
      invece del nome utente e password e, se positico, viene usato per
      determinare il nome utente Firebird.</para>

      <para>Per dettagli vedere più avanti la sezione, <xref
      linkend="rnfb210-wintrusted" />.</para>
    </section>

    <section id="rnfb20x-sec-summary-pwd">
      <sectioninfo>
        <title>Migliorata la crittografia delle password</title>

        <author>
          <firstname>A.</firstname>

          <surname>Peshkov</surname>
        </author>
      </sectioninfo>

      <para>Il sistema di criptazione/decriptazione delle password adesso usa
      un migliore algoritmo di calcolo.</para>
    </section>

    <section id="rnfb20x-sec-summary-usermod">
      <sectioninfo>
        <title>Gli utenti possono modificarsi la password</title>

        <author>
          <firstname>A.</firstname>

          <surname>Peshkov</surname>
        </author>
      </sectioninfo>

      <para>Il SYSDBA rimane il proprietario del database della sicurezza.
      Tuttavia gli utenti possono modificarsi la loro propria password.</para>
    </section>

    <section id="rnfb20x-sec-summary-gsec">
      <sectioninfo>
        <title>Solo il server può connettersi al database di sicurezza</title>

        <author>
          <firstname>A.</firstname>

          <surname>Peshkov</surname>
        </author>
      </sectioninfo>

      <para>Anche il programma di utilità <emphasis>gsec</emphasis> ora usa le
      API di servizio. Il server rifiuta qualsiasi tipo di accesso al
      security2.fdb se non attraverso le API del gestore dei servizi (Services
      Manager).</para>
    </section>

    <section id="rnfb20x-sec-summary-no-brute">
      <sectioninfo>
        <title>Protezione attiva contro gli attacchi brutali</title>

        <author>
          <firstname>A.</firstname>

          <surname>Peshkov</surname>
        </author>
      </sectioninfo>

      <para>I tentativi di accedere al server usando tecniche brutali sugli
      nominativi e le password sono rilevati e bloccati.</para>

      <itemizedlist>
        <listitem>
          <para>Da ogni client remoto è obbligatorio connettersi con la
          password</para>
        </listitem>

        <listitem>
          <para>I client che cercano di effettuare troppi tentativi di
          connessioni sono bloccati per un certo periodo di tempo</para>
        </listitem>
      </itemizedlist>

      <para>Il supporto di protezione contro gli attacchi brutali è stato
      incluso nelle funzioni di connessione sia delle API di Firebird sia
      delle API di servizio. Per altri dettagli vedere <xref
      linkend="rnfb20x-sec-dtl-protect" /></para>
    </section>

    <section id="rnfb20x-sec-summary-vulner" xreflabel="Warning">
      <sectioninfo>
        <title>Vulnerabilità varie chiuse</title>

        <author>
          <firstname>A. Peshkov,</firstname>

          <surname>C. Valderrama</surname>
        </author>
      </sectioninfo>

      <para>Alcune note vulnerabilità nell'API sono state chiuse.</para>

      <caution>
        <para>Va notato che rimettere la <emphasis role="bold">funzionalità
        del server redirection ("multi-hop")</emphasis> in Firebird 2 può
        potenzialmente reintrodurre una nuova vulnerabilità. Per tale ragione
        ciò è controllato da un parametro in
        <filename>firebird.conf</filename> (<xref
        linkend="rnfb20x-fbconf-redirection" />), che non va abilitato a meno
        che non sappia esattamente tutte le reali implicazioni di ciò che si
        sta' facendo.</para>

        <para>In questi giorni, la possibilità di redirezionare ad altri
        server le richieste è considerata pericolosa. Supponendo di avere un
        server firebird accuratamente protetto, a cui sia possibile accedere
        da Internet. In una situazione in cui esso ha accesso non ristretto
        alla LAN interna, può lavorare come gateway per tutte le richieste
        entranti come
        <literal>firebird.your.domain.com:internal_server:/private/database.fdb</literal>.</para>

        <para>Sapere il nome o l'indirizzo IP di un qualsiasi server interno
        nella LAN è sufficiente per un'intruso: non ha bisogno di login su un
        server esterno. Tale gateway facilmente soprassiede qualsiasi firewall
        che sta' proteggendo la LAN dagli attacchi esterni.</para>
      </caution>
    </section>
  </section>

  <section id="rnfb20x-sec-dtl">
    <title>Dettagli sulle modifiche di sicurezza in Firebird 2</title>

    <para>Sono state messe a fuoco alcune debolezze riconosciute nella
    sicurezza di Firebird contro gli attacchi malevoli:</para>

    <itemizedlist>
      <listitem>
        <para>la mancanza di unsistema di crittazione delle password
        resistente agli attacchi brutali neldatabase della sicurezza</para>
      </listitem>

      <listitem>
        <para>la possibilità di ogni utente remoto di aprire il database della
        sicurezza e leggervi le password criptate (specialmente se combinato
        col punto precedente)</para>
      </listitem>

      <listitem>
        <para>la impossibilità degli utenti a cambiare le loro password</para>
      </listitem>

      <listitem>
        <para>la mancanza di protezione contro gli attacchi brutali alle
        password nel server stesso</para>
      </listitem>
    </itemizedlist>

    <section id="rnfb20x-sec-dtl-auth">
      <title>Autenticazione</title>

      <para>L'autenticazione in Firebird controlla su un database di sicurezza
      a livello di server per decidere se autorizzare una connessione ad un
      database o al server. Il database della sicurezza memorizza i nomi
      utente e le password di tutte le identità autorizzate.</para>

      <section id="rnfb20x-sec-dtl-auth-fbonefive">
        <title>Autenticazione in Firebird 1.5</title>

        <para>In Firebird 1.5 si usa l'algoritmo DES due volte per criptare la
        password: prima dal client e poi dal server, prima di confrontarle col
        dato memorizzato nel database della sicurezza. Tuttavia, questa
        sequenza viene completamente rotta quando SYSDBA cambia una password.
        Il client effettua due volte il calcolo e memorizza il risultato nel
        database della sicurezza. Pertanto la gestione della password è
        completamente dipendente dal client (o, meglio, definita dal
        client).</para>
      </section>

      <section id="rnfb20x-sec-dtl-auth-fbtwo">
        <title>Firebird 2: calcolo lato server</title>

        <para>Per utilizzare sistemi di crittazione più robusti, è stato
        necessario un altro approccio. La password criptata da memorizzare sul
        server dovrebbe essere sempre calcolata dal server stesso. Tale schema
        esiste già in Firebird all'interno delle API di servizio. Questo portò
        alla decisione di utilizzarle per ogni attività client relativa alla
        gestione ddegli utenti. Adesso, <emphasis>gsec</emphasis> e le
        funzioni API isc_user_* (con * uguale add, modify o delete) usano
        tutte le API di servizio per accedere al database della sicurezza.
        (L'eccezione è l'accesso embedded al server Classic su sistemi POSIX,
        vedere sotto).</para>

        <para>Effettuare modifiche alla gestione delle password è diventato
        abbastanza semplice, è sempre effettuata dal server. Non è più un
        compito della <emphasis>gsec</emphasis> calcolare la password criptata
        per il database della sicurezza: chiede semplicemente al server di
        fare il lavoro!</para>

        <para>Vale la pena notare che la nuova <emphasis>gsec</emphasis>
        funziona anche con Firebird più vecchi, purché le architetture del
        server supportino i servizi.</para>

        <section id="rnfb20x-sec-dtl-auth-fbtwo-hash">
          <title>L'algoritmo di criptazione SHA-1</title>

          <para>Questo metodo porta ad una situazione in cui</para>

          <orderedlist>
            <listitem>
              <para>una parola crittata per l'utente A non è valida per
              l'utente B (ovvero password uguali danno crittazioni
              diverse)<!--MIMMO == aggiunta nota tra parentesi--></para>
            </listitem>

            <listitem>
              <para>quando un utente cambia la sua password, anche se la
              stringa è identica alla precedente, il dato memorizzato in
              RDB$USERS.RDB$PASSWD è diverso.</para>
            </listitem>
          </orderedlist>

          <para>Sebbene questa situazione da sola non aumenti la resistenza ad
          un tentativo di attacco brutale di ottenere la password, rende
          l'analisi "visuale" di una password rubata molto più
          difficile.</para>
        </section>
      </section>

      <section id="rnfb20x-sec-dtl-auth-fbtwo-secdb"
               xreflabel="Nuovo database della sicurezza">
        <title>Il nuovo database della sicurezza</title>

        <para>La struttura del database della sicurezza è stata cambiata. In
        generale, adesso contiene una patch di Ivan Prenosil, con qualche
        piccola modifica, che permette ad ogni utente di modificare la propria
        password.</para>

        <itemizedlist>
          <listitem>
            <para>In Firebird 1.5 la tabella USERS poteva essere letta da
            PUBLIC, una necessità del motore senza la quale il sistema di
            validazione delle password non avrebbe funzionato. La soluzione di
            Ivan usa una vista, con la condizione "WHERE USER = ''". Questo
            funzionava a causa di un altro problema nel motore che in SQL
            lasciava la variabile USER vuota, non 'authenticator', come sembra
            dal codice del motore.</para>

            <para>Una volta corretto tale problema, diventa possibile
            aggiungere la condizione "USER = 'authenticator'". A breve termine
            questo andava bene in quanto il nome utente viene sempre
            convertito in maiuscolo.</para>
          </listitem>

          <listitem>
            <para>Successivamente è stata trovata una soluzione migliore che
            evita il ricorso ad un trucchetto SQL per fare l'autenticazione
            dell'utente. Il risultato è che un utente non-SYSDBA può vedere
            solo il suo proprio nome di login in tutti gli strumenti di
            amministrazione (<emphasis>gsec</emphasis>, o tutte le interfaccie
            grafiche che usano le API di servizio). SYSDBA continua ad avere
            accesso completo alle credenziali utente.</para>
          </listitem>
        </itemizedlist>

        <section id="rnfb20x-sec-dtl-gsec-dbstruc">
          <title>Struttura del nuovo database della sicurezza</title>

          <para>Il database della sicurezza di Firebird 2 è<literal>
          security2.fdb</literal>. Per l'autenticazione degli utenti ha la
          nuova tabella <literal>RDB$USERS</literal> che memorizza le password
          crittate col nuovo metodo. Una vista su questa tabella sostituisce
          la vecchia tabella USERS e permette aglil utenti di modificare le
          proprie password.</para>

          <para>Il DDL delle nuove strutture è descritto nell'Appendice <xref
          linkend="rnfb210-appx-C" />.</para>
        </section>
      </section>
    </section>

    <section id="rnfb20x-sec-dtl-gsec">
      <title>gsec in Firebird 2</title>

      <para>Misure speciali sono state adottate per rendere completamente
      impossibili le connessioni remote al database della sicurezza. Non ci si
      deve sorprendere se qualche vecchio programma non riesce ad accedere
      direttamente: questo è voluto. Adesso si può accedere alle informazioni
      degli utenti aolo attraverso le API di servizio e l'accesso interno ai
      servizi equivalente implementato ora nelle funzioni API
      <function>isc_user_*</function>.</para>
    </section>

    <section id="rnfb20x-sec-dtl-protect"
             xreflabel="Protezione dagli attacchi brutali">
      <title>Protezione dagli attacchi brutali</title>

      <para>Le attuali velocissime CPU e le connessioni WAN veloci rendono
      possibile tentare di attaccare brutalmente le password degli utenti di
      un server Firebird. Questo è pericolo specialmente per il Superserver
      che effettua, fin dalla versione 1.5, un'autenticazione dell'utente
      molto veloce. Il server Classic è più lento, poiché deve creare un nuovo
      processo per ogni connessione, collegarsi al database della sicurezza
      attraverso quella connessione e preparare una richiesta alla tabella
      RDB$USERS prima di poter validare login e password. Il Superserver
      bufferizza le connessioni e le richieste, permettendo una validazione
      dell'utente molto più veloce.</para>

      <para>Data la lunghezza massima di 8 byte delle tradizionali password di
      Firebird, l'attacco brutale ha una ragionevole possibilità di successo
      per irrompere nell'installazione Firebird.</para>

      <para>La versione 2.0 del Superserver ha una protezione attiva per
      rendere più difficili gli attacchi. Dopo alcuni tentativi di accesso
      falliti, l'utente e l'indirizzo IP vengono bloccati per alcuni secondi,
      impedendo per un berve periodo ogni tentativo di accesso successivo con
      quel nome utente OPPURE da quel particolare indirizzo IP.</para>

      <para>Non sono richieste impostazioni o configurazioni per questa
      caratteristica. Viene automaticamente attivata appena parte il
      SuperServer Firebird 2.0.</para>
    </section>
  </section>

  <section id="rnfb210-wintrusted"
           xreflabel="Sicurezza con Windows Trusted Users">
     

    <sectioninfo>
      <title>Usare Windows Security per autenticare gli utenti</title>

      <author>
        <firstname>Alex</firstname>

        <surname>Peshkov</surname>
      </author>
    </sectioninfo>

     

    <para><emphasis role="bold">(V.2.1)</emphasis> A partire da Firebird 2.1
    in poi, si può utilizzare la sicurezza di Windows <quote>Trusted
    User</quote> per autenticare gli utenti su una piattaforma Windows. Il
    contesto di sicurezza della Trusted User viene passato al server Firebird,
    e se ha successo, viene usato per determinare la sicurezza in Firebird a
    partire dal nome utente.</para>

     

    <para>Omettendo semplicemente i parametri utente e password dal DPB/SPB si
    applica automaticamente l'autenticazione attraverso Windows Trusted User,
    in quesi tutti i casi. Vedere la sezione sull'Environment, sotto, per le
    eccezioni.</para>

     

    <para>
      <emphasis role="bold">Esempio dimostrativo</emphasis>
    </para>

     

    <para>Supponiamo di entrare nel server Windows SRV con l'utente 'Mario', e
    di connettersi al server Firebird SRV con <emphasis>isql</emphasis>, senza
    specificare un utente ed una password Firebird, in questo modo:</para>

     

    <programlisting>
isql srv:employee
 </programlisting>

     

    <para>A questo punto si fa:</para>

     

    <programlisting>
SQL&gt; select CURRENT_USER from rdb$database;
    </programlisting>

     si ottiene una cosa come: 

    <programlisting>
USER
====================================================
SRV\Mario
 </programlisting>

     

    <section id="rnfb210-wintrusted-sqlprivs">
      <title>Privilegi SQL</title>

      <para>Gli utenti Windows possono ricevere garanzie di accesso agli
      oggetti e ai ruoli del database allo stesso modo degli utenti Firebird
      standard, similmente a quanto è sempre stato disponibile per gli utenti
      dei database Firebird ospitati su Unix e Linux.</para>
    </section>

     

    <section id="rnfb210-wintrusted-admin">
      <title>Amministratori</title>

      <para>Se un amministratore locale o un membro del gruppo predefinito di
      Amministratori di Dominio si connette a Firebird utilizzando
      l'autenticazione trusted, viene connesso come SYSDBA.</para>
    </section>

     

    <section id="rnfb210-wintrusted-fbconf">
      <title>Configurazione del parametro
      <quote>Authentication</quote></title>

      <para>Il nuovo parametro <filename>Authentication</filename> è stato
      aggiunto in firebird.conf per configurare il metodo si autenticazione in
      Windows. I possibili valori sono:</para>

      <variablelist>
        <varlistentry>
          <term>Authentication = Native</term>

          <listitem>
            <para>Permette la piena com,patibilità con le versioni di Firebird
            precedenti, impedendo l'autenticazione trusted.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Authentication = Trusted</term>

          <listitem>
            <para>Il database della sicurezza viene ignorato e viene usata la
            sola autenticazione di Windows. Sotto certi aspetti,
            l'autenticazione Windows è più sicura di quella nativa, nel senso
            che non è né più né meno sicura del sistema operativo in cui
            gira.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Authentication = Mixed</term>

          <listitem>
            <para>Questa è l'impostazione di default.</para>

            <para>Per mantenere il comportamento compatibile, se sono
            impostate nell'ambiente le variabili <filename>ISC_USER</filename>
            e <filename>ISC_PASSWORD</filename>, queste vengono prese e usate
            al posto dell'autenticazione trusted.</para>

            <note>
              <para>L'autenticazione trusted può essere forzata a sovrastare
              le variabili s'ambiente quando sono state impostate — vedere le
              note qui sotto.</para>
            </note>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

     

    <section id="rnfb210-wintrusted-forcing">
      <title>Forzare l'autenticazione trusted</title>

      <para>Nel caso in cui sia necessaria l'autenticazione trusted e c'è la
      possibilità di trovare impostate <filename>ISC_USER</filename> e
      <filename>ISC_PASSWORD</filename>, c'è un nuovo parametro in DPB che può
      essere aggiunto al DPB,
      <filename>isc_dpb_trusted_auth</filename>.</para>

      <para>Molte delle utilità a linea di comando di Firebird supportano
      parametri attraverso lo switch <filename>-tru[sted]</filename> (la forma
      abbreviata è disponibile, secondo le regole usuali per abbreviare gli
      switch).</para>

      <note>
        <para>Le utilità <emphasis>qli</emphasis> e
        <emphasis>nbackup</emphasis> non seguono questa linea: esse usano
        switch a singola lettera che è uno stile un po' vecchiotto. Lo switch
        per <emphasis>qli</emphasis> è nel caso -K. Per
        <emphasis>nbackup</emphasis>, invece è spiegato qui sotto. La
        possibilità di forzargli l'autenticazione trusted deve essere ancora
        implementata.</para>
      </note>

      <para>
        <emphasis role="bold">Esempio</emphasis>
      </para>

      <programlisting>
C:\Pr~\bin&gt;isql srv:db            -- entra usando l'autenticazione trusted
C:\Pr~\bin&gt;set ISC_USER=utente1
C:\Pr~\bin&gt;set ISC_PASSWORD=12345
C:\Pr~\bin&gt;isql srv:db            -- entra usando 'utente1' specificato nell'ambiente
C:\Pr~\bin&gt;isql -trust srv:db     -- entra usando l'autenticazione trusted
      </programlisting>
    </section>

     

    <important>
      <para>Le regole in Windows per i nomi utente nei domini permettono nomi
      più lunghi del massimo di 31 caratteri permesso da Firebird per i nomi
      utente. <emphasis role="bold">Il limite di 31 caratteri è
      assicurato</emphasis> e, a partire dalla V.2.1, viene disabilitata la
      possibilità di entrare con nomi più lunghi. Questa rimane la situazione
      finchè non verrà implementata in una futura versione di Firebird la
      mappatura degli oggetti del sistema operativo con gli oggetti del
      database.</para>
    </important>

     
  </section>

  <section id="rnfb20x-sec-posix">
    <title>Il Server Classic in POSIX</title>

    <para>Per ragioni sia tecniche che storiche, il server Classic in POSIX
    con client embedded è particolarmente vulnerabile riguardo alla sicurezza.
    Gli utenti che accedono ai database attraverso l'embedded DEVONO almeno
    avere i diritti di accesso in lettura al database della sicurezza.</para>

    <para>Questa è la principale ragione che ha determinato la necessità di
    implementare una migliore crittazione delle password. Un utente malevolo
    con accesso utente a Firebird avrebbe potuto facilmente fare una copia del
    database della sicurezza, portarsela a casa e con calma forzare
    brutalmente la vecchia crittazione DES! Dopodiché avrebbe potuto
    modificare i dati sui database importanti memorizzati sul server. Firebird
    2 è molto meno vulnerabile a questo tipo di attacchi.</para>

    <para>Comuinque il server embedded in POSIX ha un altro problema di
    sicurezza: la sua implementazione delle API di servizio chiama l'utilità a
    linea di comando <emphasis>gsec</emphasis>, come gli utenti normali.
    Pertanto un'utilità di manutenzione degli utenti su embedded server deve
    avere accesso pieno al database della sicurezza.</para>

    <para>La principale ragione per restringere l'accesso diretto al database
    della sicurezza era di proteggerlo dalle vecchie versioni del software
    client. Contemporaneamente, per caso fortuito, minimizza anche
    l'esposizione del Classic embedded in POSIX, poiché è improbabile la
    presenza contemporanea in un ambiente operativo di un vecchio client e di
    un nuovo server.</para>
  </section>

  <section id="rnfb20x-sec-caution">
    <title>In tutte le piattaforme</title>

    <caution>
      <para>Il livello di sicurezza non è ancora soddisfacente sotto un
      aspetto molto serio, pertanto leggete attentamente questa sezione prima
      di aprire la porta 3050 ad internet.</para>
    </caution>

    <para>Un problema di sicurezza importante rimane irrisolto in Firebird: la
    trasmissione <quote>in chiaro</quote> attraverso la rete di password
    malamente criptate. Non è possibile risolvere questo problema senza
    bloccare i client più vecchi.</para>

    <para>Mettendola in altro modo, un utente che ha impostato la password
    usando un nuovo metodo sicuro, sarebbe incapace di usare un client vecchio
    per collegarsi al server. Avendo questo presente nei piani di aggiornare
    alcuni aspetti delleAPI nelle prossime versioni, è stata presa la
    decisione di non modificare il metodo di trasmissione delle password in
    Firebird 2.0.</para>

    <para>Nell'immediato il problema può essere risolto facilmente usando un
    software di IP-tunneling (come ZeBeDee) per trasferire i dati da e per un
    server Firebird, per entrambe le versioni 1.5 e 2.0. Al momento rimane il
    modo raccomandato di accedere ad un server Firebird attraverso
    Internet.</para>
  </section>

  <section id="rnfb210-impr-secur">
    <title>Altri miglioramenti</title>

    <section id="rnfb210-impr-secur1">
      <title>isc_service_query() erroneamente rivelava il percorso completo di
      un db</title>

      <para><ulink
      url="http://tracker.firebirdsql.org/browse/CORE-1091">Richiesta
      CORE-1091</ulink></para>

      <para><emphasis role="bold">(V.2.1)</emphasis> Configurando il server
      con "DatabaseAccess = None", <filename>isc_service_query()</filename>
      riportava il percorso completo di nome file del database. Adesso è stato
      corretto per riportare il solo alias, un argomento in più a favore di
      rendere standard l'uso degli alias!</para>
    </section>

    <section id="rnfb210-impr-secur2">
      <title>Chiunque poteva leggere il log del server con le API di
      servizio</title>

      <para><ulink
      url="http://tracker.firebirdsql.org/browse/CORE-1148">Richiesta
      CORE-1148</ulink></para>

      <para>Questa era una vulnerabilità della sicurezza minore. Gli utenti
      normali adesso sono bloccati se cercano di accedere al log del server
      attraveso le API di servizio. Le richieste sono verificate
      esplicitamente al fine di assicurare che l'utente autenticato sia
      SYSDBA.</para>
    </section>
  </section>

  <section id="rnfb20x-sec-new-db"
           xreflabel="Gestione del nuovo database di sicurezza">
    <sectioninfo>
      <title>Gestione del nuovo database della sicurezza</title>

      <author>
        <firstname>A.</firstname>

        <surname>Peshkov</surname>
      </author>
    </sectioninfo>

    <para>Se si cerca di mettere un database di sicurezza di una versione
    precedente alla 2, sia esso un <filename>security.fdb</filename> oppure un
    <filename>isc4.gdb</filename> rinominati, nella directory di installazione
    di Firebird, cercando di connettervisi si riceve il messaggio d'errore
    "Cannot attach to password database" (<quote>Impossibile collegarsi al
    database delle passord</quote>). Le cosa stanno così per scelta
    progettuale. Un database della sicurezza di una versione precedente di
    Firebird non può essere utilizzato direttamente in Firebird 2.0 o
    successivi.</para>

    <para>Il database della sicurezza rinnovato nella struttura si chiama
    security2.fdb.</para>

    <para>Per riutilizzare un vecchio database della sicurezza, è necessario
    lanciare lo script di aggiornamento
    <function>security_database.sql</function>, che è nella sottocartella
    <function>../upgrade</function> dell'installzione del server
    Firebird.</para>

    <note>
      <para>Una copia dello script è anche in <xref
      linkend="rnfb210-appx-C" />.</para>
    </note>

    <section id="rnfb20x-sec-new-db-upgrade" xreflabel="Security DB Upgrade">
      <title>Effettuare l'aggiornamento del DB della sicurezza</title>

      <para>Per effettuare tale aggiornamento, seguire questa
      procedura:</para>

      <orderedlist>
        <listitem>
          <para>mettere il vecchio database della sicurezza in un posto
          sicuro, ma non nella cartella denna nuova installazione di Firebird.
          Farne una copia per tenerla comunque a disposizione!</para>
        </listitem>

        <listitem>
          <para>Far partire Firebird 2, usando il suo originale nuovo
          security2.fdb.</para>
        </listitem>

        <listitem>
          <para>Convertire il vecchio database della sicurezza a ODS11 (cioè
          farne il backup ed il restore usando Firebird 2.0). Senza questo
          passo, lo script security_database.sql non funzionerà!</para>
        </listitem>

        <listitem>
          <para>Connettersi a quest'ultimo dopo il restore come SYSDBA e
          lanciare lo script.</para>
        </listitem>

        <listitem>
          <para>Fermare il servizio Firebird.</para>
        </listitem>

        <listitem>
          <para>Copiare il database aggiornato nella cartella di installazione
          di Firebird 2 come <filename>security2.fdb</filename>.</para>
        </listitem>

        <listitem>
          <para>Far ripartire Firebird.</para>
        </listitem>
      </orderedlist>

      <para>Ora dovrebbe essere possibile collegarsi al server Firebird 2
      utilizzando i vecchi login e password.</para>

      <section id="rnfb20x-sec-new-db-upgrade-nullability"
               xreflabel="Nullability of RDB$PASSWD">
        <title>NULL nel campo RDB$PASSWD</title>

        <para>Nelle versioni di Firebird precedenti alla 2.0 era possibile
        avere utenti con password a NULL. A partire dalla versione 2.0 in poi
        nel database della sicurezza il campo RDB$PASSWD è vincolato ad essere
        NOT NULL.</para>

        <para>Tuttavia per evitare eccezioni durante lo script di
        aggiornamento, il campo è creato dallo script come annullabile. Se si
        è sicuri di non avere password vuote nel database della sicurezza,
        potete modificare lo script a mano prima di lanciarlo. Ad esempio si
        può modificare la linea</para>

        <literallayout class="monospaced">  RDB$PASSWD RDB$PASSWD,        </literallayout>

        <para>in:</para>

        <literallayout class="monospaced">  RDB$PASSWD RDB$PASSWD NOT NULL,        </literallayout>
      </section>

      <section id="rnfb20x-sec-new-db-upgrade-legacyhash"
               xreflabel="Caution with LegacyHash">
        <title>Attenzione sul parametro LegacyHash</title>

        <para>Se si configura <function>LegacyHash = 1</function> in
        <function>firebird.conf</function>, la sicurezza di Firebird non
        funziona più per bene. Per raddrizzare le cose, è necessario fare
        quanto segue:</para>

        <orderedlist>
          <listitem>
            <para>Cambiare la password di SYSDBA</para>
          </listitem>

          <listitem>
            <para>Fare in modo che gli utenti cambino la loro password (in 2.0
            ogni utente può cambiare la sua password).</para>
          </listitem>

          <listitem>
            <para>Rimettere LegacyHash a 0, cioè al valore di default, oppure
            commentarla.</para>
          </listitem>

          <listitem>
            <para>Fermare e far ripartire Firebird per attivare la modifica
            alla configurazione.</para>
          </listitem>
        </orderedlist>
      </section>
    </section>
  </section>
</chapter>