<?xml version="1.0" encoding="UTF-8"?>
<chapter id="rnfb210-new">
  <chapterinfo>
    <title>Le novità di Firebird 2</title>
  </chapterinfo>

  <section id="rnfb210-new-feat">
    <title>Nuove caratteristiche implementate</title>

    <para>Questo capitolo riassume le nuove caratteristiche implementate in
    Firebird 2, comprendendo sia la serie 2.1 che la 2.0.x.</para>

    <section id="rnfb210-new-ods">
      <title>Struttura su disco (On-Disk Structure)</title>

      <para>I Database creati o recuperati da un backup sotto Firebird 2 hanno
      una struttura su disco (ODS) di livello 11 o superiore.</para>

      <itemizedlist>
        <listitem>
          <para>Firebird 2.1 crea database con ODS 11.1. Può leggere database
          anche ODS inferiori, ma molte delle nuove caratteristiche non
          saranno disponibili a tali database.</para>
        </listitem>

        <listitem>
          <para>Firebird 2.0.x crea databse con ODS 11 (alle volte indicata
          come 11.0). Per avere tutte le caratteristiche della versione 2.1, è
          necessario operare un aggiornamento dalla ODS 11 e precedenti,
          facendo una copia di backup e recuperando tale copia <emphasis>con
          un server v.2.1</emphasis>.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="rnfb210-new-dbtrig">
      <title>Trigger a livello Database</title>

      <para><emphasis role="bold">(v.2.1)</emphasis> Questi nuovi
      <quote>database triggers</quote> sono moduli PSQL definiti dall'utente
      che possono essere utilizzati per l'esecuzione durante gli eventi a
      livello di connessione o di transazione. Vedere <xref
      linkend="rnfb210-dbtriggers" />.</para>
    </section>

    <section id="rnfb210-new-obj">
      <title>SQL ed Oggetti SQL</title>

      <section id="rnfb210-new-gtt">
        <title>Tabelle temporanee globali</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Sono state implementate
        secondo lo standard SQL le tabelle temporanee globali (global
        temporary tables o GTT). Queste tabelle predefinite sono instanziate
        su richiesta per un uso specifico a livello di transazione o di
        connessine con dati non persistenti, che il motore Firebird memorizza
        su tabelle temporanee. Vedere <xref
        linkend="rnfb210-globaltemp" />.</para>
      </section>

      <section id="rnfb210-new-cte">
        <title>Espressioni con tabelle comuni (CTE), e query con DSQL
        recursive.</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Si tratta di una nuova
        caratteristica definita nello standard, per rendere possibili le query
        recursive dinamiche. Vedere <xref linkend="rnfb210-cte" />.</para>
      </section>

      <section id="rnfb210-new-rtrng">
        <title>Clausola RETURNING</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Questa clausola
        opzionale, RETURNING, è disponibile per tutte le operazioni singole di
        update, insert e delete. Vedere <xref
        linkend="rnfb210-rtrng" />.</para>
      </section>

      <section id="rnfb210-new-updorinsrt">
        <title>Frase UPDATE OR INSERT</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Adesso si possono
        scrivere frasi SQL capaci di effettuare un aggiornamento ad un record
        esistente oppure un inserimento, in funzione dell'esistenza o meno del
        record selezionato. Vedere <xref
        linkend="rnfb210-updorinsrt" />.</para>
      </section>

      <section id="rnfb210-new-merge">
        <title>Frase MERGE</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Questa nuova sintassi
        esegue un aggiornamento ad un record esistente, se soddisfa una certa
        condizione,oppure esegue un inserimento altrimenti. Vedere <xref
        linkend="rnfb210-merge" />.</para>
      </section>

      <section id="rnfb210-new-list">
        <title>La funzione LIST()</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> La nuova funzione di
        aggregazione LIST(&lt;QUALCOSA&gt;) recupera tutti i QUALCOSA in un
        gruppo e li raggruppa in una lista separata da virgola. Vedere <xref
        linkend="rnfb210-list" />.</para>
      </section>

      <section id="rnfb210-new-builtin">
        <title>Tante nuove funzioni integrate</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Tutte queste nuove
        funzioni sostituiscono le vecchie equivalenti funzioni UDF distribuite
        nelle librerie UDF. Per la lista completa con esempi vedere <xref
        linkend="rnfb210-builtin" />.</para>
      </section>

      <section id="rnfb210-new-blb">
        <title>I BLOB <quote>corti</quote> possono trasformarsi in VARCHAR
        lunghi.</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> A vari livelli di
        valutazione, il motore adesso tratta i BLOB di testo di dimensione
        entro i 32,765 byte come se fossero varchar. Pertanto funzioni come
        cast, lower, upper, trim e substring funzionano su questi BLOB, così
        come la concatenzione e l'assegnazione ai tipi carattere. Vedere <xref
        linkend="rnfb210-blbvchar" />.</para>

        <important>
          <title>Uso di SUBSTRING con i BLOB di testo</title>

          <para>Se il primo argomento della funzione SUBSTRING() è un BLOB di
          testo, riporta un BLOB e non più un VARCHAR.&lt;/para&gt;</para>
        </important>
      </section>
    </section>

    <section id="rnfb210-new-psql">
      <title>SQL Procedurale</title>

      <section id="rnfb210-new-domnvar">
        <title>Uso dei domini per definire variabili ed argomenti in
        PSQL</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Le variabili locali e
        gli argomenti di ingresso/uscita PSQL per le stored procedure possono
        essere ora dichiarate usando i domini invece dei tipi di dato
        canonici. Vedere <xref linkend="rnfb210-domainspsql" />.</para>
      </section>

      <section id="rnfb210-new-collt">
        <title>COLLATE nelle Stored Procedure e nei Parametri</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Ordinamenti
        lessicografici possono essere applicati agli argomenti e alle
        variabili PSQL. Vedere <xref linkend="rnfb210-psql-collt" />.</para>
      </section>

      <section id="rnfb210-impr-stktrc">
        <sectioninfo>
          <title>Miglioramenti nella gestione degli errori PSQL</title>

          <author>
            <firstname>V.</firstname>

            <surname>Khorsun</surname>
          </author>
        </sectioninfo>

        <para>
          <ulink
          url="http://tracker.firebirdsql.org/browse/CORE-970">Richiesta
          CORE-970</ulink>
        </para>

        <para><emphasis role="bold">(v.2.1)</emphasis> Negli errori PSQL
        adesso sono evidenziati anche linea e colonna in cui è avvenuto
        l'errore.</para>
      </section>
    </section>

    <section id="rnfb210-new-scrty">
      <title>Sicurezza</title>

      <section id="rnfb210-new-wintrusted">
        <title>Utenti autenticati attraverso la sicurezza di Windows</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Il sistema di
        validazione degli utenti di Windows può essere utilizzato per
        autenticare gli utenti Firebird su un server Windows. Vedere <xref
        linkend="rnfb210-wintrusted" />.</para>
      </section>
    </section>

    <section id="rnfb210-new-intl">
      <title>Supporto alle lingue internazionali</title>

      <section id="rnfb210-new-crtcolln">
        <title>Il comando CREATE COLLATION</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Il comando DDL
        <filename>CREATE COLLATION</filename> è stato introdotto per creare un
        ordinamento lessicografico, ovviando alla necessità di utilizzare uno
        script. Vedere <xref linkend="rnfb210-intl-crtcolln" />.</para>
      </section>

      <section id="rnfb210-new-unicolln">
        <title>Ordinamenti Unicode dovunque</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> Due nuovi ordinamenti
        Unicode possono essere applicati ad ogni set di caratteri usando un
        nuovo meccanismo. Vedere <xref
        linkend="rnfb210-intl-unicode" />.</para>
      </section>
    </section>

    <section id="rnfb210-new-plat">
      <title>Nuove piattaforme supportate</title>

      <section id="rnfb210-new-win64">
        <sectioninfo>
          <title>Windows 2003 64-bit</title>

          <author>
            <firstname>D.</firstname>

            <surname>Yemanov</surname>
          </author>
        </sectioninfo>

        <para><ulink
        url="http://tracker.firebirdsql.org/browse/CORE-819">Richieste
        CORE-819</ulink> e <ulink
        url="http://tracker.firebirdsql.org/browse/CORE-682">CORE-682</ulink></para>

        <para><emphasis role="bold">(v.2.1)</emphasis> La piattaforma a 64-bit
        Windows (AMD64 e Intel EM64T) è supportata per i modelli Classic,
        Superserver ed Embedded.</para>
      </section>
    </section>

    <section id="rnfb210-new-admn">
      <title>Amministrazione</title>

      <section id="rnfb210-new-mon">
        <title>Monitoraggio dei database attraverso SQL</title>

        <para><emphasis role="bold">(v.2.1)</emphasis> È stato implementato un
        sistema di monitoraggio in tempo reale (transazioni, tabelle, ecc.) in
        SQL attraverso nuove tabelle di sistema virtuali. Vedere <xref
        linkend="rnfb210-mon" />.</para>

        <para>Nel set di tabelle, ce n'è una chiamata MON$DATABASE che
        contiene molte delle informazioni contenute nell'header del database
        che non era possibile ottenere precedentemente in SQL: si tratta di
        informazioni quali versione della struttura su disco (ODS), il
        dialetto SQL, l'intervallo di sweep, OIT e OAT ed altro ancora.</para>

        <para>Si può utilizzare l'informazione ottenuta dalle tabelle di
        monitoraggio per cancellare una query interminabile. Vedere <xref
        linkend="rnfb210-mon-cnclqry" />.</para>
      </section>

      <section id="rnfb210-new-svrinfo">
        <title>Maggiori informazioni di contesto</title>

        <para>Nel contesto sono state aggiunte informazioni sulla versione del
        motore server, in modo da recuperarle attraverso una SELECT alla
        funzione RDB$GET_CONTEXT. Vedere <xref
        linkend="rnfb210-svrinfo" />.</para>
      </section>

      <section id="rnfb210-new-fbsvcmgr">
        <title>Nuovo programma di utilità a linea di comando: fbsvcmgr</title>

        <para><emphasis role="bold">(V.2.1)</emphasis> La nuova utility
        <firstterm>fbsvcmgr</firstterm> serve come interfaccia a linea di
        comando all'API di servizio, abilitando l'accesso ad ogni servizio
        eventualmente abilitato in Firebird.</para>

        <para>Sebbene ci siano molti strumenti di amministrazione che si
        interfacciano all'API di servizio attraverso un'interfaccia grafica,
        il nuovo strumento risolve il problema degli amministratori che devono
        accere sistemi Unix remoti in grandi reti attraverso un'interfaccia
        unicamente testuale. Precedentemente una tale richiesta richiedeva un
        programmatore. <link linkend="rnfb21-fbsvcmgr">Qui i
        dettagli</link>.</para>
      </section>
    </section>

    <section id="rnfb210-impr-netprot">
      <title>Interfaccia remota</title>

      <para><emphasis role="bold">(v.2.1)</emphasis> Il protocollo remoto è
      stato ampiamente migliorato per operqare meglio nelle reti lente dal
      momento stesso in cui i driver vengono aggiornati per utilizzare le
      modifiche. I controlli hanno mostrato una diminuzione di round trip API
      del 50% circa, con una diminuzione del 40% dei round trip TCP. Vedere
      <xref linkend="rnfb210-global-remote" />.</para>
    </section>

    <section id="rnfb20x-new-derived-tables">
      <sectioninfo>
        <title>Tabelle derivate</title>

        <author>
          <firstname>A.</firstname>

          <surname>Brinkman</surname>
        </author>
      </sectioninfo>

      <para>Il supporto per le tabelle derivate in DSQL (cioè subqueries nella
      clausola FROM) come definite nello standard SQL200X. Una tabella
      derivata è un set derivato da uno statement dinamico di SELECT. Le
      tabelle derivate possono essere innestate, se necessario, per costruire
      query ancora più complesse e possono far parte di JOIN come se fossero
      normali tabelle o viste.</para>

      <para>Altri detttagli in <xref linkend="rnfb20x-dml-derived-tables" />
      nel capitolo relativo al DML.</para>
    </section>

    <section id="rnfb20x-new-explicit-cursors">
      <sectioninfo>
        <title>Supporto PSQL ai cursori nominativi</title>

        <author>
          <firstname>D.</firstname>

          <surname>Yemanov</surname>
        </author>
      </sectioninfo>

      <para>Sono supportati più cursori nominativi (cioè espliciti) in PSQL e
      nello statement DSQL EXECUTE BLOCK. Altre informazioni nel capitolo sul
      PSQL <xref linkend="rnfb20x-psql-cursors" />.</para>
    </section>

    <section id="rnfb20x-new-win-protocol">
      <sectioninfo>
        <title>Rifatto il protocollo su Windows</title>

        <author>
          <firstname>D.</firstname>

          <surname>Yemanov</surname>
        </author>
      </sectioninfo>

      <para>Sono state fatte due modifiche sostanziali al protocollo in
      Windows.</para>

      <section id="rnfb20x-new-win-protocol-xnet">
        <title>Protocollo Locale--XNET</title>

        <para>Firebird 2.0 ha modificato la precedente implementazione del
        protocollo di trasporto locale (spesso chiamata IPC oppure IPServer)
        con una completamente nuova, chiamata XNET.</para>

        <para>Ha esattamente lo stesso obiettivo, permettere un modo
        efficiente di collegare un server locato sulla stessa macchina del
        client senza l'uso di un nodo remoto nella stringa di connessione. La
        nuova implementazione è differente e risolve tutti i problemi noti del
        precedente sistema.</para>

        <para>Come il vecchio IPServer, anche XNET usa memoria condivisa per
        la comunicazione fra processi. Tuttavia XNET elimina l'uso di messaggi
        window per inviare richieste di connessione ed inoltre implementa una
        diversa logica di sincronizzazione.</para>

        <section id="rnfb20x-new-win-protocol-xnet-benefits">
          <title>Benefici di XNET rispetto IPServer</title>

          <para>Oltre a dare un protocollo di comunicazione più robusto, XNET
          porta con sé alcuni evidenti benefici effetti:</para>

          <itemizedlist>
            <listitem>
              <para>funziona col Classic Server</para>
            </listitem>

            <listitem>
              <para>funziona con servizi non interattivi e le sessioni
              terminali</para>
            </listitem>

            <listitem>
              <para>elimina i blocchi quando vengono tentate una certo numero
              di connessioni contemporanee</para>
            </listitem>
          </itemizedlist>
        </section>

        <section id="rnfb20x-new-win-protocol-xnet-perf">
          <title>Prestazioni</title>

          <para>Ci si aspetta che XNET sia un po' più veloce di IPServer, o al
          peggio uguale.</para>
        </section>

        <section id="rnfb20x-new-win-protocol-xnet-disadv">
          <title>Svantaggi</title>

          <para>L'unico svantaggio è che sono fra loro incompatibili. Questo
          fa sì che la versione di fbclient.dll dbba per forza essere identica
          alla versione del server che si stà usando (fbserver.exe o
          fb_inet_server.exe). Non è possibile instaurare una connessione
          locale se questo dettaglio viene ignorato. (Una connessione TCP
          localhost attraverso tra client e server disaccoppiati risolve il
          problema, naturalmente).</para>
        </section>
      </section>

      <section id="rnfb20x-new-win-protocol-wnet"
               xreflabel="Change to WNET Protcol">
        <title>Modifiche al protocollo WNET (<quote>NetBEUI</quote>)</title>

        <para>Il protocollo WNET (noto anche come NetBEUI) non permette più la
        personificazione del client.</para>

        <para>In tutte le precedenti versioni di Firebird, le richieste remote
        attraverso WNET venivano eseguite nel contesto di un <firstterm>client
        security token</firstterm>. Poichè il server soddisfa ogni connessione
        in accordo alle sue credenziali di sicurezza, questo significa che, se
        la macchina client è in un sistema operativo interno ad un dominio NT,
        quell'utente dovrebbe avere permessi fisici appropriati per accedere
        al file del database, alle librerie UDF, ecc, nel sistema di file del
        server. Questa situazione è contraria a quanto generalmente viene
        visto come un appropriata impostazione per proteggere i database in un
        sistema client-server.</para>

        <para>Tale personificazione è stata rimossa nelle connessioni WNET in
        Firebird 2.0, che adesso sono veramente client-server e funzionano
        allo stesso modo di quelle TCP, cioè non fanno nessuna assunzione
        riguardo ai diritti del di sistema dell'utente.</para>
      </section>
    </section>

    <section id="rnfb20x-new-garbage-collect">
      <sectioninfo>
        <title>Rielaborazione del sistema di Garbage Collection</title>

        <author>
          <firstname>V.</firstname>

          <surname>Khorsun</surname>
        </author>
      </sectioninfo>

      <para>Fin da prima di Firebird 1.0, il motore Superserver eseguiva un
      sistema di <emphasis>background garbage collection</emphasis> (un
      processo per il recupero della memoria non più utilizzata), gestendo
      informazioni su ogni nuova versione dei record prodotta da una frase
      UPDATE o DELETE. Nel momento stesso in cui la vecchia versione non
      risultava più <quote>interessante</quote>, cioè diventava più vecchia
      della più vecchia transazione snapshot (Oldest Snapshot, si vede
      nell'output del comando <emphasis>gstat -header</emphasis>) il motore
      segnala al sistema di recupero di rimuoverla o, in altre parole, di
      liberare la memoria che prima era occupata dalla versione del
      record.</para>

      <para>Il motore Classic e le versioni di Interbase precedenti la 6.0
      avevano un altro sistema di Garbage Collection, noto come
      <emphasis>garbage collection cooperativo</emphasis>. Questo sistema,
      cioè il GC cooperativo, ha la necessità di rileggere le pagine
      contenenti le versioni dei record non più interessanti attraverso un
      <literal>SELECT COUNT(*) FROM aTable</literal> oppure altre query di
      scansione di tabella da parte di un utente. Il GC in background non ha
      questa necessità; inoltre risolve il problema di recuperare la memoria
      per quelle pagine che vengono lette raramente.</para>

      <para>Uno sweep, naturalmente, troverebbe queste versioni dei record non
      utilizzate e le cancellerebbe, ma questo non accade necessariamente a
      breve termine. Un ulteriore beneficio è la riduzione di I/O, a causa
      dell'alta probabilità che le pagine richieste risiedano già nella
      memoria cache.</para>

      <para>Tra il momento in cui il motore notifica al garbage collector
      l'esistenza di pagine che contengono versioni non più usate ed il
      momento che il garbage collector riesca a leggere quella pagina, una
      nuova transazione potrebbe aggiornare uno dei record contenuti. Il
      garbage collector non può pulire il record se questo numero di
      transazione successivo è maggiore dell'Oldest Snapshot oppure è ancora
      attivo. Il motore poi notifica ancora al garbage collector lo stesso
      numero di pagina, sovrascrivendo la precedente notifica e pertanto la
      pulizia dovrà essere fatta in un tempo successivo.</para>

      <para>In Firebird 2.0 Superserver, sono possibili contemporaneamente sia
      il GC cooperativo che quello in background. Per gestirli, è stato
      introdotto un nuovo parametro di configurazione
      <emphasis>GCPolicy</emphasis> che può essere impostato a:</para>

      <itemizedlist>
        <listitem>
          <para>cooperative - il garbage collector viene gestito solamente in
          modo cooperativo (come nel Classic) ed il motore non tiene traccia
          delle vecchie versioni dei record. Questo riporta il funzionamento
          del GC a quello di IB 5.6. È l'unica opzione per la versione
          Classic.</para>
        </listitem>

        <listitem>
          <para>background - il garbage collector viene gestito solo da
          threads in background, come nel caso di Firebird 1.5 e precedenti.
          Le scansioni di tabelle da parte dell'utente non rimuovono le
          versioni dei record non più usate ma provocano la notifica al thread
          di GC di ogni pagina dove viene trovato una versione di record non
          più usata. Il motore inoltre ricorda quei numeri di pagina dove le
          frasi di UPDATE e DELETE hanno creato delle versioni
          obsolete.</para>
        </listitem>

        <listitem>
          <para>combined (l'installazione default per Superserver) - sono
          attivi sia il GC in background che il cooperativo.</para>
        </listitem>
      </itemizedlist>

      <note>
        <para>Il server di tipo Classic ignora questo parametro e lavora
        sempre in modalità <quote>cooperativa</quote>.</para>
      </note>
    </section>

    <section id="rnfb20x-new-serv-api">
      <sectioninfo>
        <title>Completamento della API di servizio al motore Classic</title>

        <author>
          <firstname>N.</firstname>

          <surname>Samofatov</surname>
        </author>
      </sectioninfo>

      <para>È stato completato il porting delle API di servizio alla
      architettura Classic. Sono pertanto disponibili tutte le funzioni API
      sia su Linux che su Windows per i server Classic, senza limitazione
      alcuna. Sono state eliminate pure tutte le problematiche note riguardo
      agli errori di <emphasis>gsec</emphasis> riportate nelle precedenti
      versioni di Firebird.</para>
    </section>

    <section id="rnfb20x-new-lock-timeout">
      <sectioninfo>
        <title>Scadenza del tempo di blocco nelle WAIT Transactions</title>

        <author>
          <firstname>A.</firstname>

          <surname>Karyakin, D. Yemanov</surname>
        </author>
      </sectioninfo>

      <para>Tutte le versioni di Firebird hanno due modi di attesa per le
      transazioni: <firstterm>NO WAIT</firstterm> e
      <firstterm>WAIT</firstterm>. Il modo NO WAIT significa che i conflitti
      di blocco e di abbraccio mortale (deadlock) sono riportati
      immediatamente, mentre con WAIT la transazione attende bloccata finchè
      le transazioni concorrenti finiscono venendo confermate (commit) o
      rinunciate (rolled back).</para>

      <para>Questa nuova caratteristica estende la modalità WAIT permettendo
      di impostare un tempo finito di attesa delle transazioni concorrenti.
      Alla scadenza del tempo viene riportato un errore
      (isc_lock_timeout).</para>

      <para>Gli intervalli di attesa sono specificati a livello di
      transazione, usando la nuova costante TPB
      <firstterm>isc_tpb_lock_timeout</firstterm> nell'API oppure, in DSQL, la
      clausola <firstterm>LOCK TIMEOUT &lt;value&gt;</firstterm> della frase
      SET TRANSACTION.</para>
    </section>

    <section id="rnfb20x-new-search-ops">
      <sectioninfo>
        <title>Nuova implementazione degli operatori di ricerca nelle
        stringhe</title>

        <author>
          <firstname>N.</firstname>

          <surname>Samofatov</surname>
        </author>
      </sectioninfo>

      <orderedlist>
        <listitem>
          <para>Gli operatori ora operano correttamente con i BLOB di ogni
          dimensione. Sono stati rimossi tutti i problemi noti al riguardo
          (ricerca solo nel primo segmento, ricerche mancate perchè a cavallo
          di segmenti).</para>
        </listitem>

        <listitem>
          <para>Il riconoscimento delle strimghe ora usa l'algoritmo a passo
          singolo Knuth-Morris-Pratt, migliorando le prestazioni quando
          vengono adoperati campioni di ricerca complessi.</para>
        </listitem>

        <listitem>
          <para>Il motore non crepa più quando si usa NULL come carattere di
          ESCAPE nell'operatore LIKE</para>
        </listitem>
      </orderedlist>
    </section>

    <section id="rnfb20x-new-updatable-views">
      <sectioninfo>
        <title>Rifacimento delle viste aggiornabili</title>

        <author>
          <firstname>D.</firstname>

          <surname>Yemanov</surname>
        </author>
      </sectioninfo>

      <para>Un rifacimento è stato fatto per risolvere i problemi relativi
      alle viste che sono implicitamente aggiornabili, ma mantengono ancora
      dei trigger di update. Questa è un'importante modifica che influenza i
      sistemi con procedure scritte per avvantaggiarsi di una (dis)funzione
      non documentata delle precedenti versioni.</para>

      <para>Per i dettagli, vedere nelle note nel capitolo riguardo alla
      compatibilità nel documento separato delle Note di Installazione.</para>
    </section>

    <section id="rnfb20x-new-shutdown-modes">
      <sectioninfo>
        <title>Introduzione di modalità addizionali di spegnimento</title>

        <author>
          <firstname>N.</firstname>

          <surname>Samofatov</surname>
        </author>
      </sectioninfo>

      <para>Sono stati implementate le modalità Single-user (utente singolo) e
      full shutdown (spegnimento completo) usando il nuovo parametro
      <firstterm>[state]</firstterm> per i comandi <function>gfix
      -shut</function> e <function>gfix -online</function>.</para>

      <para>
        <emphasis role="bold">Sintassi attuale</emphasis>
      </para>

      <programlisting>
    gfix &lt;command&gt; [&lt;state&gt;] [&lt;options&gt;]
    &lt;command&gt;&gt; ::= {-shut | -online}
    &lt;state&gt; ::= {normal | multi | single | full}
    &lt;options&gt; ::= {-force &lt;timeout&gt; | -tran | -attach}
    </programlisting>

      <itemizedlist>
        <listitem>
          <para><emphasis>normal</emphasis> state = il database è in
          linea</para>
        </listitem>

        <listitem>
          <para><emphasis>multi</emphasis> state = modalità spegnimento multi
          utente (quello usuale, sono permesse connessioni multiple di SYSDBA
          o del proprietario)</para>
        </listitem>

        <listitem>
          <para><emphasis>single</emphasis> state = spegnimento single-user
          (solo una connessione viene permessa, usata dal processo di
          recupero)</para>
        </listitem>

        <listitem>
          <para><emphasis>full</emphasis> state = spegnimento completo o
          esclusivo (non viene permessa alcuna connesione)</para>
        </listitem>
      </itemizedlist>

      <para>Per ulteriori dettagli, vedere la sezione su Gfix in <xref
      linkend="rnfb20x-util-gfix-shut" />, nel capitolo dei programmi di
      utilità.</para>

      <para>Per una lista dei simboli di stato di spegnimento ed esempi di di
      uso, vedere <xref linkend="rnfb20x-apiods-api-dpb-shutdown" />.</para>
    </section>

    <section id="rnfb20x-new-udf">
      <sectioninfo>
        <title>Migliorata la gestione dei NULL nelle UDF</title>

        <author>
          <firstname>C.</firstname>

          <surname>Valderrama</surname>
        </author>
      </sectioninfo>

      <section id="rnfb20x-new-udf-null">
        <title>Passare un NULL SQL</title>

        <itemizedlist>
          <listitem>
            <para>Possibilità di passare un NULL SQL attraverso un puntatore
            NULL (vedere <xref linkend="rnfb20x-udf-nullpointer" />).</para>
          </listitem>

          <listitem>
            <para>Le funzioni esterne della libreria ib_udf sono state
            aggiornate così da permettere alle funzioni stringa ASCII_CHAR,
            LOWER, LPAD, LTRIM, RPAD, RTIM, SUBSTR e SUBSTRLEN di riporare un
            NULL e di interpretarlo correttamente nei parametri.</para>

            <para>Lo script <function>ib_udf_upgrade.sql</function> può essere
            applicato ai database precedenti alla versione 2.0 che hanno
            queste funzioni dichiarate, per aggiornarne la dichiarazione in
            modo da funzionare con le nuove versioni della libreria. Questo
            script deve essere usato solo usando la nuova libreria ib_udf con
            Firebird 2.* e le chiamate dovranno essere modificate per gestire
            i null.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>

    <section id="rnfb20x-new-concat-checking">
      <sectioninfo>
        <title>Controllo in Run-time per il sovradimensionamento in
        concatenazione</title>

        <author>
          <firstname>D.</firstname>

          <surname>Yemanov</surname>
        </author>
      </sectioninfo>

      <para>Il controllo per il sovradimensionamento nella concatenazione di
      stringhe è stato spostato dalla fase di compilazione alla fase di
      run-time.</para>

      <para>A partire da Firebird 1.0, le operazioni di concatenazione vengono
      controllate per evitare che la stringa risultante possa superare il
      limite di circa 32,000 bytes, cioè un sovradimensionamento (overflow).
      Questo controllo veniva effettuato durante la fase di preparazione dello
      statement, usando le dimensioni dichiarate degli operandi ed avrebbe
      dato errore per una espressione dl tipo:</para>

      <programlisting>
  CAST('qwe' AS VARCHAR(30000)) || CAST('rty' AS VARCHAR(30000))
    </programlisting>

      <para>A partire da Firebird 2.0, questa espressione lancia solo
      un'avvertenza (warning) durante la fase di preparazione ed il controllo
      di sovradimensionamento viene ripetuto all'esecuzione, usando la
      dimensione dgli operandi reali. Il risultato permette all'esempio di
      essere eseguito senza errori. L'eccezione
      <firstterm>isc_concat_overflow</firstterm> viene ora pertanto lanciata
      solo per i sovradimensionamenti reali, riportando pertanto il
      funzionamento della loro rilevazione simile a quella delle operazioni
      aritmetiche.</para>
    </section>

    <section id="rnfb20x-new-synchro-logic">
      <sectioninfo>
        <title>Modifiche alla logica di sincronizzazione</title>

        <author>
          <firstname>N.</firstname>

          <surname>Samofatov</surname>
        </author>
      </sectioninfo>

      <para>(N.d.T. quanto segue è veramente tecnico anche in lingua
      originale. Di solito rinuncio a tradurre tali termini quando sono così
      per addetti ai lavori.)</para>

      <orderedlist>
        <listitem>
          <para>È stata ridotta significativamente la lock contention nel lock
          manager e nel SuperServer thread pool manager.</para>
        </listitem>

        <listitem>
          <para>È stata trovata e corretta una rara condizione di deriva che
          poteva bloccare il Superserver nel processare le richieste fino
          all'arrivo di una <!--ho aggiunto la parola "nuova" altrimenti non si capisce-->nuova
          successiva richiesta.</para>
        </listitem>

        <listitem>
          <para>I memory dump del lock manager danno maggiori informazioni e
          OWN_hung viene correttamente recepito.</para>
        </listitem>

        <listitem>
          <para><!--Il termine decoupling tradotto con disaccoppiamento: verificare-->È
          stato implementato il disaccoppiamento degli oggetti di
          sincronizzazione del lock manager per le differenti instanze del
          motore.</para>
        </listitem>
      </orderedlist>
    </section>

    <section id="rnfb20x-new-sixty-four-bit">
      <sectioninfo>
        <title>Supporto alle piattaforme a 64-bit</title>

        <author>
          <firstname>A.</firstname>

          <surname>Peshkov, N. Samofatov</surname>
        </author>
      </sectioninfo>

      <title />

      <para>Firebird 2.0 supporta le piattaforme a 64-bit.</para>
    </section>

    <section id="rnfb20x-new-record-enumerators">
      <sectioninfo>
        <title>Aumentati i limiti di conteggio dei record</title>

        <author>
          <firstname>N.</firstname>

          <surname>Samofatov</surname>
        </author>
      </sectioninfo>

      <para>È stato introdotto il conteggio dei record a 40-bit (64-bit
      internamente) per superare il limite di circa 30GB per tabella imposto
      dal precedente limite a 32-bit.</para>
    </section>

    <section id="rnfb20x-new-debug">
      <sectioninfo>
        <title>Miglioramenti per il debugging</title>

        <author>
          <firstname>Contributi Vari</firstname>
        </author>
      </sectioninfo>

      <section id="rnfb20x-new-debug-bugcheck">
        <title>Migliorati i rapporti da Bugcheck</title>

        <para>I messaggi di log BUGCHECK ora includono il nome del file ed il
        numerod di linea sorgente. (A. Brinkman)</para>
      </section>

      <section id="rnfb20x-new-debug-struc-reports">
        <title>Aggiornato il rapporto della struttura interna</title>

        <para>Sono state aggiornate le procedure che stampano le varie
        strutture interne (DSQL node tree, BLR, DYN, ecc). (N.
        Samofatov)</para>
      </section>

      <section id="rnfb20x-new-debug-logging">
        <title>Nuovi strumenti per il log di debug</title>

        <para>Sono state implementate procedure di utilità thread-safe e
        signal-safe per il debug. (N. Samofatov)</para>
      </section>

      <section id="rnfb20x-new-debug-diagnos">
        <title>Miglioramenti nella diagnostica</title>

        <para>I messaggi di Syslog vengono copiate alla tty dell'utente se c'è
        attaccato un processo. (A. Peshkov)</para>
      </section>
    </section>

    <section id="rnfb20x-new-connx">
      <sectioninfo>
        <title>Migliorata la gestione delle connessioni su Superserver
        POSIX</title>

        <author>
          <firstname>A.</firstname>

          <surname>Peshkov</surname>
        </author>
      </sectioninfo>

      <para>Le versioni per Posix SS ora gestiscono SIGTERM e SIGINT per
      chiudere tutte le connessioni in modo corretto e non brusco. (A.
      Peshkov)</para>
    </section>

    <section id="rnfb20x-new-invariant">
      <sectioninfo>
        <title>Rifatta la gestione degli invarianti in PSQL</title>

        <author>
          <firstname>N.</firstname>

          <surname>Samofatov</surname>
        </author>
      </sectioninfo>

      <para>Il tracciamento degli invarianti è quel processo eseguito dal
      compilatore BLR e dall'ottimizzatore per decidere se una certa
      espressione (come potrebbe essere una subquery interna) è "invariante",
      cioè indipendente dal contesto principale. Viene usato per eseguire una
      unica valutazione di tali espressioni e di riutilizzare i risultati
      senza ricalcolarli.</para>

      <para>La gestione del tracciamento degli invarianti in PSQL e la logica
      di duplicazione delle richieste sono state rifatte per risolvere un
      certo numero di problemi con le procedure recursive, ad esempio SF bug
      #627057.</para>

      <para>Se alcune invarianti sfuggono alla determinazione, c'è una perdita
      di prestazioni. Se alcune variabili sono trattate come invarianti, si
      ottengono risultati errati.</para>

      <para>
        <emphasis role="bold">Esempio</emphasis>
      </para>

      <programlisting>
  select * from rdb$relations
    where rdb$relation_id &lt;
      ( select rdb$relation_id from rdb$database )
    </programlisting>

      <para>Questa query esegue solo una lettura da rdb$database invece di
      valutare la subquery per ogni riga di rdb$relations.</para>
    </section>

    <section id="rnfb20x-new-rb-retain">
      <sectioninfo>
        <title>Supporto per la sintassi ROLLBACK RETAIN</title>

        <author>
          <firstname>D.</firstname>

          <surname>Yemanov</surname>
        </author>
      </sectioninfo>

      <para>Firebird 2.0 aggiunge un opzionale <literal>clausola
      RETAIN</literal> allo statement DSQL <literal>ROLLBACK</literal> per
      renderlo simmetrico al COMMIT [RETAIN].</para>

      <para>Vedere <xref linkend="rnfb20x-dml-rb-retain" /> nel capitolo sul
      DML.</para>
    </section>

    <section id="rnfb20x-new-rootfind">
      <sectioninfo>
        <title>Nei server Win32 non viene più letta la Registry</title>

        <author>
          <firstname>D.</firstname>

          <surname>Yemanov</surname>
        </author>
      </sectioninfo>

      <para>La ricerca del direttorio radice è stata modificata in modo tale
      che i processi server su Windows non cercano più di leggere la
      Registry.</para>

      <important>
        <para>Le utilità a linea di comando leggono e controllano ancora la
        Registry.</para>
      </important>
    </section>

    <section id="rnfb20x-new-optimiz">
      <sectioninfo>
        <title>Altri miglioramenti all'ottimizzatore</title>

        <author>
          <firstname>A.</firstname>

          <surname>Brinkman</surname>
        </author>
      </sectioninfo>

      <para>Nelle procedure dell'ottimizzatore sono stati migliorati i calcoli
      per la scelta degli indici.</para>
    </section>
  </section>
</chapter>