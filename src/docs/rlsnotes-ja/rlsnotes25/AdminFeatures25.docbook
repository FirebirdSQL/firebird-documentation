  <chapter id="rnfb25-admin">
    <chapterinfo>
      <title>管理機能</title>
    </chapterinfo>
    <para>Firebirdの管理機能にいくつか改善が施されました。多くの皆さんがこれを歓迎するでしょう。</para>

    <section id="rnfb25-prvlgs" xreflabel="RDB$ADMIN Role"><!-- Level 1 section -->
      <sectioninfo>
        <title>新しいシステムロールRDB$ADMIN</title>
        <author>
          <firstname>Alex</firstname>
          <surname>Peshkov</surname>
        </author>
      </sectioninfo>
      <para>新たな定義済みシステムロールRDB$ADMINが追加され、SYSDBA権限を他のユーザーに譲渡できるようになりました。どのユーザーでも、特定のデータベースでこのロールが付与された場合、その指定されたロールRDB$ADMINを持つデータベースにアタッチする際にSYSDBAと同様の権限を手にします。</para>

      <para>これを割り当てるには、SYSDBAはそのデータベースにログインしている必要がありますが、ロールRDB$ADMINをユーザーに付与する方法は、他のロールをユーザーに付与する仕方と同様です。このロールを付与されたユーザーが、そのデータベースでの<quote>スーパーユーザー</quote>権限にアクセスするためには、ログイン時にこれを明記する必要があります。</para>

      <important>
        <para>ユーザーがアタッチする際に、ユーザー・データベース・ロールがDPB（接続パラメータ）に渡されている場合、これをRDB$ADMINと置き換えることはできません。つまりこの場合、SYSDBA権限を得ることはできません。</para>
      </important>

      <para>次に挙げる例では、SYSDBA権限がユーザー（User1とAdmins\ADMINS）に譲渡されています。このうち二番目のユーザーは、<quote>信頼された認証</quote>を介してアクセスが有効とされたWindowsシステムユーザーとして典型的なものです：</para>

      <programlisting>
GRANT RDB$ADMIN TO User1;
GRANT RDB$ADMIN TO "Admins\ADMINS";
      </programlisting>

      <section id="rnfb25-prvlgs-multi"><!-- Level 2 section -->
        <title>複数のデータベースとスーパーユーザー</title>
        <para>RDB$ADMINロールが割り当てられている場合でも通常のユーザーがSYSDBAになるわけではないということは理解しておくべきです。正確には、<emphasis>あるデータベースでユーザーにこのロールが付与されている時、そのユーザーはデータベース内の</emphasis>オブジェクトに対してSYSDBAと同等の権限を与えられている、ということです。</para>

        <itemizedlist>
          <listitem>
            <para>同じユーザーに複数のデータベースでのスーパーユーザー権限が必要な場合、そのユーザーに対するロールRDB$ADMINは、<emphasis>それぞれの</emphasis>データベースについて明示的に付与されなければなりません。</para>
          </listitem>
          <listitem>
            <para>一つのデータベースに対して複数のユーザーにスーパーユーザー権限を持たせたい場合、それぞれのユーザーにロールRDB$ADMINを付与する必要があります。</para>
          </listitem>
          <listitem>
            <para>ユーザーがあるデータベースのロールRDB$ADMINに属している場合、これを他のユーザーに付与することができます。</para>
          </listitem>
          <listitem>
            <para>WITH ADMIN OPTION（このロールを他のユーザーに付与する権限のために）や、WITH GRANT OPTION（オブジェクトの所有者であることなしに他のユーザーにそれらのオブジェクトに対するパーミッションを付与する権限のために）を指定する必要はありません。ADMINやGRANTオプションは暗に含まれています。</para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="rnfb25-prvlgs-suprusr"><!-- Level 2 section -->
        <title>システム <quote>スーパーユーザー</quote></title>
        <para>POSIXホストではrootユーザーが常にSYSDBA権限を持っていますが、このことは、Firebird 2.1まで、Windowsのドメイン管理者には当てはまりませんでした。バージョン2.1で設定パラメータ<firstterm>Authentication</firstterm>が導入されたことにより、Windowsドメイン管理者としてログインしているユーザーは、<quote>信頼されたユーザー認証</quote>を通して、自動的にSYSDBA権限でサーバーにアクセスできるようになりました。POSIX版ではこの仕組みに変更はありませんが、Windows版では、ロールRDB$ADMINの導入により、WindowsのAdministratorsがSYSDBA権限を得る方法が変更されました。</para>

        <important>
          <title>Windowsの<quote>信頼されたユーザー認証</quote>が、デフォルトでは利用できなくなりました！</title>
          <para>デフォルトでは、<filename>firebird.conf</filename>の<firstterm>Authentication</firstterm>パラメータは<firstterm>native</firstterm>に設定されています。<quote>信頼されたユーザー認証</quote>を有効にするには、<firstterm>trusted</firstterm>か<firstterm>mixed</firstterm>へと明示的に設定しなければなりません。</para>
        </important>


        <section id="rnfb25-prvlgs-win"><!-- Level 3 section -->
          <title>WindowsのAdministrators向けのグローバル管理者権限</title>

          <para><quote>信頼されたユーザー認証</quote>が設定されているFirebirdサーバーで、信頼されたドメイン管理者がSYSDBAアクセス権限を得るには、ドメイン管理者はロールRDB$ADMINに属している必要があります。通常のユーザー向けとして上で解説した<link linkend="rnfb25-prvlgs">手動による方法</link>を使い、データベースごとにそれぞれ特定の管理者にロールRDB$ADMINを付与します。</para>
          <para>しかし、SYSDBAがサーバーを設定することで、Windows管理者が任意のデータベースにログインする時にロールRDB$ADMINが自動的にマッピングされるようにする方法があり、これによって、POSIXシステムでroot権限を持つユーザーがSYSDBA権限と関連付けられているのと同様の状況にすることができます。新しいALTER ROLE文はこの目的のため（だけ）に用いられます。</para>

          <section id="rnfb25-prvlgs-automap-altrole"><!-- Level 4 section -->
            <title>ALTER ROLE文</title>
            <para><quote>信頼されたユーザー認証</quote>が有効になっているWindowsサーバーで、ロールRDB$ADMINを管理者に自動的にマッピングするようにデータベースを設定するには、SYSDBAは、任意のデータベースにログインし、以下のSQL文を発行します：</para>

            <programlisting>
ALTER ROLE RDB$ADMIN
  SET AUTO ADMIN MAPPING;
            </programlisting>

            <para>デフォルト設定に戻して管理者が自動的にはSYSDBA権限を得ないようにするには、次のSQL文を発行します：</para>
            <programlisting>
ALTER ROLE RDB$ADMIN
  DROP AUTO ADMIN MAPPING;
            </programlisting>
          </section><!-- 4 -->

          <section id="rnfb25-prvlgs-automap-api"><!-- Level 4 section -->
            <title>サービスAPIタグアイテム</title>
            <para>同様の効果はサービスAPIに用意された二つのタグアイテムでサポートされます：自動マッピングを有効にする<command>isc_action_svc_set_mapping</command>とそれを無効にする<command>isc_action_svc_drop_mapping</command>です。</para>
            <para>これらのタグは<emphasis>fbsvcmgr</emphasis>ユーティリティでサポートされています。</para>
          </section><!-- 4 -->
        </section><!-- 3 -->
      </section><!-- 2 -->

      <section id="rnfb25-prvlgs-super"><!-- Level 2 section -->
        <title>ユーザー管理用に拡大するRDB$ADMINの範囲</title>
        <para>新しいDDLコマンド<command>ALTER USER</command>により、<quote>通常の</quote>ユーザー（普通のFirebirdユーザーやPOSIX上での非rootユーザー、または<quote>信頼されたユーザー認証</quote>が有効になっているWindowsシステム上で信頼されたユーザー）が、任意のデータベースにログインしている間、パスワードおよび／または個人名要素を変更できるようになります。スーパーユーザーは、同じコマンドを使ってユーザーの作成と削除を行うこともできます。この新しいコマンドの詳細については、<emphasis>データ定義言語</emphasis>の章の<link linkend="rnfb25-ddl-crtusr">CREATE/ALTER/DROP USER</link>の項を参照して下さい。</para>

        <para><firstterm>security2.fdb</firstterm>はODS 11.2データベースとして（アップグレードが必要な場合もあります）作成されるので、ここにも定義済みロールRDB$ADMINがあります。どのユーザーも&mdash;SYSDBAでさえも&mdash;セキュリティ・データベースにログインすることができないため、SYSDBAまたはスーパーユーザーが、ユーザーの作成・削除する権限が必要な通常のユーザーに対して<firstterm>security2.fdb</firstterm>のロールRDB$ADMINを適用できるという代替手段が提供されています。これには三つの方法があり、それぞれ同等の効果を持ちます。</para>

        <orderedlist>
          <listitem>
            <para>CREATE USERまたはALTER USER文でオプションパラメータGRANT ADMIN ROLEを使う。</para>

            <note>
              <title>注意</title>
              <para>この場合のGRANT ADMIN ROLEやREVOKE ADMIN ROLEがGRANT／REVOKE文ではなく、CREATE USERやALTER USER文に対する3キーワードパラメータであることに注意して下さい。'ADMIN'という名のシステムロールは存在しません。</para>
              <para>データベースのロールRDB$ADMINを手にしている任意のユーザーは暗黙のうちに拡張権限WITH ADMIN OPTIONとWITH GRANT OPTIONを手にしています。</para>
            </note>

            <para><emphasis role="bold">例</emphasis></para>

            <para>セキュリティ・データベースでユーザー<emphasis>alex</emphasis>にロールRDB$ADMINを付与する場合：</para>
            <literallayout>
      ALTER USER alex GRANT ADMIN ROLE;
            </literallayout>

            <para>セキュリティ・データベースでユーザー<emphasis>alex</emphasis>からロールRDB$ADMINを取り消す場合：</para>
            <literallayout>
      ALTER USER alex REVOKE ADMIN ROLE;
            </literallayout>

            <para>すべてのデータベースでユーザー<emphasis>alex</emphasis>を削除しその権限も削除する場合：</para>
            <literallayout>
      DROP USER alex;
            </literallayout>
          </listitem>

          <listitem>
            <para><emphasis>gsec</emphasis>ユーティリティに<command>-admin</command>スイッチを付けて使用します。このスイッチは引数を一つ取ります：YESの場合、ロールRDB$ADMINがユーザーに適用されます。NOの場合、このロールは取り消されます。詳細は、<emphasis>ユーティリティ</emphasis>の章の<emphasis>gsec</emphasis>の節の<link linkend="rnfb25-util-gsec-adminrole">ロールRDB$ADMINを通常のユーザーに付与する</link>の項を参照して下さい。</para>
          </listitem>

          <listitem>
            <para>SPBパラメータ<command>isc_spb_sec_admin</command>を使います。これは<emphasis>security2.fdb</emphasis>で通常のユーザーにロールRDB$ADMINをSPB接続を介して割り当てる実装です。詳細については、<emphasis>Firebird APIとODSの変更</emphasis>の章の<link linkend="rnfb25-apiods-api-spbadmingrant">Parameter isc_spb_sec_admin</link>の項に記載されています。</para>
            <para><emphasis>fbsvmgr</emphasis>ユーティリティもこのパラメータの使用をサポートしています。</para>
          </listitem>
        </orderedlist>
        <tip>
          <para>Firebird 2.5では、サーバーに複数のセキュリティ・データベースを作成することはできません。バージョン3.0以降は、データベースごとに個別のセキュリティ・データベースを持てるようになる予定です。現状では、サーバー上の任意のデータベース（<firstterm>employee.fdb</firstterm>も含め）に接続するごとに唯一の<firstterm>security2.fdb</firstterm>が更新されることになります。</para>
          <para>将来的に、これらのリクエストは影響を受ける各セキュリティ・データベースに対応するデータベースから送信することが必須となります。</para>
        </tip>
      </section><!-- 2 -->
    </section><!-- 1 -->

    <section id="rnfb25-trace"><!-- Level 1 section -->
      <sectioninfo>
        <title>トレースと監査サービス</title>
        <author>
          <firstname>Vlad</firstname>
          <surname>Khorsun</surname>
        </author>
      </sectioninfo>
      <para>バージョン2.5での新しいトレースと監査の機能は、当初、Nickolay Samofatov氏によってコントリビュートされたTraceAPIから開発されました。これはFirebirdコードをベースとする商業製品Red Soft Database用に彼が開発したものです。</para>

      <section id="rnfb25-trace-oview"><!-- Level 2 section -->
        <title>機能の概要</title>
        <para>新しいトレースと監査の機能は、SQL文の実行、接続、切断など、エンジン内で実行されるさまざまなイベントのログを取り、照合して、対応するパフォーマンス特性のリアルタイムな分析に使うことができます。</para>
        <para>トレースは、<firstterm>トレース・セッション</firstterm>の文脈で起こります。それぞれのトレース・セッションが固有の設定、ステート、出力を持ちます。</para>

	<para>Firebirdエンジンはトレース可能なイベントの固定リストを持ちます。<firstterm>システム監査トレース</firstterm>と<firstterm>ユーザートレース</firstterm>という、二つの異なる種類のトレースを実行できます。エンジンがどのようにセッション用のイベントのリストを作成するかは、どのトレースが要求されているかによります。</para>
        <tip>
          <para>全てのトレースセッションに一意なセッションIDが割り当てられます。任意のトレースセッションが始まると、サービスマネージャはこのIDをメッセージとして出力します。</para>
          <literallayout class="monospaced">
  Trace session ID nnnn started
          </literallayout>
          <para>もちろん、ここでの<command> nnnn </command>はIDです。</para>
        </tip>
      </section>

      <section id="rnfb25-trace-audit"><!-- Level 2 section -->
        <title>システム監査のセッション</title>
        <para>システム監査のセッションはエンジン自ら開始します。セッションがどのイベントに<quote>関心を持っている</quote>か決定するため、エンジンはセッションを作成しに行く際に<firstterm>トレース設定ファイル</firstterm>の内容を読みます。</para>

        <para><filename>firebird.conf</filename>の新しいパラメータ<emphasis>AuditTraceConfigFile</emphasis>は、ファイルの名前と配置を指示します。進行中のシステム監査トレースは最大で一つとなります。デフォルトでは、このパラメータの値は空で、どのシステム監査トレースも設定されていないことを示しています。</para>

        <section id="rnfb25-trace-conf"><!-- Level 3 section -->
          <para>設定ファイルにはトレースされるイベントのリストが含まれ、各イベント用のトレースログの配置を指示しています。異なるイベントのセットがそれぞれ異なるデータベースのログを取り、ログファイルを切り離すことができるというような柔軟さは十分にあります。Firebirdのルートディレクトリ内にあるテンプレートファイル<filename>fbtrace.conf</filename>には、監査トレース設定ファイルを記述するためのフォーマット、ルール、構文とともに、利用可能なイベントの完全なリストが含まれています。</para>

          <tip>
            <title>fbtrace.confファイルに関するTip</title>
            <para>このファイルには各エントリの目的と構文を説明する大量のコメント付きテキストが含まれます。サブリリースを重ねるごとに、トレース性能の改善のため時々新たなイベントと機能が加えられますので、注意して下さい。</para>
            <para>例えば、最近のプレリリースでの拡張では、サービスイベントを、名前を使ってトレースしたり、include、excludeフィルタをを使ってターゲットを絞ることができるようになっています。</para>

            <para>他の例として、パス名マッチングアルゴリズムの改善により、設定ファイル内の文字列をプラットフォームのキャラクタ・セットに従って翻訳したり、UTF-8の文字列に基づいて、Windowsでは大文字小文字を区別しない、POSIXでは大文字小文字を区別する、というようなファイル名の取り扱い等に関するプラットフォーム固有のルールが適用できるようなっています。（トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2404">CORE-2404</ulink>、A. dos Santos Fernandes）。</para>
           
           <para>バージョン2.5.2で施された改善では、トレースセッションの設定により、手動・自動スイープ両方の詳細情報についてログを取ることができるようになりました。テンプレートファイルから<quote>SWEEP_</quote>オプションを見つけて下さい。</para>
          </tip>
        </section><!-- sect 3 -->
      </section><!-- sect 2 -->

      <section id="rnfb25-trace-user"><!-- Level 2 section -->
        <title>ユーザートレース・セッション</title>
        <para>ユーザートレース・セッションはサービスAPIに対する新しい呼び出しを使ってユーザーが管理します。このための新しいサービス関数は五つあります：</para>
        <itemizedlist spacing="compact">
          <listitem>
            <para>開始：<command>isc_action_svc_trace_start</command></para>
          </listitem>
          <listitem>
            <para>停止：<command>isc_action_svc_trace_stop</command></para>
          </listitem>
          <listitem>
            <para>中断：<command>isc_action_svc_trace_suspend</command></para>
          </listitem>
          <listitem>
            <para>再開：<command>isc_action_svc_trace_resume</command></para>
          </listitem>
          <listitem>
            <para>既知の全トレースセッションの一覧: <command>isc_action_svc_trace_list</command></para>
          </listitem>
        </itemizedlist>
        <para>サービスAPI呼び出しの構文については、<emphasis>Firebird APIとODSの変更</emphasis>の章の<link linkend="rnfb25-apiods-api-svctrace">アプリケーション用の新トレース機能</link>の項で議論されています。</para>

        <section id="rnfb25-trace-user-sssn"><!-- Level 3 section -->
          <title>ユーザートレース・セッションの働き</title>
          <para>ユーザーアプリケーションがトレースセッションを開始すると、セッション名（オプション）とセッション設定（必須）が付けられます。セッション設定は、出力の配置に関する行は別として、<filename>fbtrace.conf</filename>をテンプレートとするルールと構文に準拠したテキストファイルです。このファイルはFirebirdのルートディレクトリにあります。</para>
          <note>
            <para>これらのファイルはサーバーには残りません。ユーザートレースの要求に応えるためテキストの格納と取得にふさわしい仕組みを設計するのは、アプリケーション開発者の仕事になります。</para>
            <para>例えば、コマンドラインユーティリティ<link linkend="rnfb25-trace-user-cmdline">fbsvcmgr</link>は、セーブファイル・パラメータ<emphasis>trc_cfg</emphasis>をサポートします。</para>
          </note>

          <para>ユーザーセッションの出力は、それぞれ1MBのテンポラリ・ファイルの一群に格納されます。アプリケーションによって一度完全に読み込まれたファイルは、自動的に削除されます。デフォルトでは、ファイルサイズの総計は最大で10MBに制限されています。この値は<filename>firebird.conf</filename>内の<emphasis>MaxUserTraceLogSize</emphasis>を使って小さくも大きくもできます。</para>

          <para>アプリケーションによって一度ユーザートレース・セッションのサービスが開始されると、アプリケーションは、<emphasis>isc_service_query()</emphasis>への呼び出しを使ってその出力を読み込む必要があります。このサービスは、アプリケーションが読み込めるより速く出力を生成することがあります。出力のサイズの総計が<emphasis>MaxUserTraceLogSize</emphasis>の上限に達すると、エンジンは自動的にトレースセッションを中断します。アプリケーションがファイル（出力の1MB分）を読み込み終えるとそのファイルは削除され、容量に余裕が生まれてエンジンはトレースセッションを自動的に再開します。</para>

          <para>アプリケーションは、そのトレースセッションの停止を決めると、単にサービスからの<emphasis>デタッチ</emphasis>をリクエストします。別の方法として、<command>isc_action_svc_trace_*</command>関数を使うことで、アプリケーションが自由にトレースセッションを中断、再開、停止することもできます。</para>
          <tip>
            <para>アタッチメントのキャラクタ・セット名は対応するいずれのトレースログのレコードにも含まれ、<command>user:role</command>と<command>protocol:port</command>の間に置かれています。例えば、</para>
            <literallayout role="monospaced">
A.FDB (ATT_36, SYSDBA:NONE, WIN1251, TCPv4:127.0.0.1)
            </literallayout>
            <para>DPBにキャラクタ・セットが指定されていない場合、アタッチメントのキャラクタ・セットのスロットでトレースログのレコードにNONEが書き込まれます。</para>
            <para>（<ulink url="http://tracker.firebirdsql.org/browse/CORE-3008">CORE-3008</ulink>）</para>
          </tip>
        </section><!-- sect3 -->

        <section id="rnfb25-trace-user-who"><!-- Level 3 section -->
          <title>トレースのセッションを管理できるのは誰か？</title>
          <para>どのユーザーでもトレースセッションを始動し、管理することができます。通常のユーザーは、自身の接続についてのトレースだけをリクエストすることができ、他のユーザーが開始したトレースセッションを管理することはできません。管理者はどのトレースセッションでも管理できます。</para>
        </section><!-- sect3 -->

        <section id="rnfb25-trace-user-abend"><!-- Level 3 section -->
          <title>異常な終了</title>
          <para>全てのFirebirdプロセスが停止されると、どのユーザートレース・セッションも保存されません。つまり、スーパーサーバーまたはスパークラシックサーバーのプロセスがシャットダウンされると、<emphasis>resume</emphasis>を待機していたものを含め、進行中だったユーザートレース・セッションは完全に停止され、<emphasis>resume</emphasis>もそれらを再開することができません。</para>

          <note>
            <para>もちろん、クラシックサーバーでは、それぞれの接続がそれぞれ専用のサーバー・インスタンスを含むことから、この状況は当てはまりません。そもそも、クラシックサーバー・インスタンスを<quote>シャットダウン</quote>するという事態はありません。どのサービス・インスタンスもそれを引き起こした接続より長生きすることはできません。</para>
          </note>
        </section><!-- sect3 -->

        <section id="rnfb25-trace-user-samples"><!-- Level 3 section -->
          <title>ユーザートレースのサンプル設定テキスト</title>
          <para>以下のサンプルは、ユーザートレース・セッションの設定テキストを記述するための基準を提供します。</para>

          <orderedlist numeration="loweralpha">
            <listitem>
              <para>接続12345に含まれる全てのSQL文のプリペア、解放、実行をトレースします。</para>
              <programlisting>
&lt;database mydatabase.fdb&gt;
	enabled                true
	connection_id          12345
	log_statement_prepare  true
	log_statement_free     true
	log_statement_start    true
	log_statement_finish   true
	time_threshold         0
&lt;/database&gt;
              </programlisting>
            </listitem>

            <listitem>
              <para>実行されたINSERT、UPDATE、DELETE文と、プロシージャとトリガへのネストされた呼び出しのログを取りつつ、データベースmydatabase.fdbへの所定のユーザーの全ての接続をトレースし、対応するPLANとパフォーマンスの統計を示します。</para>
              <programlisting>
&lt;database mydatabase.fdb&gt;
	enabled                true
	include_filter         %(INSERT|UPDATE|DELETE)%
	log_statement_finish   true
	log_procedure_finish   true
	log_trigger_finish     true
	print_plan             true
	print_perf             true
	time_threshold         0
&lt;/database&gt;
              </programlisting>
            </listitem>
          </orderedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-trace-user-cmdline"><!-- Level 3 section -->
          <title>コマンドラインからユーザートレースサービスへのリクエスト</title>
          <para>トレースサービスと対話的に動作する新しいコマンドラインユーティリティ<emphasis>fbtracemgr</emphasis>が追加されました。これはスイッチとパラメータに独自の構文を持ちます。実例も含めた詳細は<link linkend="rfb25-util-tracemgr">ユーティリティの章</link>で議論されています。</para>

          <para>さらに、サービスユーティリティ<emphasis>fbsvcmgr</emphasis>は、コマンドラインからのサービスリクエストの送信に使うことができます。以下に例を示します。</para>

          <orderedlist numeration="loweralpha">
            <listitem><!-- a -->
              <para><filename>fbtrace.conf</filename>という名の設定ファイルを使って<quote>My trace</quote>と名づけたユーザートレースを開始し、画面上でその出力を読む。</para>

              <literallayout class="monospaced">
  fbsvcmgr service_mgr action_trace_start trc_name &quot;My trace&quot; trc_cfg fbtrace.conf
              </literallayout>
              <para>このトレースセッションを停止するには、<emphasis>fbsvcmgr</emphasis>コンソールプロンプトでCtrl+Cを押します。（下記(e)も参照）。</para>
            </listitem>

            <listitem><!-- b -->
              <para>トレースセッションを一覧する：</para>
              <literallayout class="monospaced">
  fbsvcmgr service_mgr action_trace_list
              </literallayout>
            </listitem>

            <listitem><!-- c -->
              <para>ID 1のトレースセッションを中断する</para>
              <literallayout class="monospaced">
  fbsvcmgr service_mgr action_trace_suspend trc_id 1
              </literallayout>
            </listitem>

            <listitem><!-- d -->
              <para>ID 1のトレースセッションを再開する</para>
              <literallayout class="monospaced">
  fbsvcmgr service_mgr action_trace_resume trc_id 1
              </literallayout>
            </listitem>

            <listitem><!-- e -->
              <para>ID 1のトレースセッションを停止する</para>
              <literallayout class="monospaced">
  fbsvcmgr service_mgr action_trace_stop trc_id 1
              </literallayout>
              <tip>
                <para>他のコンソールでセッションの一覧を得て（b参照）、関心あるセッションのIDを探し、現在のコンソールでそれを使ってそのセッションを停止します。</para>
              </tip>
            </listitem>
          </orderedlist>
        </section><!-- sect3 -->
      </section><!-- sect2 -->

      <section id="rnfb25-trace-scope"><!-- sect2 -->
        <title>RDB$ADMINのユーザー管理スコープの昇格</title>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2588">CORE-2588</ulink></para>
        <para>Windowsでは、異なるWindowsセッションの複数のエンジン・インスタンスがグローバル名前空間での<emphasis>trace</emphasis>の起動を許可してしまうと、トレースツールは共有メモリの競合を引き起こします。そのため、トレーススコープは、現在のWindowsセッションからアクセス可能なプロセスだけに限定されています。</para>
      </section>

      <section id="rnfb25-trace-usecase"><!-- Level 2 section -->
        <title>使用例</title>
        <para>一般に三つの場合が考えられます：</para>
        <orderedlist>
          <listitem>
            <para><emphasis role="bold">エンジン活動の常時監査</emphasis></para>
            <para>システム監査トレースを使います。管理者はトレース設定ファイルを作成・編集し、firebird.conf内にある<emphasis>AuditTraceConfigFile</emphasis>の設定を介してその名前を決め、Firebirdを再起動します。その後、管理者がこのセッションを中断、再開、停止するのにFirebirdを再起動する必要はありません。</para>
            <important>
              <para>監査設定の変更をエンジンに通知するには、Firebirdを再起動する必要があります。</para>
            </important>
          </listitem>

          <listitem>
            <para><emphasis role="bold">一部（または全部）のデータベースの一部（または全部）の活動に対するオンデマンドな対話的インタラクティブ・トレース</emphasis></para>
            <para>アプリケーション（<emphasis>fbtracemgr</emphasis>ユーティリティでも可）がユーザートレース・セッションを開始し、その出力を読み込み、トレースしたイベントをリアルタイムで画面に表示します。ユーザーはそのトレースを中断・再開することができ、最終的にそれを停止することもできます。</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">重要な期間（数時間または終日ということも）のエンジン活動を収集し後で分析する</emphasis></para>

            <para>アプリケーションがユーザートレース・セッションを開始し、トレースの出力を定期的に読み込み、一つまたは複数のファイルに保存します。そのセッションの停止はその同じアプリケーションか別のアプリケーションによって手動で行う必要があります。複数のトレースセッションが起動している場合、関心あるセッションを特定するため一覧の取得が求められることがあります。</para>
          </listitem>
        </orderedlist>
      </section><!-- sect2 -->

      <section id="rnfb25-trace-plugin"><!-- Level 2 section -->
        <title>トレースのプラグイン機能</title>
        <para>新しいトレースAPIは外部プラグインモジュールとして実装可能なフックのセットを提供します。これらは、トレースされる任意のイベントの発生時にエンジンから呼び出されます。こうしたイベントで適宜ログを取る役割はプラグインが担うことになります。</para>
        <para>このトレースAPIはFirebird 2.5に含まれおり、使用することもできますが、今後のサブリリースでの変更が予定されておりますので、正式なものではなく、unstableと見て下さい。</para>
        <para>実装された<quote>標準の</quote>トレースプラグイン<filename>fbtrace.dll (.so)</filename>は、Firebird 2.5がインストールされたディレクトリ内の<filename>\plugins</filename>フォルダの中にあります。</para>
      </section>
    </section><!-- sect1 -->

    <section id="rnfb25-mon" xreflabel="Monitoring Improvements"><!-- Level 1 section -->
      <sectioninfo>
        <title>モニタリングの改善</title>
        <author>
          <firstname>Dmitry</firstname>
          <surname>Yemanov</surname>
        </author>
      </sectioninfo>
      <para>Firebird 2.5では、バージョン2.1で導入された<quote>MON$</quote>データベースモニタリング機能が拡張され、コンテキスト変数とODS 11.2以降のデータベースでのメモリ使用に関するデータを通知する新たなテーブルが備わりました。また、これらのデータベースでは、クライアントの接続をMON$ストラクチャーを通じて他の接続から終了できるようになりました。</para>
      
      <section id="rnfb25-mon-useraccess"><!-- Level 2 section -->
        <title>通常のユーザー向けの拡張されたアクセス</title>
        <para>もともとの設計では、特別な権限を持たないデータベースのユーザーは自身のCURRENT_CONNECTIONに関するモニタリング情報しか見ることができませんでした。現在は、同じユーザー名で認証された任意のアタッチメントの情報をリクエストできるようになっています。</para>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2233">CORE-2233</ulink></para>
        <note>
          <title>注意</title>
          <orderedlist>
            <listitem>
              <para>異なるエンドユーザーのためにミドルウェア層で同じユーザー名による同時・複数回のログインを必要とするアプリケーションのアーキテクチャでは、エンドユーザーにモニタリング機能を公開する点について、パフォーマンスやプライバシーへの影響が考慮されるべきです。</para>
            </listitem>
            <listitem>
              <para>同様の拡張はバージョン2.1.2で実装されました。</para>
            </listitem>
          </orderedlist>
        </note>
      </section>

      <section id="rnfb25-mon-mtdta"><!-- Level 2 section -->
        <title>ODS 11.2データベースの新しいMON$メタデータ</title>
        <note>
          <para>ODS 11.1のメタデータについては、バージョン2.1用のドキュメントを参照して下さい。</para>
       </note>

       <important>
         <title>MON$メタデータ用キャラクタ・セットの変更</title>
         <para>ファイル仕様に関するMON$テーブル内のカラム定義に使われるシステムドメインRDB$FILE_NAME2が、CHARACTER SET NONEからCHARACTER SET UNICODE_FSSへと変更されました。現在影響を受けるカラムはMON$DATABASE_NAMEとMON$ATTACHMENT_NAMEとMON$REMOTE_PROCESSです。この変更で影響を受けるデータは、バージョン2.5で更新されたfilespecの取り扱い、および他のDPBのキャラクタパラメータ・アイテムと一致することになります。</para>
         
         <para>（トラッカー・エントリー：<ulink url="http://tracker.firebirdsql.org/browse/CORE-2551">CORE-2551</ulink>、A. dos Santos Fernandes）</para>
       </important>

       <variablelist>
         <varlistentry>
           <term>MON$MEMORY_USAGE（現在のメモリ使用）</term>
           <listitem>
             <literallayout>
      - MON$STAT_ID（統計 ID）
      - MON$STAT_GROUP（統計グループ）
          0: データベース
          1: アタッチメント
          2: トランザクション
          3: SQL文
          4: 呼び出し
      - MON$MEMORY_USED（現在使用中のバイト数）
          エンジンによって実行されるプールからの高レベルでのメモリ割り当て。
          Can be useful for tracing memory leaks and for investigating unusual
          memory consumption and the attachments, procedures, etc. that might
          be responsible for it.
	  メモリリークのトレース、また、それが原因となりうる異常なメモリ消費やアタッチメント、プロシージャなどの調査に役立つ可能性があります。
      - MON$MEMORY_ALLOCATED（OSレベルで現在割り当てられているバイト数）
          Firebirdメモリマネージャによって実行された低レベルでのメモリ割り当て。
          これらはOSによって実際に割り当てられているバイトであり、そのため、
          物理メモリの消費を監視することができます。
             </literallayout>
             <note>
               <para>すべてのレコードがゼロ以外の値を持つわけではありません。一般に、MON$DATABASEとメモリバインド・オブジェクトだけはゼロ以外の<quote>割り当てられた</quote>値を示します。小さな割り当てはこのレベルでは行われません。その代わり、データベースのメモリプールにリダイレクトされます。</para>
             </note>
             <literallayout>

      - MON$MAX_MEMORY_USED（このオブジェクトで使用される最大のバイト数）
      - MON$MAX_MEMORY_ALLOCATED（このオブジェクトによってOSから割り当てられた最大のバイト数）
             </literallayout>
           </listitem>
         </varlistentry>

         <varlistentry>
           <term>MON$CONTEXT_VARIABLES（既知のコンテキスト変数）</term>
           <listitem>
             <literallayout>
      - MON$ATTACHMENT_ID（アタッチメント ID）
          セッションレベルのコンテキスト変数用の有効なIDのみを含みます。
          トランザクションレベルの変数はこのフィールドにNULLをセットします。
      - MON$TRANSACTION_ID（トランザクション ID）
          トランザクションレベルのコンテキスト変数用の有効なIDのみを含みます。
          セッションレベルの変数はこのフィールドにNULLをセットします。
      - MON$VARIABLE_NAME（コンテキスト変数名）
      - MON$VARIABLE_VALUE（コンテキスト変数値）
             </literallayout>
           </listitem>
         </varlistentry>
       </variablelist>
       <note>
         <title>MON$STATEMENTSとMON$STATEでのメモリ使用</title>
         <para>MON$STATEMENTSとMON$STATEでのメモリ使用の統計は、実際のCPU消費を表現しています。</para>
         <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1583">CORE-1583</ulink></para>
       </note>
      </section>

      <section id="rnfb25-mon-usg"><!-- Level 2 section -->
        <title>使用上の注意</title>

        <para><emphasis role="bold">例</emphasis></para>

        <para>SQL文のメモリ使用ランキング<quote>トップ10</quote>：</para>
        <programlisting>
SELECT FIRST 10
  STMT.MON$ATTACHMENT_ID,
  STMT.MON$SQL_TEXT,
  MEM.MON$MEMORY_USED
FROM MON$MEMORY_USAGE MEM
  NATURAL JOIN MON$STATEMENTS STMT
  ORDER BY MEM.MON$MEMORY_USED DESC
        </programlisting>

        <para>現在の接続用の全てのセッションレベルのコンテキスト変数を列挙：</para>
        <programlisting>
SELECT
  VAR.MON$VARIABLE_NAME,
  VAR.MON$VARIABLE_VALUE
FROM MON$CONTEXT_VARIABLES VAR
  WHERE VAR.MON$ATTACHMENT_ID = CURRENT_CONNECTION
        </programlisting>

        <section id="rnfb25-mon-trmntclnt"><!-- Level 3 section -->
          <title>クライアントの終了</title>
          <para>MON$ストラクチャーは、設計上、読み取り専用となっています。そのため、それらに対するユーザーDMLオペレーションは禁止されています。しかし、MON$STATEMENTSとMON$ATTACHMENTSテーブルのレコードの削除（だけ）を許可する仕組みが組み込まれています。このメカニズムの効果として、それぞれ、SQL文実行のキャンセルや、ODS 11.2データベース向けには、クライアントセッションの終了が可能になります。</para>

          <para>指定された接続の現在の全活動をキャンセルする：</para>
          <programlisting>
DELETE FROM MON$STATEMENTS
  WHERE MON$ATTACHMENT_ID = 32
          </programlisting>

          <para><quote>自分</quote>以外の全てのクライアントの接続を切断する：</para>
          <programlisting>
DELETE FROM MON$ATTACHMENTS
  WHERE MON$ATTACHMENT_ID &lt;&gt; CURRENT_CONNECTION
          </programlisting>

          <note>
            <orderedlist>
              <listitem>
                <itemizedlist>
                  <listitem>
                  <!-- 1 -->
                    <para>SQL文をキャンセルしようとしても、クライアントに現在実行中のSQL文がない場合は、無効なオペレーション（<quote>no-op</quote>）となります。</para>
                  </listitem>
                  <listitem>
                    <para>キャンセルと同時に、execute／fetchのAPI呼び出しはエラーコード<firstterm>isc_cancelled</firstterm>を返します。</para>
                  </listitem>
                  <listitem>
                    <para>その後のオペレーションは許可されます。</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
              <!-- 2 -->
                <itemizedlist>
                  <listitem>
                    <para>終了中の接続でアクティブなトランザクションはすぐにキャンセルされ、ロールバックされます。</para>
                  </listitem>
                  <listitem>
                    <para>終了されると、クライアントセッションはエラーコード<firstterm>isc_att_shutdown</firstterm>を受け取ります。</para>
                  </listitem>
                  <listitem>
                    <para>その後にこの接続ハンドルを使おうとすると、ネットワークのread／writeエラーを引き起こします。</para>
                  </listitem>
                 </itemizedlist>
               </listitem>
             </orderedlist>
           </note>
         </section>
      </section>
    </section>
    
  </chapter>
