<chapter id="rnfb25-install">
  <chapterinfo>
    <title>インストールの注意</title>
  </chapterinfo>
  <warning>
    <title>Firebird 2.5.1で作成またはリストアされたデータベースについての警告</title>
        <para>Firebird 2.5.1から上位のサブリリースへアップグレードする場合、データベースの移行の際に、<emphasis>gbak</emphasis>を用いてバックアップ／リストアを行うことを強く推奨します。これが実行できない場合でも、データベース移行時に、最低でも全ての複合インデックスの再作成を行って下さい。</para>
        <para>比較的古いバージョン（ODS11.1以下）またはバージョン2.5.0からアップグレードするデータベースは、この不具合の影響を受けません。</para>
  </warning>
  <note>
    <title>インストールと移行のガイド</title>
    <para>Firebirdバージョン2.0.xと2.1.x向けのインストールと移行ガイド最新版の内容は、バージョン2.5シリーズにも適用できます。この文書のコピーが/doc/ディレクトリ内に存在しなくても、Firebirdのウェブサイトからダウンロードできます。</para>
  </note>
  <para>バイナリパッケージのインストールで問題が起きる可能性がありましたが、解決のためいくつかの改善が施されました。</para>

  <section id="rnfb25-install-lin">
    <title>Linux（POSIX）版</title>
      <para>POSIX版のインストールに適用済みの改善内容は以下の通りです。</para>
      <section id="rnfb25-install-lin-scripts">
        <sectioninfo>
          <title>インストール・スクリプトの刷新</title>
          <author>
            <firstname>Alex</firstname><surname>Peshkov</surname>
          </author>
        </sectioninfo>
        <itemizedlist>
          <listitem>
            <para>（<ulink url="http://tracker.firebirdsql.org/browse/CORE-2195">CORE-2195</ulink>）：Linux版クラシックサーバーのインストール・スクリプトが見直され、ドキュメントその他のコンポーネントの所有権とアクセス権の割り当てが改善されました。</para>
          </listitem>
          <listitem>
            <para>（<ulink url="http://tracker.firebirdsql.org/browse/CORE-2392">CORE-2392</ulink>）：アクティブなPOSIX版スーパーサーバー、スーパークラシックサーバー向けポートの全てのインストール・スクリプトが刷新され、これらのプラットフォーム上で起きていたGuardianに関する問題への対処が行われました。</para>
          </listitem>
          <listitem>
            <para>（<ulink url="http://tracker.firebirdsql.org/browse/CORE-2626">CORE-2626</ulink>）：<filename>/etc/init.d</filename>中のスタートアップ・スクリプトは、これまでホスト・システム内の<filename>/var/run/firebird</filename>ディレクトリと<filename>/tmp/firebird</filename>ディレクトリの存在を考慮に入れていませんでした。スタートアップの失敗には様々なタイプのものがありますが、多くはこの欠陥に由来するものでした。</para>
            <para>バージョン2.5とそれ以降のビルドで配布されるスタートアップ・スクリプトではこの問題は対処済みで、解決しています。</para>
          </listitem>
          <listitem>
<!-- Added at v.2.5.1 -->          
            <para>（<emphasis role="bold">バージョン2.5.1</emphasis> <ulink url="http://tracker.firebirdsql.org/browse/CORE-3467">CORE-3467</ulink>）：<emphasis>make install</emphasis>にサイレントインストール・スイッチ（-silent）が追加され、シンプルなインストールと、ビルドとテスト実行の自動化が実現されました。このスイッチを使うとFirebirdのインストールは一切プロンプトを出さずに進行し、SYSDBA用にランダムパスワードが生成されます。このランダムパスワードは、セキュリティ・データベースsecurity2.fdbと同じ配置場所にあるファイルに保存されます。</para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="rnfb25-install-lin-configure">
        <sectioninfo>
          <title>Firebirdの'configure'専用スイッチ</title>
          <author>
            <firstname>Alex</firstname><surname>Peshkov</surname>
          </author>
        </sectioninfo>
        <para>POSIXプラットフォーム上でインストール・ディレクトリの微調整に使われる標準的な<command>configure</command>スイッチの多くは、Firebirdには役立ちません。</para>
        <para>標準的なGNUのスイッチをデフォルト設定を変更せずに機能させるのは不可能に近く、簡単明瞭とはほど遠い煩雑なものでした。これらに代わり、<command>configure</command>用の新たなスイッチのセットが追加され、Firebirdのファイル群のきめ細かな配置の設定が可能になりました。</para>
        <para><command>ib_util</command>ローダーも改善され、設定されたレイアウトに応じてエンジンが正しく動作するようになりました。</para>
        <section id="rnfb25-install-lin-configure-swtchs">
          <title>利用可能なスイッチ</title>
          <literallayout class="monospaced">
  --with-fbbin 実行ファイルを含むディレクトリ（PREFIX/bin）
  --with-fbsbin システム管理用実行ファイルを含むディレクトリ（PREFIX/bin）
  --with-fbconf 設定ファイルを含むディレクトリ（PREFIX）
  --with-fblib オブジェクトコード・ライブラリを含むディレクトリ（PREFIX/lib）
  --with-fbinclude C/C++ヘッダファイルを含むディレクトリ（PREFIXinclude）
  --with-fbdoc ドキュメント類を含むディレクトリ（PREFIX/doc）
  --with-fbudf URFを含むディレクトリ（PREFIX/UDF）
  --with-fbsample サンプルを含むディレクトリ（PREFIX/examples）
  --with-fbsample-db サンプルデータベースを含むディレクトリ（PREFIX/examples/empbuild）
  --with-fbhelp QLIのヘルプを含む（PREFIX/help）
  --with-fbintl 国際化用ディレクトリ（PREFIX/intl）
  --with-fbmisc その他のファイルを含むディレクトリ（PREFIX/misc）
  --with-fbsecure-db セキュリティデータベースを含むディレクトリ（PREFIX）
  --with-fbmsg メッセージファイルを含むディレクトリ（PREFIX）
  --with-fblog ログファイルを含むディレクトリ（PREFIX）
  --with-fbglock ガーディアン・ロックを含むディレクトリ（PREFIX）
  --with-fbplugins プラグインを含むディレクトリ（PREFIX）
          </literallayout>
        </section>
      </section>

      <section id="rnfb25-install-lin-dirs">
      <sectioninfo>
        <title>Firebirdバイナリのパス検出</title>
        <author>
          <firstname>Adriano</firstname><surname>dos Santos Fernandes</surname>
        </author>
      </sectioninfo>
      <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2398">CORE-2398</ulink></para>
      <para>POSIXビルド向けに、バイナリがインストールされた場所のパスをFirebirdに正しく検出させる機能が実装されました。</para>
      <important>
        <para>現状、これは実験段階であり、配布版のバイナリでは無効になっています。これをアクティベートするには、Firebirdをソースからビルドする際に、autogen.shに<command>--enable-binreloc</command>を渡して下さい。</para>
      </important>
    </section>
  </section>
<!--
  Translators, at v.2.5.1, please note the changes in this section 
-->
  <section id="rnfb25-install-win">
    <title>Windows版</title>
    <section id="rnfb25-install-win-embed">
      <sectioninfo>
        <title>エンベデッド版向けのデプロイ構造</title>
        <authorgroup>
          <author>
            <firstname>Adriano</firstname><surname>dos Santos Fernandes</surname>
          </author>
          <author>
            <firstname>Vlad</firstname><surname>Khorsun</surname>
          </author>
        </authorgroup>
      </sectioninfo>
      <para>トラッカー・エントリー：<ulink url="http://tracker.firebirdsql.org/browse/CORE-1814">CORE-1814</ulink></para>
      <para>このリリースでは、エンベデッド版のアプリケーション・コンポーネントの配置を従来よりやや柔軟に設定できます。ここでの変更は、アプリケーション開発者の間で問題となっていた、相互に関連するいくつかのイシューに対処したものです。すなわち、</para>
      <itemizedlist>
        <listitem>
          <para>ib_util.dll、またはfbembed.dll中のクライアントコード、または完全な外部ライブラリなど、他のDLLに依存する外部関数ライブラリをFirebirdの擬似ルートディレクトリ（&lt;root&gt;）下の..\UDFフォルダにそのまま置くことはできませんでした。依存しているファイルが通常その配置場所には存在しないからです。そのため、%PATH%変数を使ってちょっとした工夫をする必要がありました。</para>
        </listitem>
        <listitem>
          <para>従来の擬似&lt;root&gt;の決定ルールは、アプリケーションコードとしてそのフォルダにfbembed.dll（リネームしたものでも可）が存在することを要求していました。その影響で、これを必要とする各アプリケーション用にfbembed.dllの別々のコピーを確保するか、または、実行可能な全てのクライアントを一箇所に配置するか、いずれかの対応が必要でした。</para>
        </listitem>
      </itemizedlist>
      <para>バージョン2.5のエンベデッド版エンジンでは&lt;root&gt;の決定が変更され、もはやそこがアプリケーションのパスである必要はありません。それは、どこであれfbembed.dllの配置によって決まります。このことは、バージョン2.5のエンジンでは、かつてはfbembed.dllをロードしていた任意のエンベデッドアプリケーションやサードパーティ製UDFライブラリやコマンドラインツールのローカルコピーで利用できるFirebirdの擬似&lt;root&gt;のために標準の自己充足的なストラクチャーをセットアップできることを意味します。</para>
      <para>Firebirdの擬似ツリーをアプリケーションから切り離したい場合は、必ず、そのストラクチャーのfirebird.confファイル内で&lt;root&gt;の配置の絶対パスを示す<emphasis>RootDirectory</emphasis>パラメータを設定して下さい。</para>

      <note>
        <para>新たなルールが既存のエンベデッドストラクチャーを破壊することはありません。従来通りのやり方でエンベデッドアプリケーションを構築することができます。違いは、実行ファイルをエンベデッド版Firebirdの擬似&lt;root&gt;ストラクチャー専用のコピーと一緒にデプロイする必要がなくなったということです。</para>
      </note>
    </section>

    <section id="rnfb25-install-win-msvc8">
      <sectioninfo>
        <title>MSCV8アセンブリの管理</title>
        <author>
          <firstname>Vlad</firstname><surname>Khorsun</surname>
        </author>
      </sectioninfo>
      <para>トラッカー・エントリー：<ulink url="http://tracker.firebirdsql.org/browse/CORE-2243">CORE-2243</ulink></para>
      <note>
        <para>この変更が施されたのがバージョン2.1.2からだったため、この議論も<emphasis>V.2 インストールと移行に関するドキュメント</emphasis>内に特別なトピックとして登場しています。</para>
      </note>

      <para>Firebird 2.5はVisual Studio 2005のMicrosoft MSVC8コンパイラでビルドされています。Firebirdの全バイナリはビルド時に動的リンキングを用いているため、それらは全てランタイム・ライブラリを必要とします。</para>
      <para>dll地獄問題を避けるため、Microsoftは複数のアプリケーションで共有される可能性のあるコンポーネントの配布に新たなルールを導入しました。Windows XP以降、共有ライブラリ&mdash;Visual C++やVisual Cのランタイム<filename>msvcp80.dll</filename>や<filename>msvcr80.dll</filename>、<filename>mscvcm80.dll</filename>など&mdash;は、共有アセンブリまたはプライベートアセンブリとして配布される必要があります。</para>
      <itemizedlist>
        <listitem>
          <para>Microsoft MSIインストーラーは共有アセンブリを複数のアプリケーションで使用される共通の特別フォルダ<filename>SxS</filename>内にインストールします。</para>
        </listitem>
        <listitem>
          <para>プライベートアセンブリはアプリケーションと一緒に配布され、アプリケーションフォルダに置かれます。アセンブリが<filename>\system32</filename>フォルダを使用することはXP、Server2003、Vistaプラットフォーム・ファミリーでは禁止されています。</para>
        </listitem>
      </itemizedlist>

      <section id="rnfb25-install-win-shared"><!-- Level 3 section -->
        <title>共有アセンブリとしてのランタイムのインストール</title>
        <para>ランタイムを共有アセンブリとしてインストールするには、デプロイするシステム上にMSI 3.0がインストールされている必要があり、また、ユーザーが管理者権限を持っていなければなりません。アプリケーションがエンベデッド版Firebirdと一緒にデプロイされていて、これが不可能となる場合がしばしばあります：エンベデッドサーバーはインストールされていて、実行可能な状態でなければなりません。この場合、ランタイムを共有アセンブリとしてインストールすることは計画しないで下さい。</para>
      </section><!-- level 3 -->

      <section id="rnfb25-install-win-private"><!-- Level 3 section -->
        <title>プライベートアセンブリとしてのランタイムのインストール</title>

        <para>MSVC8ランタイムライブラリをプライベートアセンブリとしてインストールするには、その内容物&mdash;上記の三つのDLLとアセンブリのマニフェストファイル<filename>Microsoft VC80.CRT.manifest</filename>&mdash;を、これらに依存するバイナリ（.exeまたは.dll）が存在する全てのフォルダに置いておく必要があります。それらのバイナリには、コンパイル時に使用されたライブラリと同等のランタイムの配置が期待されるフォルダに対するチェックが組み込まれているためです。</para>
        <para>典型的なエンベデッド版Firebirdのインストールでは、MSVC8ランタイムアセンブリの完全なコピーが三つ必要になります：アプリケーションフォルダに一つ、\intlフォルダと\udfフォルダにそれぞれ一つずつ。インストールの膨張問題を避けるため、バージョン2.1.2向けFirebirdバイナリの一部のビルド方法にいくつかの変更が加えられています。（<ulink url="http://tracker.firebirdsql.org/browse/CORE-2243"><emphasis>トラッカー・エントリー CORE-2243</emphasis></ulink>も参照して下さい）。</para>
        <para>これらは、アプリケーション構成がMSVC8ランタイムアセンブリを組み込んでいない場合でもエンベデッド版Firebirdが動作できるようにするための変更です：</para>
        <orderedlist numeration="loweralpha">
          <listitem><!-- (a) -->
            <para>ib_util.dll、fbudf.dll、ib_udf.dll、fbintl.dllはエンベデッドマニフェストなしでビルドされています。その効果として、ローダーが対応するDLLと同じフォルダでMSVC8アセンブリを検索するのを避けることができます。ホストのプロセスは、これらのセカンダリDLLをロードしようとする前に、マニフェストを介してMSVC8ランタイムをロードし終えていなければなりません。</para>
          </listitem>
          <listitem><!-- (b) -->
            <para>現在のfbembed.dllには、必要となる可能性がある任意のセカンダリDLLをロードする前に、自身のマニフェストからアクティベーションコンテキストを生成しアクティベートするためのコードが含まれています。</para>
          </listitem>
        </orderedlist>
      </section><!-- end of level 3 section -->

      <note>
        <title>注意</title>
        <orderedlist numeration="loweralpha">
          <listitem><!-- (a) -->
            <para>MSVC8ランタイムをインストールするMicrosoftの再配布パッケージの利用を強く推奨します！インストール実行ファイル<filename>vcredist_x86.exe</filename>または<filename>vcredist_x64.exe</filename>（あなたが選択したFirebirdに適したもの）がフルインストール用またはエンベデッド版用のzipファイル一式の中にあるはずです。存在しない場合も、<ulink url="http://www.microsoft.com/downloads/Browse.aspx?displaylang=en&amp;productID=23947D52-B2BC-4E88-8C51-E81DC2905B0D">Microsoftのダウンロードサイト</ulink>から落としてくることができます。</para>
          </listitem>

          <listitem><!-- (b) -->
            <para>MSVC8ランタイムアセンブリがプライベートアセンブリとしてインストールされる場合、サードパーティ製UDFは<emphasis>以下の条件のうち一つ</emphasis>を満たしている必要があります。UDFライブラリをコンパイルする際に、MSVC8ランタイムは<emphasis>次のいずれかとなります</emphasis>：</para>
            <itemizedlist>
              <listitem>
                 <para>使用されない</para>
               </listitem>
              <listitem>
                 <para>使用されても、エンベデッドマニフェストなしでビルドが行われる</para>
              </listitem>
              <listitem>
                <para>使用され、エンベデッドマニフェストがビルドに使われる&mdash;MSVC IDEのデフォルトオプション。この場合、MSVC8アセンブリは同じフォルダになければなりません</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </orderedlist>
      </note>
    </section><!-- level 2 -->

  </section>

</chapter>
