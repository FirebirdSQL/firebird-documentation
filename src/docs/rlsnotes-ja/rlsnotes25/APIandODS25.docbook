  <chapter id="rnfb25-apiods">
    <chapterinfo>
      <title>Firebird APIとODSの変更</title>
      <para><emphasis role="bold">リリース2.5版</emphasis></para>
    </chapterinfo>

    <section id="rnfb25-apiods-ods" xreflabel="ODS Changes"><!-- Level 1 section -->
      <title>ODS（On-Disk Structure）の変更</title>
      <para>オンディスク構造体（ODS）の変更には以下のものが含まれます：</para>

      <section id="rnfb25-apiods-ods-number"><!-- Level 2 section -->
        <title>新たなODSバージョン数</title>
        <para>Firebird 2.5はODS（オンディスク構造体）バージョン11.2のデータベースを作成します。</para>
      </section>

      <section id="rnfb25-apiods-page_size"><!-- Level 2 section -->
        <title>最大ページサイズ</title>
        <para>最大ページサイズは従来通り16KB（16384バイト）です。</para>
      </section>

      <section id="rnfb25-apiods-num_buffers"><!-- Level 2 section -->
        <title>キャッシュ内の最大ページバッファ数</title>
        <para>データベース・キャッシュとして設定できる最大のページ数は、データベースが64bit版Firebirdで運用されているか、32bit版で運用されているかによって異なります：</para>
        <itemizedlist>
          <listitem>
            <para>64bit版 :: 2^31 -1（2,147,483,647）ページ</para>
          </listitem>
          <listitem>
            <para>32bit版 :: 128,000ページ、つまり、バージョン2.1と同じです</para>
          </listitem>
        </itemizedlist>
      </section>  
    </section>

    <!-- API -->
    <section id="rnfb25-apiods-api" xreflabel="API Extensions"><!-- Level 1 section -->
      <title>API（アプリケーションプログラミングインタフェース）の拡張</title>
      <para>追加されたFirebird APIは、以下の通り―</para>
      
<!-- Added in v.2.5.1 -->
      <section id="rnfb251-apiods-api-blobconvert"><!-- Level 2 -->
        <sectioninfo>
          <title>APIの機能でBLOBの変換が可能に</title>
          <author><firstname>A.</firstname><surname>dos Santos Fernandes</surname></author>
        </sectioninfo>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-3446">CORE-3446</ulink></para>
        <para>BLOBと他のデータタイプとの双方向の変換がAPIの機能で可能になりました（XSQLVARまたはblr messages）。</para>
        <itemizedlist>
          <listitem>
            <para>BLOBから異なるタイプのデータへ、また、異なるタイプからBLOBへのデータの移動が、executeおよびfetchの呼び出しで可能になりました。</para>
          </listitem>
          <listitem>
            <para>入力パラメータに関しては、パラメータに文字列を置くことができるので、クライアント側からBLOBの作成・記入を行う必要がありません。</para>
          </listitem>
          <listitem>
            <para>出力（executeまたはfetch）に関しては、アプリケーションがそのデータを理解し、BLOBを最長の文字列として評価するのに役立ちます。</para>
          </listitem>
        </itemizedlist>  
      </section>

      <section id="rnfb25-apiods-api-conncharset"><!-- Level 2 -->
        <sectioninfo>
          <title>接続文字列とキャラクタ・セット</title>
          <author><firstname>A.</firstname><surname>dos Santos Fernandes</surname></author>
        </sectioninfo>
        <para>以前のバージョンは、OSやファイルシステムで使用されるキャラクタ・セットと連携する手段を持っていませんでした。Firebird 2.5は、データベースその他のファイルの名称や文字列パラメータがAPI接続要求を通じてアクセスされたとき、および／または、API接続要求に渡されたとき、その全体を見て、<quote>環境に応じた認識</quote>を行うようになりました。この変更により、FirebirdがASCIIサブセット以外のキャラクタを含むファイル名や他のパラメータを受け付け、それらを使用する性能は大幅に改善されました。</para>
        <important>
          <title>この機能をサポートするのはDPB接続のみ</title>
	  <para>現在の実装では、この機能をサポートしているのはDPB（データベースパラメータブロック）を通じた接続だけです。サービスAPI（<emphasis>isc_spb*</emphasis>）の機能はサポートされていません。</para>
        </important>

        <section id="rnfb25-apiods-api-conncharset01"><!-- Level 3 -->
          <title>isc_dpb_utf8_filename</title>
          <para>新しい接続オプション<command>isc_dpb_utf8_filename</command>が導入され、これにより、Firebirdは、渡されているファイル名や他のキャラクタ・アイテムがUTF8（UTF-8）キャラクタ・セットであることを具体的に知ることができるようになりました。このオプションが使われない場合、デフォルトのキャラクタ・セットとしてOSのコードページが選択されます。</para>

          <section id="rnfb25-apiods-api-conncharset01a"><!-- Level 4 -->
            <title>クライアントとサーバー間の互換性</title>
            <variablelist>
              <varlistentry>
                <term>新しいクライアント、古いサーバー</term>
                <listitem>
                  <para>バージョン2.5以降のクライアントで2.5より前のバージョンのリモート・サーバーに接続する場合、<command>isc_dpb_utf8_filename</command>オプションを使用すると、<emphasis>クライアント</emphasis>は、ファイル名をサーバーへ渡す前に、これをUTF-8から<emphasis>クライアントのコードページ</emphasis>へと変換します。<command>isc_dpb_utf8_filename</command>オプションはDPBから削除されます。</para>
                  <para>クライアントとサーバーのステーション間で同じコードページが使われている時、互換性は保証されます。</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>新しいクライアント、新しいサーバー、isc_dpb_utf8_filenameオプションなし</term>
                <listitem>
                  <para>バージョン2.5以降のクライアントで、<command>isc_dpb_utf8_filename</command>オプションを使用せずに、バージョン2.5以降のリモートサーバーに接続する場合、クライアントはファイル名をOSのコードページからUTF-8へと変換し、<command>isc_dpb_utf8_filename</command>オプションをDPBに挿入します。</para>

                  <para>サーバーが受け取ったファイル名には特別な処理は施されません。しかし、古いクライアントの場合と違い、バージョン2.5のクライアントは、ファイル名を自動で変換し、DPBに<command>isc_dpb_utf8_filename</command>オプションを自動で挿入します。いずれにせよ、ホストとクライアントが同じコードページを用いている場合には、互換性は保証されます。</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>新しいクライアント、新しいサーバー、isc_dpb_utf8_filenameオプション使用</term>
                <listitem>
                  <para><command>isc_dpb_utf8_filename</command>が使用されている場合は、クライアントはファイル名を変更せずにサーバーに渡します。クライアントは常にUTF-8のファイル名を<command>isc_dpb_utf8_filename</command>オプションとともにサーバーに渡します。 </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section><!-- sect4 -->
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-conncharset02"><!-- Level 3 -->
          <title>コードページの変換</title>
          <para>Windowsでは、変換に使われるコードページはWindows ANSIです。他の全てのプラットフォームではUTF-8が用いられています。</para>

          <para>ファイル名にOSのコードページやUTF-8を用いるのは、必ずしもベストな選択とは言えません。例えば、スクリプトや他のテキストファイルを別の接続キャラクタ・セットを用いた<emphasis>isql</emphasis>などのスクリプト実行ツールで処理する場合、複数のキャラクタ・セット（コードページ）を使用していると、ファイルを正しく編集できないことがあります。</para>

          <para>解決策：<firstterm>Unicodeコードポイント</firstterm>を使用します。これにより、クライアントのバージョンが2.5より前の場合でも、キャラクタの正しい解釈が可能になります。</para>

          <section id="rnfb25-apiods-api-conncharset02a"><!-- Level 4 -->
            <title>Unicodeコードポイントの使用</title>
            <para>接続文字列のファイル名にある任意のUnicodeキャラクタはエンコードによりASCIIキャラクタとして擬装できるようになりました。これは、Unicodeコードポイント番号（U+XXXXの表記法に似たhexadecimal形式で記述）にプレフィックスとしてシンボル<firstterm>#</firstterm>を付すことで実現されます。</para>

            <para><command>#XXXX</command>のように標記します。Xは0-9、a-f、A-Fです。</para>

            <para>キャラクタの一つがリテラルな#だった場合、<quote>二重の</quote>ハッシュ・キャラクタ（##）か、またはコードポイント番号<command>#0023</command>を使用します。</para>
            <note>
              <para>クライアントがバージョン2.5より古い場合でも、サーバーでのハッシュ・キャラクタの解釈にはこれら新しいセマンティクスが使われます。</para>
            </note>
          </section><!-- sect4 -->
        </section><!-- sect3 -->
      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-sqlstate">
        <sectioninfo>
          <title>SQLSTATEコードのサポート</title>
          <authorgroup>
            <author><firstname>W.</firstname><surname>Oliver</surname></author>
            <author><firstname>D.</firstname><surname>Yemanov</surname></author>
          </authorgroup>
        </sectioninfo>

        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1761">CORE-1761</ulink></para>
        <para>新しいクライアントサイドAPI関数<command>fb_sqlstate()</command>は、エラーのステータスベクター・アイテムをSQL-2003標準の英数5文字のSQLSTATEコードへと変換するために利用できます。</para>
        <itemizedlist>
          <listitem>
            <para>SQLSTATEコードはSQL CLASSの2文字とSQL SUBCLASSの3文字を連結したものを表現しています。</para>
          </listitem>
          <listitem>
            <para>SQL文がSQLSTATEコードを返すようになりました。</para>
          </listitem>
          <listitem>
            <para><emphasis>isql</emphasis>ユーティリティがエラーについてSQLCODEではなくSQLSTATEの診断を表示するようになりました。</para>
          </listitem>
          <listitem>
            <para>SQLCODEでの診断は非推奨となっています&mdash;将来のリリースで廃止されます。</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">（バージョン2.5.1）</emphasis>PSQLに<command>WHEN SQLSTATE</command>型の例外処理構文が追加されました。</para>
          </listitem>
        </itemizedlist>
        <note>
          <title>SQLCODEの非推奨化</title>
          <para>SQLCODEは非推奨となっており、代わりにSQLSTATEを使用すべき所ですが、FirebirdではSQLCODEもこの先しばらく使うことができます。<command>WHEN SQLCODE</command>の例外処理のようなAPI関数<firstterm>isc_sqlcode()</firstterm>はまだサポートされています。</para>
        </note>
        <para><link linkend="rnfb25-appx-sqlstates">付録A：SQLSTATE</link>には、このリリースで使用できるSQLSTATEコードのリストと対応するメッセージ・テキストが挙げられています。</para>
      </section>

      <section id="rnfb25-apiods-api-unprpr"><!-- Level 2 section -->
        <sectioninfo>
          <title><quote>効率的なアンプリペア</quote></title>
          <authorgroup>
            <author><firstname>W.</firstname><surname>Oliver</surname></author>
            <author><firstname>D.</firstname><surname>Yemanov</surname></author>
          </authorgroup>
        </sectioninfo>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1741">CORE-1741</ulink></para>

        <para>APIルーチン<firstterm>isc_dsql_free_statement()</firstterm>の新たなオプション<firstterm>DSQL_unprepare</firstterm>（数値4）を使うと、DSQL文ハンドルはプリペアドステートメントを<quote>アンプリペア</quote>のままにしておくことができます。</para>
        <para>従来の<firstterm>isc_dsql_free_statement()</firstterm>関数は、<firstterm>DSQL_close</firstterm>（名前付きカーソルを閉じる）と<firstterm>DSQL_drop</firstterm>（文ハンドルを解放する）のみサポートしていました。</para>
        <para>追加されたAPIは次の通り：</para>
        <programlisting>
#define DSQL_close 1
#define DSQL_drop 2
#define DSQL_unprepare 4
        </programlisting>
      </section>

      <section id="rnfb25-apiods-api-cnclop"><!-- Level 2 section -->
        <sectioninfo>
          <title>オペレーション関数のキャンセル</title>
            <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
        </sectioninfo>
        <para>新しいAPI呼び出し<firstterm>fb_cancel_operation()</firstterm>を使うことで、所与の接続中に、ある種のブロッキングAPI呼び出しが実行している現在のアクションをキャンセルすることができます。</para>

        <para><emphasis role="bold">構文</emphasis></para>
        <literallayout class="monospaced">
   ISC_STATUS fb_cancel_operation(ISC_STATUS* status_vector,
                                  isc_db_handle* db_handle,
                                  ISC_USHORT option);
        </literallayout>

        <para><emphasis role="bold">パラメータ</emphasis></para>

        <variablelist>
          <varlistentry>
            <term>status vector (ISC_STATUS* status_vector)</term>
            <listitem>
              <para>通常のステータスベクター・ポインタ構造体です。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>db_handle (pointer to a isc_db_handle)</term>
            <listitem>
              <para>通常の、有効なデータベースハンドルです。アタッチメントを特定します。</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>option (unsigned short: symbol)</term>
            <listitem>
              <para>実行されるアクションを確定します。オプション・シンボルは以下の通り：</para>
              <itemizedlist>
                <listitem>
                  <para><emphasis>fb_cancel_raise</emphasis>：第二のパラメータで指定された<command>db_handle</command>に関連する任意のアクションをキャンセルします。この効果として、できるだけ早い時点でエンジンが継続中のリクエストを止め、中断されたAPI呼び出しのステータスベクターを介して呼び出し元に例外を返せるようになります。</para>
                  <para><quote>できるだけ早い時点</quote>とは、通常は、次の再スケジューリング・ポイントのことです。</para>
                  
                  <para><emphasis role="bold">例</emphasis></para>
                  <informalexample>
                    <literallayout class="monospaced">
Thread1:                                Thread2:
------------------------------          ------------------------------

isc_dsql_execute(status, ....)
........                                fb_cancel_operation(cancel_status, ...)
status[1] == isc_cancelled;             cancel_status[1] = 0;
                    </literallayout>
                  </informalexample>
                </listitem>
                <listitem>
                  <para><emphasis>fb_cancel_disable</emphasis>：指定されたアタッチメントに関する<emphasis>fb_cancel_raise</emphasis>リクエストの実行を無効にします。例えばcleanupなど、プログラムが重要なオペレーションを実行している時に役立つ可能性があります。</para>
                </listitem>
                <listitem>
                  <para><emphasis>fb_cancel_enable</emphasis>：前に無効化されたキャンセル実行の通知を再び有効にします。'cancel'状態はデフォルトで有効であり、アタッチメントが作成された時に初期化されます。</para>
                </listitem>
                <listitem>
                  <para><emphasis>fb_cancel_abort</emphasis>；クライアント側で接続を強制的に閉じます。接続をすぐに閉じる必要がある場合は役に立ちます。サーバーは実行中の全てのトランザクションをロールバックします。'Success'の場合は常にアプリケーションに返されます。<emphasis role="bold">注意して使用して下さい！</emphasis></para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
        <section id="rnfb25-apiods-api-cnclop-usage"><!-- Level 3 section -->
          <title>使い方</title>
          <para><emphasis>fb_cancel_disable</emphasis>と<emphasis>fb_cancel_enable</emphasis>リクエストのサイクルは、必要な頻度で繰り返すことができます。エンジンがすでにリクエストされた状態にある場合は、例外は発生しません：単に無視されます。</para>

          <para>長時間にわたるリクエストを停止する必要がある場合、通常、<emphasis>fb_cancel_raise</emphasis>が呼び出されます。これは非同期シグナルに対して安全では<emphasis>ない</emphasis>ため、シグナルハンドラからではなく、個別のスレッドから呼び出されます。</para>
          <important>
            <title>このAPI呼び出しが非同期な特性を持つことに注意して下さい！</title>
          </important>

          <para>非同期な実行の別の側面として、API呼び出しの終了時にアタッチメントの活動がキャンセルされることもあれば、されないこともあり得ます。後者の可能性は常にあります。また、非同期性により、返されるステータスベクターがほとんどの場合<emphasis>FB_SUCCESS</emphasis>を返すことになります。とはいえ、例外が発生することはあります：ネットワークパケット・エラーなど。</para>

          <para><emphasis role="bold">例</emphasis></para>
          <programlisting>
Thread A:
fb_cancel_operation(isc_status, &amp;DB, fb_cancel_enable);
isc_dsql_execute_immediate(isc_status, &amp;DB, &amp;TR, 0, &quot;long running statement&quot;, 3, NULL);
// waits for API call to finish...

		Thread B:
		fb_cancel_operation(local_status, &amp;DB, fb_cancel_raise);

Thread A:
if (isc_status[1])
	isc_print_status(isc_status); // will print &quot;operation was cancelled&quot;
          </programlisting>
        </section><!-- sect3 -->
      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-shtdn"><!-- Level 2 section -->
        <sectioninfo>
          <title>シャットダウン関数</title>
            <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
        </sectioninfo>

        <para>このリリースでは、エンベデッドサーバー・アプリケーションで有用となる二つの<firstterm>fb_shutdown*</firstterm>関数が公開されました：：<firstterm>fb_shutdown()</firstterm>と<firstterm>fb_shutdown_callback</firstterm>です。</para>

        <section id="rnfb25-apiods-api-shtdn01"><!-- Level 3 section -->
          <title>関連する二つのfb_shutdown* 関数</title>
          <para>このリリースでは、埋め込みサーバー・アプリケーションで有用となる二つの<firstterm>fb_shutdown*</firstterm>関数が公開されました：：<firstterm>fb_shutdown()</firstterm>と<firstterm>fb_shutdown_callback</firstterm>です。</para>

          <para><emphasis role="bold">プロトタイプ</emphasis></para>
          <literallayout class="monospaced">
   typedef int (*FB_SHUTDOWN_CALLBACK)(const int reason, const int mask, void* arg);

   int fb_shutdown(unsigned int timeout,
                   const int reason);

   ISC_STATUS fb_shutdown_callback(ISC_STATUS* status_vector,
                                   FB_SHUTDOWN_CALLBACK callback_function,
                                   const int mask,
                                   void* arg);
          </literallayout>

          <section id="rnfb25-apiods-api-shtdn01a"><!-- Level 4 section -->
            <title>fb_shutdown()</title>
            <para><command>fb_shutdown()</command>はさまざまなFirebirdサブシステム（yValve、エンジン、リダイレクタ）をスマートにシャットダウンさせます。これは主に内部エンジンが使うために設計されたもので、現在のプロセスにのみ適用できます。これはAPIによってエンベデッドサーバー環境でユーザーアプリケーションに利用していただくことが可能です。</para>
            <para>今はエンベデッドエンジンでしか使えませんが、この関数は、現在の全ての活動を停止し、実行中のトランザクションをロールバックし、アクティブなアタッチメントを遮断し、エンベデッドエンジン・インスタンスを穏やかにシャットダウンします。</para>
            <important>
              <title>アプリケーション開発者向けの注意</title>
              <para><command>fb_shutdown()</command>は、アプリケーションが同時にアタッチされる可能性があるリモートサーバーのシャットダウンを実行しません。実際に、Firebirdの全てのクライアント・ライブラリ&mdash;エンベデッドサーバーを含む&mdash;は、最低一つでもデータベースまたはサービスにクライアントがアタッチされていれば、これをexit()で自動的に呼び出します。</para>
              <para>従って、リモートのアタッチメントの文脈では、これがクライアントによって呼び出されることは決してありません。</para>
            </important>

            <para><emphasis role="bold">パラメータ</emphasis></para>
            <para><command>fb_shutdown()</command>は二つのパラメータを取ります：</para>
            <orderedlist>
              <listitem>
                <para>ミリ秒でのタイムアウト</para>
              </listitem>
              <listitem>
                <para>シャットダウンの理由</para>
                <para>理由コード（<command>const int reason</command>）は負の値を取りますが、<filename>ibase.h</filename>にリストが挙げられています：&nbsp;<command>fb_shutrsn</command>で始まる定数を参照して下さい。</para>
                <note>
                  <para>プログラムから<command>fb_shutdown()</command>を呼び出す際には<emphasis>正の</emphasis>値を渡す必要があります。これは、適切なアクションがコーディングされた<command>コールバック関数</command>ルーチンを通じて、<command>fb_shutdown_callback()</command>に引数として渡されます。</para>
                </note>
              </listitem>
            </orderedlist>

            <para><emphasis role="bold">戻り値</emphasis></para>
            <itemizedlist>
              <listitem>
                <para>戻り値ゼロはシャットダウンの成功を意味します。</para>
              </listitem>
              <listitem>
                <para>ゼロ以外の戻り値は、シャットダウン中に何らかのエラーが発生したことを意味します。詳細は<filename>firebird.log</filename>に書き込まれます。</para>
              </listitem>
            </itemizedlist>
          </section><!-- sect4 -->

          <section id="rnfb25-apiods-api-shtdn01b"><!-- Level 4 section -->
            <title>fb_shutdown_callback()</title>
            <para><command>fb_shutdown_callback()</command>はシャットダウン中に呼び出されるコールバック関数を設定します。この呼び出しはほとんどの場合正常終了の値を返しますが、メモリ不足の状態などでエラーが返されることもあります。</para>

            <para><emphasis role="bold">パラメータ</emphasis></para>
            <para><command>fb_shutdown_callback()</command>は四つのパラメータを取ります：</para>
            <variablelist>
              <varlistentry>
                <term>status vector (ISC_STATUS* status_vector)</term>
                <listitem>
                  <para>通常のステータスベクター・ポインタ構造体です。</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>pointer to callback function (FB_SHUTDOWN_CALLBACK callback_function)</term>
                <listitem>
                  <para>これは、コールバックが発生した時に取るべきアクション（あるならば）を実行するため記述しておいたコールバック関数を参照します。</para>
                  <para>コールバック関数は三つのパラメータを取ることができます。第一と第二のパラメータはコールバックの際に取るべきアクションを決めるのに役立ちます：</para>
                  <orderedlist>
                    <listitem>
                      <para>シャットダウンの理由</para>
                      <para>シャットダウンの理由として二つのものが特に重要です：</para>
                      <itemizedlist>
                        <listitem>
                          <para>fb_shutrsn_exit_called：exit()により、またはクライアント／エンベデッドライブラリがアンロードされることにより、Firebirdは終了します。</para>
                        </listitem>
                        <listitem>
                          <para>fb_shutrsn_signal、POSIXのみ適用：SIGINTまたはSIGTERMシグナルを受信した場合です。</para>
                        </listitem>
                      </itemizedlist>
                      <note>
                        <para>Firebirdは常に負の理由コードを使いますが、ユーザーが<command>fb_shutdown()</command>そのものを呼び出す際には正の値を使用することが求められます。</para>
                      </note>
                    </listitem>
                    <listitem>
                      <para>呼び出しに用いられるマスクの実際の値</para>
                      <para>このパラメータの用途は、コールバックを呼び出すのをエンジンのシャットダウンの前にするか後にするかを決めるのに役立つということです。</para>
                    </listitem>
                    <listitem>
                      <para>ユーザーアプリケーションによってfb_shutdown_callback()に渡される引数</para>
                      <para>これは任意の目的で使用でき、NULLにすることもできます。</para>
                    </listitem>
                  </orderedlist>
                </listitem>
                <listitem>
                  <para>&nbsp;</para><!-- this space is intentionally left blank! -->
                  <para><emphasis role="bold">コールバック関数からの戻り値</emphasis></para>
                </listitem>
                <listitem>
                  <para>コールバック関数がゼロを返した場合、これはジョブが正常に終了したことを意味します。ゼロ以外の戻り値は、コールマスク（下記のパラメータに関する項目を参照）に従って解釈されます：</para>
                  <itemizedlist>
                    <listitem>
                      <para><emphasis>fb_shut_postproviders</emphasis>呼び出しの場合、何らかのエラーが発生して<command>fb_shutdown()</command>からゼロ以外の値が返されていることを意味します。エラー状態が返された正確な理由の通知はコールバック関数が担うことになります。</para>
                    </listitem>
                    <listitem>
                      <para><emphasis>fb_shut_preproviders</emphasis>コールの場合、シャットダウンが実行されないことを意味します。</para>
                      <tip>
                        <para>exit()が呼び出されてシャットダウンが実行される場合、ゼロ以外の値を返すのは良い考えでは<emphasis>ありません</emphasis>！ ;-)</para>
                      </tip>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>コールマスク（const int mask）</term>
                <listitem>
                  <para>以下のシンボル記号値を持つことができます：</para>
                  <itemizedlist spacing="compact">
                    <listitem>
                      <para>fb_shut_preproviders：コールバック関数はエンジンがシャットダウンされる前に呼び出されます</para>
                    </listitem>
                    <listitem>
                      <para>fb_shut_postproviders：コールバック関数はエンジンがシャットダウンされた後に呼び出されます</para>
                    </listitem>
                    <listitem>
                      <para>両者を論理和で結合した場合は、シャットダウンの前後に同じ関数が呼び出されます</para>
                    </listitem>
                  </itemizedlist>
                  <note>
                    <title>コールマスクの値</title>
                    <variablelist>
                      <varlistentry>
                        <term>fb_shut_confirmation</term>
                        <listitem>
                          <para>エンジンが質問：みんなシャットダウンの準備はできているかい？</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>fb_shut_preproviders</term>
                        <listitem>
                          <para>プロバイダが終了する前に実行されるアクション</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>fb_shut_postproviders</term>
                        <listitem>
                          <para>プロバイダが終了した時に実行されるアクション</para>
                        </listitem>
                      </varlistentry>
                      <varlistentry>
                        <term>fb_shut_finish</term>
                        <listitem>
                          <para>最終的なクリーンアップ</para>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                    <para><emphasis>fb_shut_confirmation</emphasis>（<emphasis>fb_shut_preproviders</emphasis>ではないのですが）に対してゼロ以外の値が返されることは、シャットダウンが実行されないことを意味します。</para>
                  </note>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>引数（void* arg）</term>
                <listitem>
                  <para>これは、<command>コールバック関数</command>に渡される引数です。</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section><!-- sect4 -->

          <section id="rnfb25-apiods-api-shtdn01c"><!-- Level 4 section -->
            <title>fb_shutdown関数の使い方</title>
            <para>以下に挙げたのは、シャットダウンとシャットダウンのコールバック機能の使用サンプルです。これは、データベースのアタッチメントがある時に誰かがCtrl-Cを押すことでプログラムが終了されてしまうことを防ぐためのものです。</para>

            <programlisting>
#include &lt;ibase.h&gt;

// callback function for shutdown
static int ignoreCtrlC(const int reason, const int, void*)
{
	return reason == fb_shutrsn_signal ? 1 : 0;
}

int main(int argc, char *argv[])
{
        ISC_STATUS_ARRAY status;
        if (fb_shutdown_callback(status, ignoreCtrlC, fb_shut_confirmation, 0))
	{
		isc_print_status(status);
		return 1;
	}
	// your code continues ...
}
            </programlisting>
          </section><!-- sect4 -->
        </section><!-- sect3 -->
        <section id="rnfb25-apiods-api-shtdn02"><!-- Level 3 section -->
          <title>シャットダウン用の新しいisc_spb_prp_*定数</title>
          <para>新しいデータベースシャットダウンモードをサービスAPIへの呼び出しを使って設定できるようになりました。いくつかの新しい<command>isc_spb_prp_*</command>定数を引数として利用できます。</para>
          <section id="rnfb25-apiods-api-shtdn02a"><!-- Level 4 section -->
            <title>isc_spb_prp_shutdown_mode と isc_spb_prp_online_mode</title>
            <para>これらの引数は、それぞれ、データベースをシャットダウンするためと、オンラインに戻すために使用します。いずれも、<emphasis>gfix -shut</emphasis>の設定と正確に一致する、新しいシャットダウンモードを設定するシングルバイト・パラメータをも持ちます：</para>
            <itemizedlist>
              <listitem>
                <para>isc_spb_prp_sm_normal</para>
              </listitem>
             <listitem>
                <para>isc_spb_prp_sm_multi</para>
              </listitem>
              <listitem>
                <para>isc_spb_prp_sm_single</para>
              </listitem>
              <listitem>
                <para>isc_spb_prp_sm_full</para>
              </listitem>
            </itemizedlist>

            <para>シャットダウンのリクエストでは、<emphasis>シャットダウンのタイプ</emphasis>も指定する必要があります。以下の中のいずれかとなります。</para>

            <itemizedlist>
              <listitem>
                <para>isc_spb_prp_force_shutdown</para>
              </listitem>
             <listitem>
                <para>isc_spb_prp_attachments_shutdown</para>
              </listitem>
              <listitem>
                <para>isc_spb_prp_transactions_shutdown</para>
              </listitem>
            </itemizedlist>

            <para>いずれも4バイトの整数パラメータを取り、リクエストされたシャットダウン操作のタイムアウトを指定します。</para>

            <note>
              <para>古いスタイルのパラメータもサポートされており、デフォルトのシャットダウン（現在は'multi'）とオンライン（'normal'）モードに入るために使います。</para>
            </note>
          </section><!-- sect4 -->

          <!-- reverting to the Level 3 section -->
          <para><emphasis role="bold">使用例</emphasis></para>
          <para>以下に、<emphasis>fbsvcmgr</emphasis>ユーティリティで新しいパラメータの使う例をいくつか挙げています。便宜上、ログインはすでに確立しているものと仮定しています。いずれの例もページ幅に合わせて改行していますが、実際には一行のコマンドです。</para>

          <variablelist>
            <varlistentry>
              <term>データベースをシャットダウンしてシングルユーザー・メンテナンスモードに：</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_properties dbname employee
    prp_shutdown_mode prp_sm_single prp_force_shutdown 0
                </literallayout>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>次に、マルチユーザー・メンテナンスモードを有効にする：</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_properties dbname employee
    prp_online_mode prp_sm_multi
                </literallayout>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>今度は完全なシャットダウンモードに入り、60秒間、新しいアタッチメントを無効にする：</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_properties dbname employee
    prp_shutdown_mode prp_sm_full prp_attachments_shutdown 60
                </literallayout>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>通常状態に戻す：</term>
              <listitem>
                <literallayout class="monospaced">
  fbsvcmgr service_mgr action_properties dbname employee
    prp_online_mode prp_sm_normal
                </literallayout>
              </listitem>
            </varlistentry>
          </variablelist>
        </section><!-- sect3 -->
      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-tighter"><!-- Level 2 section -->
        <sectioninfo>
          <title>ヘッダレベルの変更に対する制御の厳格化</title>
            <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
        </sectioninfo>
        <para>危険な抜け穴を閉じることにより、いくつかのDPBパラメータに通常のユーザーからアクセスできなくなりました。それらの設定は、管理者の制御下で実行されたのでなければ、場合によっては、データベースヘッダの設定を変更し、破損を起こす可能性があるものです；つまり、それらは、本来ならSYSDBAに限定される操作を開始してしまうのです。すなわち─</para>
      <itemizedlist>
        <listitem>
          <para>isc_dpb_shutdown and isc_dpb_online</para>
        </listitem>
        <listitem>
          <para>isc_dpb_gbak_attach, isc_dpb_gfix_attach と isc_dpb_gstat_attach</para>
        </listitem>
        <listitem>
          <para>isc_dpb_verify</para>
        </listitem>
        <listitem>
          <para>isc_dpb_no_db_triggers</para>
        </listitem>
        <listitem>
          <para>isc_dpb_set_db_sql_dialect</para>
        </listitem>
        <listitem>
          <para>isc_dpb_sweep_interval</para>
        </listitem>
        <listitem>
          <para>isc_dpb_force_write</para>
        </listitem>
        <listitem>
          <para>isc_dpb_no_reserve</para>
        </listitem>
        <listitem>
          <para>isc_dpb_set_db_readonly</para>
        </listitem>
        <listitem>
          <para>isc_dpb_set_page_buffers (スーパーサーバーで)</para>
        </listitem>
      </itemizedlist>
      <para>クラシックサーバーでは、パラメータ<filename>isc_dpb_set_page_buffers</filename>は、今でも通常のユーザーが使用できるようになっています。そのユーザーはそのセッションでのみ、一時的にバッファサイズを設定することができます。スーパーサーバーまたはクラシックサーバーでSYSDBAがこれを使用した場合は、データベースヘッダ内のバッファカウントが変更されます。つまり、デフォルトのバッファサイズは恒久的に変更されることになります。</para>
      <important>
        <title>データアクセスドライバおよびツールの開発者とユーザー向けの重要な注意事項</title>
          <para>この変更は、リストに挙げられたDPBパラメータで明示的に設定されたもののいずれかに影響します。これは、デフォルトプロパティの値によるDPB実装にそれらを含める、または、通常のユーザーとしてデータベースにアクセスするツールやアプリケーションでそれらを有効にする、いずれの方法で設定した場合も当てはまります。例えば、データベースのParamsプロパティに'RESERVE PAGE SPACE=TRUE'や'FORCED WRITES=TRUE'を含むDelphiアプリケーションで、Firebird 1.x、2.0.1、2.0.3、2.0.4また2.1.0／2.1.1に接続した場合には問題を起こさなかったものが、ISC ERROR CODE 335544788、<quote>Unable to perform operation. You must be either SYSDBA or owner of the database.（操作を実行できません。あなたはSYSDBAまたはデータベースの所有者でなければなりません。）</quote>のメッセージを出してSYSDBA以外による接続をリジェクトするようになりました。</para>
        </important>
      </section><!-- sect2 -->

      <section id="rnfb25-apiods-api-svctrace"><!-- Level 2 section -->
        <sectioninfo>
          <title>アプリケーション用の新しいトレースサービス</title>
            <author><firstname>Vlad</firstname><surname>Khorsun</surname></author>
        </sectioninfo>
        <para>新しいユーザートレース・セッションの管理に関係する五つの新しいサービスがサービスマネージャに追加されました。いずれも対応するサービスAPIアクション関数を伴っています。</para>

        <section id="rnfb25-apiods-api-svctrace-start"><!-- Level 3 section -->
          <title>isc_action_svc_trace_start</title>
          <para>ユーザートレース・セッションを開始します。</para>
          <para><emphasis>Parameter(s)</emphasis></para>
          <literallayout class="monospaced">
  isc_spb_trc_name : トーレスセッション名、文字列、オプション
  isc_spb_trc_cfg  : トレースセッションの設定、文字列、必須
          </literallayout>
          <para>必須パラメータは適切な設定用テキストを含む文字列です。この文字列の内容についてのガイドとして、テンプレートファイル<filename>fbtrace.conf</filename>がFirebirdのルートディレクトリ内に提供されています。</para>
          <note>
            <orderedlist>
              <listitem>
                <para>システム監査セッションとは違い、ユーザーセッションはファイルから設定を読み取ることはしません。クライアント側でローカルに設定を保存し、実行時に使用するためにそれらを取得する仕組みを考える責任はアプリケーション開発者が担うことになります。</para>
              </listitem>
              <listitem>
                <para>文字列内に余分なホワイトスペースがあっても問題ありません：単に無視されるだけです。</para>
              </listitem>
            </orderedlist>
          </note>
          <para><emphasis>出力</emphasis></para>
          <itemizedlist>
            <listitem>
              <para>操作の状態を伝えるテキストメッセージは、次のいずれかとなります：</para>
              <literallayout class="monospaced">
  トレースセッションを開始できません。トレースのプラグインがロードされていません。

              </literallayout>
              <para>または、</para>
              <literallayout class="monospaced">
  トレースセッションID NNNが開始されました。
              </literallayout>
            </listitem>
            <listitem>
              <para>第二の場合、トレースセッションの結果がテキスト形式で続けられます。</para>
            </listitem>
          </itemizedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-svctrace-stop"><!-- Level 3 section -->
          <title>isc_action_svc_trace_stop</title>
          <para>指定されたトレースセッションを停止します。</para>
          <para><emphasis>パラメータ</emphasis></para>
          <literallayout class="monospaced">
  isc_spb_trc_id : トレースセッションID、整数、必須
          </literallayout>
          <para><emphasis>出力</emphasis></para>
          <para>リクエストの結果（状態）を通知するテキストメッセージ：</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>トレースセッションID NNNが停止されました。</para>
            </listitem>
            <listitem>
              <para>他のユーザートレース・セッションを停止する権限がありません。</para>
            </listitem>
            <listitem>
              <para>トレースセッションID NNNが見つかりません。</para>
            </listitem>
          </itemizedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-svctrace-suspend"><!-- Level 3 section -->
          <title>isc_action_svc_trace_suspend</title>
          <para>指定されたトレースセッションを中断します。</para>
          <para><emphasis>パラメータ</emphasis></para>
          <literallayout class="monospaced">
  isc_spb_trc_id : トレースセッションID、整数、必須
          </literallayout>
          <para><emphasis>出力</emphasis></para>
          <para>リクエストの結果（状態）を通知するテキストメッセージ：</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>トレースセッションIDが中断されました。</para>
            </listitem>
            <listitem>
              <para>他のユーザートレース・セッションを変更する権限がありません。</para>
            </listitem>
            <listitem>
              <para>トレースのセッションID NNNが見つかりません。</para>
            </listitem>
          </itemizedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-svctrace-resume"><!-- Level 3 section -->
          <title>isc_action_svc_trace_resume</title>
          <para>指定されたトレースセッションを中断から再開します。</para>
          <para><emphasis>パラメータ</emphasis></para>
          <literallayout class="monospaced">
  isc_spb_trc_id : トレースセッションID、整数、必須
          </literallayout>
          <para><emphasis>出力</emphasis></para>
          <para>リクエストの結果（状態）を通知するテキストメッセージ：</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>トレースセッションID NNNが再開されました。</para>
            </listitem>
            <listitem>
              <para>他のユーザートレース・セッションを変更する権限がありません。</para>
            </listitem>
            <listitem>
              <para>トレースセッションID NNNが見つかりません。</para>
            </listitem>
          </itemizedlist>
        </section><!-- sect3 -->

        <section id="rnfb25-apiods-api-svctrace-list"><!-- Level 3 section -->
          <title>isc_action_svc_trace_list</title>
          <para>既存のトレースセッションの一覧</para>
          <para><emphasis>パラメータなし</emphasis></para>
          <para><emphasis>出力</emphasis></para>
          <para>トレースセッションとその状態を一覧するテキストメッセージです：</para>
          <itemizedlist spacing="compact">
            <listitem>
              <para>セッションID：&lt;番号&gt;</para>
            </listitem>
            <listitem>
              <para>名前：&lt;文字列&gt;。空でない場合、トレースセッション名を表示します</para>
            </listitem>
            <listitem>
              <para>ユーザー：&lt;文字列&gt;。トレースセッションを作成したユーザーのユーザー名を表示します</para>
            </listitem>
            <listitem>
              <para>日付：YYYY-MM-DD HH:NN:SS、ユーザーセッションの開始日時</para>
            </listitem>
            <listitem>
              <para>フラグ：&lt;文字列&gt;、以下のものの一部または全部を含むコンマ区切りのセット：</para>
              <variablelist>
                <varlistentry>
                  <term>active | suspend</term>
                  <listitem>
                    <para>セッションの起動状態</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>admin</term>
                  <listitem>
                    <para>管理者ユーザーがセッションを作成した場合は<emphasis>admin</emphasis>を表示。通常のユーザーがセッションを作成した場合は表示せず。</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>system</term>
                  <listitem>
                    <para>セッションがFirebirdエンジンによって作成された場合（システム監査セッション）は<emphasis>system</emphasis>を表示。通常のユーザーがセッションを作成した場合は表示せず。</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>audit | trace</term>
                  <listitem>
                    <para>セッションの種類を示す：エンジンが作成した監査セッションの場合は<emphasis>audit</emphasis>、ユーザートレース・セッションの場合は<emphasis>trace</emphasis>。</para>
                  </listitem>
                </varlistentry>
                <varlistentry>
                  <term>log full</term>
                  <listitem>
                    <para>ユーザートレース・セッションでセッションログファイルが満杯の場合に条件付きで表示。</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </itemizedlist>

          <note>
            <para>いずれのサービスの出力も、通常は、定期的な<emphasis>isc_service_query</emphasis>呼び出しを<emphasis>isc_info_svc_line</emphasis>または<emphasis>isc_info_svc_to_eof</emphasis>のいずれかの情報アイテムと一緒に使うことで得ることができます。</para>
          </note>
        </section><!-- sect3 -->

      </section><!-- sect2 -->

<!-- The following section was added at v.2.5.2 -->
      <section id="rnfb25-apiods-api-svcrembackup"><!-- Level 2 section -->
        <sectioninfo>
          <title>リモート・バックアップファイルによるバックアップとリストア</title>
          <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
        </sectioninfo>
        <para>バージョン2.5.2では、サーバー側で<emphasis>gbak</emphasis>を起動し、リモートのクライアントに置かれた<emphasis>gbak</emphasis>バックアップファイルから読み取る、またはそれに書き込む機能が導入されました。これはインターネット接続を介したバックアップ／リストアの方法として非常に効果的です。</para>
        
        <para>この機能を使う最も簡単な方法は、コマンドラインツール<emphasis>fbsvcmgr</emphasis>を利用することです。これはサービスAPI呼び出し用のインターフェースをとりあえず提供してくれるので、クライアントアプリケーションを自分で書かずに済みます。</para> 
        
        <section id="rnfb25-apiods-api-svcrembackup-backup"><!-- Level 3 section -->
          <title>リモートバックアップ</title>
          <para><emphasis>fbsvcmgr</emphasis>を使ってリモートのデータベースをバックアップするには、次のパターンでコマンドを入力します：</para>
          <programlisting>
fbsvcmgr remotehost:service_mgr -user sysdba -password XXX \
  action_backup -dbname some.fdb -bkp_file stdout &gt;some.fbk
          </programlisting>
        </section>
        <section id="rnfb25-apiods-api-svcrembackup-restore"><!-- Level 3 section -->
          <title>バックアップファイルからのリストア</title>
          <para><emphasis>fbsvcmgr</emphasis>を使ってリモートに置かれたバックアップファイルからデータベースをリストアするには、次のパターンでコマンドを入力します。</para>
          <programlisting>
fbsvcmgr remotehost:service_mgr -user sysdba -password XXX \
  action_restore -dbname some.fdb -bkp_file stdin &lt;some.fbk
          </programlisting>
        </section>
        <note>
          <para>バックアップ実行時に<quote>詳細表示</quote>（-v[erify]）スイッチは使えません。これは、サーバーからクライアントへのデータチャンネルが、バックアップファイルからデータのブロックを転送するのに使われているためです。</para>
          <para>データベースのリストア時には制限がなく、詳細表示モードが使えます。</para>
        </note>
        
        <section id="rnfb25-apiods-api-svcrembackup-svcsapi"><!-- Level 3 section -->
          <title>独自のユーティリティ・コードを書く</title>
          <para>リモートバックアップ／リストアを独自のプログラムで実行したい場合は、サービスAPIを利用して下さい。</para>
          
          <section id="rnfb25-apiods-api-svcrembackup-svcsapi-bkp"><!-- Level 4 section -->
            <title>バックアップ</title>
            <para>バックアップは非常に単純です─<function>isc_info_svc_to_eof</function>のタグを付した<function>isc_service_query()</function>への呼び出しを繰り返すことで返されたデータがバックアップファイルのイメージを表すストリームとなります。<function>isc_service_query()</function>呼び出しで<function>isc_info_svc_to_eof</function>タグを使い、バックアップファイル名としてサーバーに<quote>stdout</quote>を渡して下さい。</para>
          </section>
          
          <section id="rnfb25-apiods-api-svcrembackup-svcsapi-rstr"><!-- Level 4 section -->
            <title>リストア</title>
            <para>リストアはやや複雑になります。クライアントは<function>isc_service_query()</function>呼び出しでサーバーに新しいspbパラメータ<function>isc_info_svc_stdin</function>を送信します。サービスは、<emphasis>stdin</emphasis>のデータが必要な場合、クエリの結果として<function>isc_info_svc_stdin</function>を返します。これには4バイト値が続き、クライアントから受け取る用意のあるバイト数を表します。（ゼロ値は現在これ以上のデータが必要ないことを意味します）。</para>
            <important>
              <para>クライアントはサーバーからリクエストされた以上のデータを送信してはいけません：エラー<quote>Size of data is more than requested</quote>がスローされます。</para>
            </important>
            
            <para>データは次の<function>isc_service_query()</function>呼び出しで、従来の<function>isc_info_svc_line</function>タグの形式を使い、<function>send_items</function>ブロックで送信されます：isc_info_svc_lineは2バイト長のデータです。次の部分が必要になると、サーバーは逆に<function>isc_service_query()</function>から<function>isc_info_svc_stdin</function>にゼロ以外の値を返します。</para>
            
            <tip>
              <para>リモートバックアップ用のサービスAPIの使い方のサンプルについては、<emphasis>fbsvcmgr</emphasis>のソースコードを参照して下さい。</para>
            </tip>
          </section>
        </section>
      </section>

<!-- The following section was added at v.2.5.4 -->
      <section id="rnfb25-apiods-api-onlinevalidation"><!-- Level 2 section -->
        <sectioninfo>
          <title>オンラインでの検証サービスの実行</title>
          <author><firstname>Vlad</firstname><surname>Khorsun</surname></author>
        </sectioninfo>
        <para>データベースの検証はオンディスク構造体の整合性に関する低レベルでのチェックを可能にし、小さな破損を修正することもできます。データベースの健康をを保つためにDBAが定期的に検証を行うことは、特に重要なデータベースを扱う上で推奨される手続きです。</para>
        <para>これにはデータベースへの排他的なアクセスが必要です：検証作業中はその他のアクセスは禁止されます。時には、特に巨大で複雑なデータベースの場合、ユーザーのアクセスを遮断することで大規模な停滞が起こることがあります。</para>
        <para>オンライン検証は新しい機能です。これにより、整合性チェックを排他的アクセスなしで実行できるようになります。</para>
        <section>
          <title>オンライン検証でできること</title>
          <itemizedlist>
            <listitem>
              <para>データベースの一部の（または全部の）ユーザーテーブルを検証する。</para>
              <para><emphasis>システムテーブルは検証されません。</emphasis></para>
            </listitem>
            <listitem>
              <para>一部の（または全部の）インデックスを検証する。</para>
            </listitem>
          </itemizedlist>

           <para>ヘッダ＼PIP＼TIP＼ジェネレータの各ページのような、他のODSのチェックは実行されません。</para>
         </section>

         <section>
           <title>オンライン検証中の保護</title>
           <para>テーブル（および／または、そのインデックス）の検証作業中でも、ユーザーのアタッチメントはそのテーブルの読み取りを行うことができます。データの変更（INSERT\UPDATE\DELETE）については、検証の終了まで待機させられるか、ユーザートランザクションのロックタイムアウトに従ってロックタイムアウト・エラーが返されるか、いずれかとなります。</para>
           <para>検証作業中のテーブルまたはそのインデックスのガベージコレクションは実行できません：</para>
           <itemizedlist>
             <listitem>
               <para>バックグラウンドモード、協調モードでのガベージコレクションは単にこのテーブルをスキップします。</para>
             </listitem>
             <listitem>
               <para>スイープはエラーを発生させて停止します。</para>
             </listitem>
           </itemizedlist>
           <para>テーブルのチェックを開始すると、オンライン検証はデータの変更を防止する二つのロックを取得します：</para>
           <itemizedlist>
             <listitem>
               <para>PR（読み取り保護）モードでのリレーション・ロック</para>
             </listitem>
             <listitem>
               <para>（新機能）PW（書き込み保護）モードでのガベージコレクション・ロック</para>
             </listitem>
           </itemizedlist>
           <para>いずれのロックも、ユーザー指定のロックタイムアウトを使うことで取得されます。ロック・リクエストが失敗した場合はエラーが報告され、そのテーブルはスキップされます。</para>
         </section>
         <para>一度ロックが取得されると、テーブルとそのインデックスは、完全な検証を実行した場合と同じ方法で検証されます。これが完了して同じ手続きが次のテーブルへと移行すると、ロックは解除されます。</para>
         <section>
           <title>新しいサービスAPIアクション：isc_action_svc_validate</title>
           <para>オンライン検証はFirebirdサービスとして実装されており、サービスAPIを通じてアクセスできます。そのため、これを<emphasis>gfix</emphasis>から起動することはできません。</para>
           <para>この呼び出しは以下の要素を含みます：</para>
           <literallayout class="monospaced">
アクション：
	isc_action_svc_validate

パラメータ：
	isc_spb_dbname :
		データベースファイル名、文字列、必須

	isc_spb_val_tab_incl, isc_spb_val_tab_excl,
	isc_spb_val_idx_incl, isc_spb_val_idx_excl :
		テーブル＼インデックス名のパターン、文字列、オプション

	isc_spb_val_lock_timeout :
		ロックタイムアウト、整数、オプション

出力：
	オンライン検証プロセスの進行状況を示すテキストメッセージ
           </literallayout>
         </section>
         <section>
           <title>isc_action_svc_validateの対話的な使用</title>
           <para><emphasis>fbsvcmgr</emphasis>ユーティリティは、この新しいサービスを完全にサポートしています。構文は次の通り：</para>
           <programlisting>
fbsvcmgr [host:]service_mgr [user &lt;...&gt;] [password &lt;...&gt;]
	action_validate dbname &lt;ファイル名&gt;
	[val_tab_incl &lt;パターン&gt;]
	[val_tab_excl &lt;パターン&gt;]
	[val_idx_incl &lt;パターン&gt;]
	[val_idx_excl &lt;パターン&gt;]
	[val_lock_timeout &lt;番号&gt;]
           </programlisting>
           <para>このうち、
           <simplelist type="horiz" columns="2">
             <member>val_tab_incl</member><member>検証の実行に含めるテーブル名のパターン</member>
             <member>val_tab_excl</member><member>検証の実行から除外するテーブル名のパターン</member>
             <member>val_idx_incl</member><member>検証の実行に含めるインデックス名のパターン。デフォルトは%、すなわち全インデックス</member>
             <member>val_idx_excl</member><member>検証の実行から除外するインデックス名のパターン</member>
             <member>val_lock_timeout</member><member>ロックタイムアウト、検証するテーブルのロックの取得に使用される、秒単位、デフォルトは10秒、0は待機なし、-1は無期限待機</member>
           </simplelist>
           </para>
           <note>
             <title>使用上の注意</title>
             <itemizedlist>
               <listitem>パターンは正規表現、SIMILAR TO式と同じルールで処理されます。</listitem>
               <listitem>データベースのダイアレクトに関わりなく、全てのパターンで大文字小文字は区別されます。</listitem>
               <listitem>テーブル用のパターンが省略された場合、全てのユーザーテーブルは検証されます。</listitem>
               <listitem>インデックス用のパターンが省略された場合、指定されたテーブルの全てのインデックスが検証されます。</listitem>
               <listitem>システムテーブルは検証されません。</listitem>
               <listitem>
                <para>テーブルまたはインデックスのリストを指定するには：</para>
                <orderedlist type="a">
                  <listitem>パイプ・キャラクタ'|'で名前を区切ります。</listitem>
                  <listitem>スペースを入れないこと：TAB1 | TAB2は誤りです。</listitem>
                  <listitem>コマンド・インタープリタを混乱させないように、ダブルクォートでリスト全体を囲います。</listitem>
                </orderedlist>
               </listitem>
             </itemizedlist>
           </note>
           <para><emphasis role="bold">例</emphasis></para>

           <orderedlist>
             <listitem>
               <para>データベース'c:\db.fdb'の、名前が'A'で始まる全てのテーブルを検証。インデックスは検証しない。ロックの待機は実行しない。</para>
               <programlisting>
fbsvcmgr.exe service_mgr user SYSDBA password masterkey
		action_validate dbname c:\db.fdb
		val_tab_incl A%
		val_idx_excl %
		val_lock_timeout 0
               </programlisting>
             </listitem>
             <listitem>
               <para>テーブルTAB1とTAB2と、その全てのインデックスを検証。ロック待機のタイムアウトは10秒（デフォルト）：</para>
               <programlisting>
fbsvcmgr.exe service_mgr user SYSDBA password masterkey
		action_validate dbname c:\db.fdb
		val_tab_incl &quot;TAB1|TAB2&quot;
               </programlisting>
             </listitem>
             <listitem>
               <para>val_XXXオプションのデフォルトの挙動：データベース'c:\db.fdb'の全てのユーザーテーブルとそのインデックスを検証。ロック待機はデフォルトの10秒：</para>
               <programlisting>
fbsvcmgr.exe service_mgr user SYSDBA password masterkey
               action_validate dbname c:\db.fdb
               </programlisting>
             </listitem>
           </orderedlist>
         </section>
      </section><!--L2-->
<!-- ======================================================================== -->
      <section id="rnfb25-apiods-api-spbadds"><!-- Level 2 section -->
        <sectioninfo>
          <title>他のサービスAPIの追加</title>
            <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
        </sectioninfo>

        <para>他に追加されたサービスAPIには以下のものが含まれます：</para>

        <section id="rnfb25-apiods-api-spbadminmapping"><!-- Level 3 section -->
          <title>サービスAPIでのロールRDB$ADMINのマッピング</title>
          <para>セキュリティ・データベースへのアクセスをリクエストする際に権限のあるOSユーザーの<link linkend="rnfb25-prvlgs">ロールRDB$ADMIN</link>を有効または無効にするため、サービスパラメータブロック（SPB）に二つのタグアイテムが追加されました。</para>

          <note>
            <para>この機能は、新しい<command>-mapping</command>スイッチによって<emphasis>gsec</emphasis>ユーティリティに実装されました。<emphasis>コマンドライン・ユーティリティ</emphasis>の章の<link linkend="rnfb25-util-gsec">関連する節</link>の注意事項を参照して下さい。</para>
          </note>
          <section id="rnfb25-apiods-api-spbadminmapping01"><!-- Level 4 section -->
            <title>タグアイテムisc_action_svc_set_mapping</title>
            <para><emphasis>security2.fdb</emphasis>にアクセスするためのサービス・リクエスト用に、指定されたOSユーザーに対しロールRDB$ADMINを有効にします。</para>
          </section><!-- sect4 -->

          <section id="rnfb25-apiods-api-spbadminmapping02"><!-- Level 4 section -->
            <title>タグアイテムisc_action_svc_drop_mapping</title>
            <para><emphasis>security2.fdb</emphasis>にアクセスするためのサービス・リクエスト用に、指定されたOSユーザーのロールRDB$ADMINを無効にします。</para>
          </section><!-- sect4 -->
        </section><!-- sect3 -->
        
        <section id="rnfb25-apiods-api-spbadmingrant"><!-- Level 3 section -->
          <title>パラメータisc_spb_sec_admin</title>
          <para>新しいパラメータ<command>isc_spb_sec_admin</command>は、SYSDBAまたは他の十分な権限を持つユーザーがセキュリティ・データベース（<emphasis>security2.fdb</emphasis>）のロールRDB$ADMINを通常のユーザーに対して付与したり削除したりできるようにするために導入された新しいDDL構文のSPB実装です。通常のユーザーがセキュリティ・データベースでユーザーを作成、変更、削除するには、このロールでSYSDBAと同じ権限を手にする必要があります。</para>

          <para><command>isc_spb_sec_admin</command>は<emphasis>spb_long</emphasis>型で、値として0（REVOKE ADMIN ROLEを意味する）またはゼロ以外の数字（GRANT ADMIN ROLEを意味する）を取ります。</para>
          <para>詳細は、<emphasis>データ定義言語</emphasis>の章の<link linkend="rnfb25-ddl-crtusr">CREATE/ALTER/DROP USER</link>の項を参照して下さい。</para>
        </section>

        <section id="rnfb25-apiods-api-spbnotriggrs"><!-- Level 3 section -->
          <title>タグアイテムisc_spb_bkp_no_triggers</title>
          <para>この新しいSPBタグは、データベースレベルやトランザクションレベルでのトリガがバックアップ・リストアの最中に起動するのを防ぐため、バージョン2.1で<emphasis>gbak</emphasis>ユーティリティに導入された<command>-nodbtriggers</command>スイッチのサービスAPIとしての側面を表すものです。これは、<command>isc_spb_bkp_ignore_limbo</command>などのアイテムを含むオプション命令のセット<command>isc_spb_options</command>の中での使用が意図されています。</para>
        </section><!-- sect3 -->
<!-- Added to v.2.5.1 -->
        <section id="rnfb25-apiods-api-spbbkpmetadata"><!-- Level 3 section -->
          <title>タグアイテムisc_spb_res_metadata_only</title>
          <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-3462">CORE-3462</ulink></para>
          <para>SPB中のリストアサービス・オプションに<command>isc_spb_bkp_metadata_only</command>タグを渡すと、metadata-onlyリストアが実行されます。Firebirdの<emphasis>fbsvcmgr</emphasis>を含む多くのツールでは、リストアのリクエストにバックアップ・オプションを指定することはできません。</para>
          <para><emphasis role="bold">（バージョン2.5.1）</emphasis>混乱を避けるため、単に<command>isc_spb_bkp_metadata_only</command>を再実装しただけのタグ<command>isc_spb_res_metadata_only</command>がパブリックヘッダと<emphasis>fbsvcmgr</emphasis>に定数として追加されました。</para>
        </section>

<!-- Following section modified v.2.5.1 -->
        <section id="rnfb25-apiods-api-spbnbackup"><!-- Level 3 section -->
          <title>nBackupのサポート</title>
            <para>サービスAPIでnBackupアクションをサポートするために三つのものが追加されました。</para>
            <section id="rnfb25-apiods-api-spbnbackup0102"><!-- Level 4 section -->
              <title>バックアップとリストア</title>
              <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1758">CORE-1758</ulink></para>
              <para>nBackupユーティリティは二つの論理グループの操作を実行します：データベースのロックとロック解除、そして、バックアップとリストアです。そのうち、ロック／ロック解除の操作にサービスアクションを提供する正当な理由はありません&mdash;SQL言語でALTER DATABASEのリクエストを使うことでリモートからのそれらのリクエストは可能です&mdash;一方で、バックアップ／リストア操作用のサービスAPIのインターフェースを正当化するのは簡単です。</para>
              <para>バックアップとリストアはホストのステーションで実行する必要があります。それらにアクセスする唯一の方法は、nBackupを起動することでした。</para>
              <para>以下の二つの新しいサービスアクションによって、サービスAPIを通じてnBackupによるバックアップとリストアをリクエストできるようになりました：</para>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>isc_action_svc_nbak - 増分バックアップ</para>
                </listitem>
                <listitem>
                  <para>isc_action_svc_nrest - 増分データベースリストア</para>
                </listitem>
              </itemizedlist>
              <para>パラメータ・アイテムは、以下の通り：</para>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>isc_spb_nbk_level - バックアップレベル（整数）</para>
                </listitem>
                <listitem>
                   <para>isc_spb_nbk_file - バックアップファイル名（文字列）</para>
                </listitem>
                <listitem>
                  <para>isc_spb_nbk_no_triggers - データベーストリガを抑制するためのオプション</para>
                </listitem>
              </itemizedlist>

              <para><emphasis role="bold">使用例</emphasis></para>
              <para>以下に、<emphasis>fbsvcmgr</emphasis>ユーティリティで新しいパラメータの使う例をいくつか挙げています。便宜上、ロングインはすでに確立しているものと仮定しています。いずれの例もページ幅に合わせて改行していますが、実際には一行のコマンドです。</para>

              <variablelist>
                <varlistentry>
                  <term>レベル0バッックアップを作成：</term>
                  <listitem>
                    <literallayout class="monospaced">
  fbsvcmgr service_mgr action_nbak dbname employee
    nbk_file e.nb0 nbk_level 0
                    </literallayout>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>レベル1バッックアップを作成：</term>
                  <listitem>
                    <literallayout class="monospaced">
  fbsvcmgr service_mgr action_nbak dbname employee
    nbk_file e.nb1 nbk_level 1
                  </literallayout>
                </listitem>
                </varlistentry>

                <varlistentry>
                  <term>ファイルからのデータベースのリストア：</term>
                  <listitem>
                    <literallayout class="monospaced">

  fbsvcmgr service_mgr action_nrest dbname e.fdb
    nbk_file e.nb0 nbk_file e.nb1
                   </literallayout>
                  </listitem>
                </varlistentry>
              </variablelist>
            </section>
<!-- Added to notes at v.2.5.1, available but undocumented at v.2.5.0 -->
            <section id="rnfb25-apiods-api-spbnbackup03"><!-- Level 4 section -->
              <title>ダイレクトI/O機能のサポート</title>
              <para><command>isc_spb_nbk_direct on|off</command></para>
              <para>新しいタグにより、コマンドラインから<command>nbackup -D on|off</command>を呼び出すのと同じアクションが可能となり、ダイレクトI/Oの強制的なオン・オフが行えます。これは他のnbackup関連のタグと同様に、<command>action_nbak</command>でのみ有効です。</para>
              <note>
                <para>この機能の使用法については、<emphasis>ユーティリティ</emphasis>の章の<link linkend="rnfb25-utils-nbackup01">新しいnbackupのスイッチ</link>についての注意事項を参照して下さい。</para>
              </note>
            </section>
          </section><!-- sect3 nbackup -->

          <section id="rnfb25-apiods-api-fixfss">
            <sectioninfo>
              <title>サービスAPIでのFIX_FSS_DATAおよびFIX_FSS_METADATAオプションが可能に</title>
              <author><firstname>A.</firstname><surname>Peshkov</surname></author>
            </sectioninfo>

            <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2439">CORE-2439</ulink></para>
            <para>Firebird 2.1で<command>gbak -restore</command>スイッチに実装されたFIX_FSS_DATAとFIX_FSS_METADATA関数はコアエンジンに実装され、サービスAPIの<command>isc_action_svc_restore</command>構造体に対応するタグ定数として公開されています。従って、開発者には、古いFirebirdデータベースから新しいオンディスク構造体への移行を自動化するアプリケーションを書く道が開かれています。</para>
            <para>新しいSPBタグは<command>isc_spb_res_fix_fss_data</command>と<command>isc_spb_res_fix_fss_metadata</command>です。</para>
          </section><!-- sect3 -->
        </section><!-- sect2 -->

        <section id="rnfb25-apiods-api-traceapi"><!-- Level 2 section -->
          <title>新しいトレースAPI</title>
          <para>作成中の新しいトレースAPIは、トレースされる任意のイベント発生時にエンジンから呼び出される外部プラグインモジュールとして実装可能なフックのセットを提供します。これはまだドキュメント化されておらず、今後のサブリリースで変更されることもあります。</para>

          <para>これについてのより詳しい情報は、<emphasis>管理機能</emphasis>の章の<link linkend="rnfb25-trace-plugin">トレースのプラグイン機能</link>の項を参照して下さい。</para>
        </section><!-- sect2 -->

      </section><!-- sect1 -->
  </chapter>

