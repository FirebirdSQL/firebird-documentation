  <chapter id="rnfb25-engine" xreflabel="Changes in the Firebird Engine">
    <chapterinfo>
      <title>Firebirdエンジンの変更</title>
    </chapterinfo>
    <para>このリリースの主な目的は、マルチプロセッサのハードウェアが持つ対称型マルチプロセッシング（SMP）の性能を活用するため、Firebirdのスレッド・アーキテクチャをリファクタリングすることでした。これにより、複数のデータベースが同時にアクセスされるようなスーパーサーバーのスケーラビリティに著しい効果が得られます。しかし、その重要な成果は、Firebird 3に向けて開発中の、きめ細かなマルチスレッディングを支える<quote>スーパークラシックサーバー</quote>モデルの登場です。</para>

    <section id="rnfb25-engine-threading"><!-- sect1 -->
      <sectioninfo>
        <title>新しいスレッド・アーキテクチャ</title>
        <authorgroup>
          <author><firstname>Dmitry</firstname><surname>Yemanov</surname></author>
          <author><firstname>Vladyslav</firstname><surname>Khorsun</surname></author>
          <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
          <author><firstname>さらに</firstname><surname>─</surname></author>
          <author><firstname>Nickolay</firstname><surname>Samofatov</surname></author>
          <author><firstname>Roman</firstname><surname>Simakov</surname></author>
        </authorgroup>
      </sectioninfo>
      <para>スーパーサーバーでは、新しいアーキテクチャの大きな利点として次の二点が挙げられます：</para>

      <orderedlist>

        <listitem>
          <para>複数データベース環境では、各データベースに対するスーパーサーバーのスレッドが、利用可能なプロセッサに均等に割り当てられます。</para>
          <note>
            <para>デフォルトの<emphasis>CpuAffinity</emphasis>設定では、スーパーサーバーはシングルプロセッサにバインドされたままです。複数のデータベースを活用する際にこの改善の恩恵を受けるには、<filename>firebird.conf</filename>の設定を変更する必要があります。</para>
          </note>
        </listitem>
        <listitem>
          <para>SMPハードウェア上では、単一のデータベースを利用する場合でも、スケーリングのわずかな改善が認められるはずです。</para>
        </listitem>
      </orderedlist>

      <para>クラシックサーバーでは、さらに顕著な効果が得られます：</para>
      <orderedlist>
        <listitem>
          <para>クラシックサーバーがマルチスレッド化できるようになりました。1プロセスに1ワーカースレッドというモデルは従来通りですが、非同期のシャットダウン、スイープ、ロックマネージャとのプロセス間通信など並行したタスクの処理に追加のスレッドを利用できるようになりました。</para>
        </listitem>
        <listitem>
          <para>POSIX版では、クラシックサーバーでも、以前のようにフォークしたプロセスではなく、スレッドでサービスを運用できるようになりました。</para>
          <note>
            <para>Windows版のクラシックサーバーでは、サービスはバージョン2.1ですでにスレッド化されていました。</para>
          </note>
        </listitem>
        <listitem>
          <para>エンベデッドライブラリ&mdash;POSIX版では<emphasis>libfbembed.so</emphasis>、Windows版では<emphasis>fbembed.dll</emphasis>&mdash;は、マルチスレッドに対応し、スレッドセーフとなっています。そのため、これらはマルチスレッドアプリケーションから利用できます。</para>
        </listitem>
        <listitem>
          <para>テストでは、このバージョンのクラシックサーバーのパフォーマンスは以前のバージョンに比べて相当速くなることが示されています。</para>
        </listitem>
      </orderedlist>

      <section id="rnfb25-threading-superclassic"><!-- sect2 -->
        <title><quote>スーパークラシックサーバー</quote></title>
        <para>この、クラシックサーバーのマルチスレッド・モードは、単一のサーバー・プロセス内で&mdash;割り当て中またはプーリング中&mdash;の複数のワーカースレッドを処理する能力から、<quote>スーパークラシックサーバー</quote>と名づけられています。通常の機能については全てクラシックサーバーと共通していますが、二三の相違点があります：</para>
        <itemizedlist>
          <listitem>
            <para>どのプラットフォーム上でも、サーバーエンジンの安全かつ完全なシャットダウンが可能です。</para>
          </listitem>
          <listitem>
            <para>あるTPCベンチマークでは、クラシックサーバーを15〜20％ほど上回るパフォーマンスを示しています。</para>
          </listitem>
          <listitem>
            <para>カーネル・リソースの使用量が少なくなります（メモリ使用は減りませんが）。</para>
          </listitem>
          <listitem>
            <para>スーパークラシックサーバーのプロセスがクラッシュした場合、全ての接続が道連れになります。</para>
          </listitem>
          <listitem>
            <para>アタッチメント／アクティブユーザーのリストを取得できないなど、クラシックサーバー用サービスAPIに見られる制限は、スーパークラシックサーバーには適用されません。</para>
          </listitem>
          <listitem>
            <para>POSIX版のスーパークラシックサーバーが<emphasis>[x]inetd</emphasis>を必要としません。</para>
          </listitem>
        </itemizedlist>
        <note>
          <title>エンベデッドサーバーに関する注意</title>
          <itemizedlist>
            <listitem>
              <para>WindowsのDLLライブラリであるエンベデッドサーバー<emphasis>fbembed.dll</emphasis>が、以前のスーバーサーバーではなく、スーパークラシックサーバーを利用するようになり、このモデルをPOSIX上のスーパークラシックサーバーへのローカル接続に統合します。以前には単一のアプリケーション空間への接続を制限していたデータベースのファイルロックが、異なるエンベデッドサーバー・モジュールから同じデータベースへの同時アクセスを可能にするグローバルロックテーブルに置き換えられました。アプリケーションの同時デバッグや<emphasis>gbak</emphasis>や<emphasis>gstat</emphasis>のようなネイティブのユーティリティ・ツールの利用を容易にします。</para>
            </listitem>
            <listitem>
              <para>単一のアタッチメント・ハンドルが同時スレッドに共有されるようになりました。（トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2498">CORE-2498</ulink> A. dos Santos Fernandes）。</para>
            </listitem>
          </itemizedlist>
        </note>

        <section id="rnfb25-threading-superclassic01"><!-- sect3 -->
          <title>使用上の注意</title>

          <section id="rnfb25-threading-superclassic01win"><!-- sect4 -->
            <title>Windows版</title>
            <para>Windows版では、同じ<filename>fb_inet_server.exe</filename>バイナリが、スイッチの設定によって、クラシックサーバーとスーパークラシックサーバー、いずれの作業モードをも提供します。デフォルトはクラシックサーバー・モードです。</para>
            <para>スーパークラシック・モードをサービスとして利用するには、次のように、コマンドラインで<emphasis>instsvc.exe</emphasis>に<filename>-m[ulti-threaded]</filename>スイッチを付けます。</para>
            <programlisting>
instsvc install -multithreaded
            </programlisting>
            <para>スーパークラシックサーバーを<emphasis>アプリケーションとして</emphasis>運用したい場合は、次のようにします。</para>
            <programlisting>
fb_inet_server -a -m
            </programlisting>
          </section><!-- sect4 -->

          <section id="rnfb25-threading-superclassic01psx"><!-- sect4 -->
            <title>POSIX版の新バイナリ</title>
            <para>POSIX版では、スーパークラシックサーバー・モデルとして新しいバイナリ<filename>fb_smp_server</filename>が提供されました。これにはネットワークリスナーが含まれているため、アタッチメント・リクエストに関して<filename>fbserver</filename>と同様に働き、<emphasis>[x]inetd</emphasis>を必要としません。</para>
            
            <para><filename>fb_smp_server</filename>が使用するマルチスレッド・エンジンは、OSRI要請に従い、<filename>libfbembed.so</filename>となっています。クラシックサーバーのパッケージには<filename>fbguard</filename>（Guardian）も含まれます。これは、スーパークラシックサーバーのインストールの際に、<filename>fbserver</filename>ではなく<filename>fb_smp_server</filename>を開始します。スーパーサーバー・モデルがGuardianと一緒にインストールされた際に行われることと同様です。</para>
            <important>
              <para>従来のクラシックサーバーの運用中には<filename>fbguard</filename>を使用しないで下さい。</para>
            </important>  
          </section><!-- sect 4 end -->
        </section><!-- sect 3 end -->
      </section><!-- sect 2 end -->
    </section><!-- sect 1 end -->

    <section id="rnfb25-engine-thrdsafe"><!-- Level 1 section -->
      <sectioninfo>
        <authorgroup>
          <author><firstname>Dmitry</firstname><surname>Yemanov</surname></author>
          <author><firstname>Vladyslav</firstname><surname>Khorsun</surname></author>
          <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
        </authorgroup>
        <title>スレッドセーフ・クライアント・ライブラリ</title>
      </sectioninfo>
      <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-707">CORE-707</ulink></para>
      <para>エンベデッドライブラリを含むクライアント・ライブラリが、アプリケーションレベルでの同期なしでも、マルチスレッドアプリケーションで使用できるようになりました。</para>
    </section>

    <section id="rnfb25-engine-other"><!-- Level 1 section -->
      <title>改善点</title>
      <para>実装された改善点は以下の通り：</para>

      <section id="rnfb25-engine-dscnnct"><!-- Level 2 section -->
        <sectioninfo>
          <author><firstname>Vladyslav</firstname><surname>Khorsun</surname></author>
          <title>クラシックサーバーで接続の切れたクライアントの即時検出</title>
        </sectioninfo>

        <para>クラシックサーバーが、クライアントの切断によって壊れたサーバーのプロセスを、すぐに検出できるようになりました。これに対し、未完了の活動を終了させたり、アクティブなトランザクションをロールバックしたり、ネットワークの接続を閉じたりといった対応をします。</para>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-818">CORE-818</ulink></para>
      </section>

      <section id="rnfb25-engine-optmz"><!-- Level 2 section -->
        <title>最適化</title>
        <para>重要な最適化は以下の通り：</para>

        <section id="rnfb25-engine-optmz01"><!-- Level 3 section -->
          <sectioninfo>
            <author><firstname>Dmitry</firstname><surname>Yemanov</surname></author>
            <title>データの取得</title>
          </sectioninfo>
          <para>最適化により、どのフィールドもアクセスされていないテーブルについて、データ取得のパフォーマンスが改善されました。これは、例えば、<command>SELECT COUNT(*)</command>型のクエリに適用されます。</para>
          <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1598">CORE-1598</ulink></para>
        </section>

        <section id="rnfb25-engine-optmz02"><!-- Level 3 section -->
          <sectioninfo>
             <title>BLOBメモリの使用法</title>
            <author><firstname>Adriano</firstname><surname>dos Santos Fernandes</surname></author>
          </sectioninfo>
          <para>最適化により、それぞれの一時的なBLOBに割り当てる際に生成された、&lt;ページサイズ&gt;バイトのメモリ消費を避けることができます。</para>
          <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1658">CORE-1658</ulink></para>
        </section>

        <section id="rnfb25-engine-optmz03"><!-- Level 3 section -->
          <sectioninfo>
            <title>更新パフォーマンスの改善</title>
            <author><firstname>V.</firstname><surname>Khorsun</surname></author>
          </sectioninfo>

          <para>この改善の狙いは、<quote>careful write</quote>による更新手続きの際にエンジンが優先的に行う書き込みの量を減らすことでした。従来の手続きでは、大規模な更新、特に同一のトランザクションで同一のレコードへの複数回の更新を行う<quote>updates-in-place</quote>のパフォーマンスに目立った影響が出ていました。最悪の場合には、更新の際に生成された全ての単一の新しいレコードのバージョンのために、ディスクにページが書き込まれることもありました。</para>
          <para>内部で何が起きているのかについての簡単な技術的解説は、<ulink url="http://tracker.firebirdsql.org/browse/CORE-2672">トラッカー・リファレンス (CORE-2672)</ulink>を参照して下さい。</para>

          <para>この解決策では、正しい優先順位を維持するためレコードの新バージョンと旧バージョンとが置かれたページ間で起きる循環参照から、書き込み操作を保護することに関わるプロセスで多大な時間を要する可能性があったという事態に対処しています。</para>
        </section><!-- Level 3 -->

      </section><!-- Level 2 -->

      <section id="rnfb25-engine-cachesize"><!-- Level 2 section -->
        <sectioninfo>
          <title>64bitサーバーでのキャッシュサイズ制限の拡大</title>
          <author><firstname>V.</firstname><surname>Khorsun</surname></author>
        </sectioninfo>

        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1687">CORE-1687</ulink></para>
        <para>以前の64bit版Firebirdサーバーでは、64bitアドレス空間の恩恵が受けられず、データベースのキャッシュを2GB（16K * 128K）以上に設定することができませんでした。この問題は今回のバージョンで修正されました。64bit版Firebirdでは、リソースが利用可能な場合、RAM内に5〜10GBのデータベースに完全に対応できる十分な大きさのキャッシュを設定することが可能になりました。</para>

        <para>Firebirdのキャッシングは、ファイルシステムのキャッシュから多くの恩恵を受けることができますが、このことは、主に読み取りに負荷がかかる高スループット・システムにとって、おそらく重要な機能となっています。x64版Firebirdサーバーでのキャッシュの理論上の上限は2^31 -1（2,147,483,647）ページとなっています。</para>

      </section><!-- Level 2 -->

      <section id="rnfb25-engine-dbdftloc"><!-- Level 2 section -->
        <sectioninfo>
          <title>デフォルトでのデータベースの配置</title>
          <author><firstname>A.</firstname><surname>Peshkov</surname></author>
        </sectioninfo>

        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1643">CORE-1643</ulink></para>
        <para>設定パラメータ<emphasis>DatabaseAccess</emphasis>に、さらに多くの<quote>意味</quote>が付け加えられました。特に指定がない場合、エンジンは、<quote>Restrict</quote>リスト内の<emphasis>DatabaseAccess</emphasis>で最初に登録された配置場所を、新規にデータベースを作成する際や、接続パラメータによってエイリアスもフルパスも指定されていないデータベースを見つけるための、デフォルトの配置として受け取ります。</para>
        <para>この探索ロジックは、Restrictリストから<emphasis>ExternalFileAccess</emphasis>パラメータに渡されて、外部テーブルを見つけるために使われるのと同様のものです。すなわち、</para>
        <orderedlist>
          <listitem>
            <para>Restrctリスト内の全てのディレクトリが最初に探索されます。</para>
          </listitem>
          <listitem>
            <para>指定されたデータベースが見つからない場合：</para>
            <itemizedlist>
              <listitem>
                <para>CREATE DATABASEが含まれる場合、Restrictリスト内の最初の配置場所が使われます。</para>
              </listitem>
              <listitem>
                <para>そうでない場合、アタッチは期待通りには行なわれません。</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </orderedlist>

        <note>
          <title>注意 :: 現在の作業ディレクトリ</title>
          <para>この機能は、直接ローカル接続するために指定されたデータベース・ファイルの暗黙の配置場所として現在の作業ディレクトリを使用することを禁ずるものではありません。これらの場合には、従来とまったく同様に、Y-valveがパス解決を処理します。</para>
          <para>データベースがどこに<quote>ある</quote>のか確かめる方法がないからといって、リモート・サブシステムを介して稼働中のスタンドアロンのサーバーが、パスの記述がないデータベース・ファイル名を使って接続しようとするというのは、まずありえない状況ですが、推奨されません。例えば、Windows版では、こうした状況での現在の作業ディレクトリは<command>%system%</command>となります。</para>
        </note>
      </section><!-- Level 2 -->



      <section id="rnfb25-engine-embddll"><!-- Level 2 section -->
        <sectioninfo>
          <author><firstname>Adriano</firstname><surname>dos Santos Fernandes</surname></author>
          <title>Windows版エンベデッドエンジン向けDLLのロード</title>
        </sectioninfo>
        <para>アプリケーション構成のインストール時に、いわゆる<quote>DLL地獄</quote>に陥った場合に共通して起こる問題を避けるため、Windows版エンベデッドエンジン向けのルート決定メカニズムが変更されました。以前には、ユーザーアプリケーションのメインの実行ファイルを含むディレクトリが暗黙のルートディレクトリとなっていました。今後は、リネームされた<emphasis>fbembed.dll</emphasis>ライブラリが置かれているディレクトリとなります。</para>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1814">CORE-1814</ulink></para>
      </section>

      <section id="rnfb25-engine-exttblio"><!-- Level 2 section -->
        <sectioninfo>
          <author><firstname>Vlad</firstname><surname>Khorsun</surname></author>
          <title>大きな外部テーブルのサポートが有効に</title>
        </sectioninfo>
        <para>Firebirdの以前のバージョンでは、外部テーブルを使用する際に32bit I/Oを使っていたため、外部ファイルのサイズは2GB未満に制限されていましたが、64bit I/Oがサポートされるファイルシステム上では、外部テーブルメカニズムがこれを利用するよう拡張されたことで、2GBの制限は事実上撤廃されました。</para>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2492">CORE-2492</ulink></para>
      </section>
      
      <section id="rnfb25-engine-stats64">
        <sectioninfo>
          <title>データベースの統計が64bit値で適切に動作するように</title>
          <authorgroup>
            <author><firstname>V.</firstname><surname>Khorsun</surname></author>
            <author><firstname>A.</firstname><surname>Peshkov</surname></author>
          </authorgroup>
        </sectioninfo>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2619">CORE-2619</ulink></para>
        <para>Firebirdの以前のバージョンでは、メモリその他の統計が64bit値を適切に処理していませんでした。このイシューには二つの要素があります：</para>
        <orderedlist numeration="loweralpha">
          <listitem><!-- a -->
            <para>エンジンが統計に64bit整数を使えるように、<command>AtomicCounter</command>の内部が変更されました。</para>
          </listitem>
          <listitem><!-- b -->
            <para><emphasis>isql</emphasis>および<emphasis>qli</emphasis>のツールを64bit値に見合った動作をするよう改良する必要がありました。</para>
          </listitem>
        </orderedlist>
        <important>
          <title>古いクライアントとの非互換性</title>
          <para>32bitのツールが64bitのサーバーで正しく動作するため、いくつかの新しい内部API機能（<command>struct perf64</command>や<command>perf64_xxx</command>）を導入し、またそれらを使用する<emphasis>isql</emphasis>や<emphasis>qli</emphasis>を変更する必要がありました。このことは、バージョン2.5の<emphasis>isql</emphasis>と<emphasis>qli</emphasis>のプログラムが古いFirebirdクライアントとの互換性を持たないことを意味します。</para>
        </important>
      </section>

      <section id="rnfb25-engine-udf"><!-- Level 2 section -->
        <sectioninfo>
          <author><firstname>Adriano</firstname><surname>dos Santos Fernandes</surname></author>
          <title>UDFのセーフガード</title>
        </sectioninfo>
        <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1937">CORE-1937</ulink></para>
        <para>Firebirdサーバーがアクセスしているのと同じランタイムによって割り当てられていないポインタを返すような文字列UDFが書かれている場合、その宣言中のFREE_ITキーワードの存在が、メモリを汚染し、サーバーをクラッシュさせます。そのような異常なUDFに対するセーフガードとして、エンジンは…</para>
        <orderedlist>
          <listitem>
            <para>そのようなUDFを検出し、例外をスローします。</para>
          </listitem>
          <listitem>
            <para>エンベデッド版を含む全てのサーバー・モデルで、更新された<emphasis>ib_util</emphasis>ライブラリがパスの中に存在するか否かに依存します。</para>
          </listitem>
        </orderedlist>
      </section>

      <section id="rnfb25-engine-dgnstcs"><!-- Level 2 section -->
        <title>診断</title>
        <section id="rnfb25-engine-dgnstcs01"><!-- Level 2 section -->
          <sectioninfo>
            <author><firstname>Claudio</firstname><surname>Valderrama</surname></author>
            <title>トランザクションの診断</title>
          </sectioninfo>
          <para>TPBの内容に不正がある場合の診断とエラーレポートが改善されました。新たなTPB検証ロジックは、以下のものをリジェクトします：</para>
          <itemizedlist>
            <listitem>
              <para>同じカテゴリの中で明らかに矛盾するオプション。例えば、一緒に指定された<command>{WAIT}</command>と<command>{NOWAIT}</command>、あるいは、<command>{READ COMMITTED}</command>と<command>{SNAPSHOT}</command>、あるいは、<command>{READ ONLY}</command>と<command>{WRITE}</command>。</para>
            </listitem>
            <listitem>
              <para>無意味なオプション。例えば、SNAPSHOT分離モードに指定された<command>[NO] RECORD VERSION</command>。</para>
            </listitem>
            <listitem>
              <para>テーブル予約オプションの誤った命令。例えば、<command>{READ &lt;TABLE&gt; PROTECTED}</command>と間違えて<command>{PROTECTED READ &lt;TABLE&gt;}</command>。</para>
            </listitem>
          </itemizedlist>
          <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1600">CORE-1600</ulink></para>
        </section>
        
        <section id="rnfb25-engine-dgnstcs02"><!-- Level 2 section -->
          <sectioninfo>
            <author><firstname>Alex</firstname><surname>Peshkov</surname></author>
            <title>アクセス権のエラーメッセージ</title>
          </sectioninfo>
          <para>カラムに対するアクセス権の例外が起きた時、テーブル名とカラム名の両方が報告されるようになりました。</para>
          <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-1234">CORE-1234</ulink></para>
        </section>
        
        <section id="rnfb25-engine-dgnstcs03">
          <sectioninfo>
            <title>メッセージの改善</title>
            <author><firstname>V.</firstname><surname>Khorsun</surname></author>
          </sectioninfo>

          <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-2587">CORE-2587</ulink></para>
          <para>エンジンがWindowsの他のセッションで別のエンジンのプロセスによってすでにマッピングされた共有メモリを作成できない場合の診断メッセージが、少しだけユーザーフレンドリーになりました。従来は次のようなメッセージでした：</para>
          <literallayout class="monospace">
The requested operation cannot be performed on a file with a user-mapped section open.
          </literallayout>
          <para>（要求された操作はユーザーマップセクションで開いたファイルでは実行できません。）</para>
          <para>これが、次のようなメッセージとなります：</para>
    <literallayout class="monospace">
Database is probably already opened by another engine instance in another Windows session.
    </literallayout>
    <para>（データベースはおそらく他のWindowsセッションの他のエンジンのインスタンスによりすでに開かれています。）</para>
        </section>

      </section>

      <section id="rnfb25-engine-mtdta"><!-- Level 2 section -->
        <title>メタデータの改善</title>

        <section id="rnfb25-engine-mtdta01"><!-- Level 3 section -->
          <sectioninfo>
            <author><firstname>Adriano</firstname><surname>dos Santos Fernandes</surname></author>
            <title>キャラクタ・セットをデフォルトのコレーションに保存</title>
          </sectioninfo>
          <para>システムテーブルRDB$CHARACTER_SETS内のRDB$DEFAULT_COLLATE_NAMEの現在の値がバックアップ／リストアのサイクルの中で維持されるように改善されました。このカスタマイズのためのメカニズムが新しい<link linkend="rnfb25-ddl-altrchrset">ALTER CHARACTER SET</link>コマンドです。</para>
          <para>トラッカー・リファレンス <ulink url="http://tracker.firebirdsql.org/browse/CORE-789">CORE-789</ulink></para>
        </section>
      </section>
    </section>
  </chapter>



