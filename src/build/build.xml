<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- Firebird documentation build file -->
<!-- ======================================================================= -->
<project name="FirebirdDocs" default="help" basedir="../..">

	<target name="init">

		<property name="name" value="firebirddocs"/>
		<property name="version" value="0.1"/>

		<property name="lib.dir" value="${basedir}/lib"/>
		<property name="src.dir" value="${basedir}/src"/>
		<property name="build.dir" value="${basedir}/build"/>
		<property name="dist.dir" value="${basedir}/dist"/>
		<property name="printablehtml.dir" value="${dist.dir}/docs/printablehtml"/>
		<property name="defaulthtml.dir" value="${dist.dir}/docs/defaulthtml"/>

		<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop"/>

	</target>

<!-- =================================================================== -->
<!-- Generate a help screen -->
<!-- =================================================================== -->
	<target name="help" depends="init">

		<echo message="${name}-${version} build file, available targets:"/>
		<echo message="------------------------------------------------------------"/>
		<echo message="defaulthtml   : Build default HTML docs"/>
		<echo message="printablehtml : Build printable HTML docs"/>
		<echo message="fo            : Build .fo (Formatting Objects) file from XML sources"/>
		<echo message="fo2pdf        : Build PDF docs from .fo"/>
		<echo message="pdf           : Build PDF docs from XML sources"/>
		<echo message="docs          : Build HTML and PDF docs"/>
		<echo message="dist          : Create .zip distributions"/>
		<echo message="clean         : Clean up"/>
		<echo message="------------------------------------------------------------"/>
		<echo message="USAGE: build &lt;target&gt;"/>

	</target>

<!-- =================================================================== -->
<!-- Prepares the build directory -->
<!-- =================================================================== -->
	<target name="prepare" depends="init">

		<mkdir dir="${defaulthtml.dir}"/>
		<mkdir dir="${printablehtml.dir}"/>

	</target>

<!-- =================================================================== -->
<!-- Creates the default XML->XSLT->HTML documentation -->
<!-- =================================================================== -->
	<target name="defaulthtml" depends="prepare">

		<!-- Create chunked tutorial
		- destdir parameter is ignored due to chunking
		- so we move all chunked html files to destination -->
		<echo message="Building default HTML documentation. Please wait..."/>

		<style basedir="${src.dir}/docs"
			style="src/docs/firebirddocs.xsl"
			destdir="${defaulthtml.dir}"
			includes="firebirddocs.xml"/>

		<move todir="${defaulthtml.dir}">
			<fileset dir="${src.dir}/build" includes="*.html"/>
		</move>

		<delete file="${defaulthtml.dir}/firebirddocs.html"/>

		<!-- Stylesheets, images, and static HTML -->
		<copy todir="${defaulthtml.dir}">
			<fileset dir="${src.dir}/docs" includes="images/*,firebirddocs.css"/>
		</copy>

		<copy todir="${defaulthtml.dir}/images" flatten="yes">
			<fileset dir="${src.dir}/docs" includes="docbook/images/callouts/*"/>
		</copy>

		<!-- Lines below commented out so build defaulthtml won't break if images
		     dir is absent, which it will be for clients using cvs update -P.
		     We must UNcomment them as soon as something is placed in images    -->
		<!--
		<copy todir="${defaulthtml.dir}/images">
			<fileset dir="${src.dir}/docs/firebirddocs/images"/>
		</copy>
		-->

	</target>

<!-- =================================================================== -->
<!-- Creates the printable html XML->XSLT->HTML documentation -->
<!-- =================================================================== -->
	<target name="printablehtml" depends="prepare">

		<!-- Create chunked tutorial
		- destdir parameter is ignored due to chunking
		- so we move all chunked html files to destination -->
		<echo message="Building printable HTML documentation. Please wait..."/>

		<style basedir="${src.dir}/docs"
			style="src/docs/docbook/html/docbook.xsl"
			destdir="${printablehtml.dir}"
			includes="firebirddocs.xml">
			<param name="segmentedlist.as.table" expression="1"/>
		</style>

		<!-- Stylesheets, images, and static HTML -->
		<copy todir="${printablehtml.dir}">
			<fileset dir="${src.dir}/docs" includes="images/*,firebirddocs.css"/>
		</copy>

		<copy todir="${printablehtml.dir}/images" flatten="yes">
			<fileset dir="${src.dir}/docs" includes="docbook/images/callouts/*"/>
		</copy>

		<!-- Lines below commented out so build printablehtml won't break if images
		     dir is absent, which it will be for clients using cvs update -P.
		     We must UNcomment them as soon as something is placed in images      -->
		<!--
		<copy todir="${printablehtml.dir}/images">
			<fileset dir="${src.dir}/docs/firebirddocs/images"/>
		</copy>
		-->

	</target>

<!-- =================================================================== -->
<!-- Generates the fo output                                             -->
<!-- =================================================================== -->
	<target name="fo" depends="prepare">

		<echo message="Building Formatting Objects file. Please wait..."/>

		<delete file="${build.dir}/docs/firebirddocs.fo"/>

		<style basedir="${src.dir}/docs"
			style="src/docs/fo.xsl"
			destdir="${build.dir}/docs"
			extension=".fo"
			includes="firebirddocs.xml"/>
	</target>

<!-- =================================================================== -->
<!-- Generates pdf from fo                                  -->
<!-- =================================================================== -->
	<target name="fo2pdf" depends="init">

		<echo message="Building PDF from Formatting Objects. Please wait..."/>

		<fop basedir="${src.dir}/docs"
			fofile="${build.dir}/docs/firebirddocs.fo"
			outfile="${dist.dir}/docs/firebirddocs.pdf"
			messagelevel="info"/> <!-- Possible values are: verbose, info, debug -->
	</target>

<!-- =================================================================== -->
<!-- Generates the pdf documentation                                     -->
<!-- =================================================================== -->
	<target name="pdf" depends="fo, fo2pdf"/>

<!-- =================================================================== -->
<!-- Generates html and pdf documentation -->
<!-- =================================================================== -->
	<target name="docs" depends="defaulthtml, printablehtml, pdf"/>

<!-- =================================================================== -->
<!-- Packages the distribution with ZIP -->
<!-- =================================================================== -->
	<target name="dist" depends="docs">

		<zip destfile="${dist.dir}/${name}-defaulthtml-${version}.zip"
			basedir="${dist.dir}/docs/defaulthtml"
			includes="**"/>

		<zip destfile="${dist.dir}/${name}-printablehtml-${version}.zip"
			basedir="${dist.dir}/docs/printablehtml"
			includes="**"/>

		<zip destfile="${dist.dir}/${name}-pdf-${version}.zip"
			basedir="${dist.dir}/docs"
			includes="*.pdf"/>

	</target>

<!-- =================================================================== -->
<!-- Cleans up generated stuff -->
<!-- =================================================================== -->
	<target name="clean" depends="init">

		<delete dir="${build.dir}"/>

		<delete dir="${dist.dir}"/>

	</target>

</project>

