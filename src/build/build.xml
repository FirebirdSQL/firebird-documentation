<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- JBoss documentation build file                                          -->
<!-- ======================================================================= -->

<project name="FirebirdDocs" default="help" basedir="../..">
 	<target name="init">
		<property name="Name" value="FirebirdDocs"/>
		<property name="name" value="firebirddocs"/>
		<property name="version" value="0.1"/>
	
		<property name="lib.dir" value="${basedir}/lib"/>
		<property name="src.dir" value="${basedir}/src"/>
		<property name="build.dir" value="${basedir}/build"/>
		<property name="dist.dir" value="${basedir}/dist"/>
		<property name="printablehtml.dir" value="${dist.dir}/docs/printablehtml"/>
		<property name="defaulthtml.dir" value="${dist.dir}/docs/defaulthtml"/>

                <property name="packages" value="org.firebirdsql.jdbc"/>
      <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop"/>
    </target>
  
  <!-- =================================================================== -->
  <!-- Generate a help screen                                              -->
  <!-- =================================================================== -->
  <target name="help" depends="init">
  	
    <echo message="${name}-${version} build file, available targets:" />
    <echo message="------------------------------------------------------------" />
    <echo message="main            : Compile and prepare deployment directory. " />
    <echo message="javadocs        : Compile and prepare Javadoc API docs. " />
    <echo message="defaulthtml     : Compile and prepare html user docs. "/>
    <echo message="printablehtml   : Prepare printable html user docs. " />
    <echo message="pdf             : Compile and prepare pdf user docs. "/>
    <echo message="docs            : Compile and prepare both pdf and html user docs. "/>
    <echo message="dist            : Prepares .ZIP and .TGZ ditributions. " />
    <echo message="clean           : Clean deployment and distribution. " />
    <echo message="------------------------------------------------------------" />
    <echo message="	 USAGE: build &lt;target&gt; " />
    
  </target>
  
  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}/docs/api"/>
    <mkdir dir="${dist.dir}/docs/api"/>
    <mkdir dir="${defaulthtml.dir}"/>
    <mkdir dir="${printablehtml.dir}"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Creates the default XML->XSLT->HTML documentation                   -->
  <!-- =================================================================== -->
  <target name="defaulthtml" depends="prepare">

    <!-- Create chunked tutorial 
      - destdir parameter is ignored due to chunking
      - so we move all chunked html files to destination
    -->
    
    <echo message="Building html documentation. Please wait ..."/>
    <style  basedir="${src.dir}/docs"
             
             style="firebirddocs.xsl"
             destdir="${defaulthtml.dir}"
             includes="firebirddocs.xml"
    />
    
    <move todir="${defaulthtml.dir}">
      <fileset dir="${src.dir}/build" includes="*.html"/>
    </move>
    <delete file="${defaulthtml.dir}/firebirddocs.html"/>

    <!-- Stylesheets, images, and static HTML -->
    <copy todir="${defaulthtml.dir}">
       <fileset dir="${src.dir}/docs" includes="images/*,firebirddocs.css"/>
     </copy>
     
  </target>


  <!-- =================================================================== -->
  <!-- Generates the pdf documentation                                     -->
  <!-- =================================================================== -->
  <target name="pdf" depends="prepare">
    <echo message="Building pdf documentation. Please wait ..."/>
    <delete file="${build.dir}/docs/firebirddocs.fo"/>
    <style basedir="${src.dir}/docs" 
           destdir="${build.dir}/docs" 
           style="docbook/fo/docbook.xsl" 
           extension=".fo" 
           includes="firebirddocs.xml"/>
    <fop fofile="${build.dir}/docs/firebirddocs.fo" pdffile="${dist.dir}/docs/firebirddoco.pdf"/>
<!--    <delete file="${build.dir}/docs/firebirddocs.fo"/>-->
  </target>

  <!-- =================================================================== -->
  <!-- Generates the pdf documentation from .fo                            -->
  <!-- =================================================================== -->
  <target name="fo" depends="prepare">
    <echo message="Building pdf documentation from .fo. Please wait ..."/>
    <fop fofile="${build.dir}/docs/firebirddocs.fo" pdffile="${dist.dir}/docs/firebirddoco.pdf"/>
<!--    <delete file="${src.dir}/docs/firebirddocs.fo"/>-->
  </target>

  <!-- =================================================================== -->
  <!-- Generates pdf and html documentation                                -->
  <!-- =================================================================== -->
  <target name="docs" depends="defaulthtml,pdf"/>


  <!-- =================================================================== -->
  <!-- Creates the printable html XML->XSLT->HTML documentation            -->
  <!-- =================================================================== -->
  <target name="printablehtml" depends="prepare">
    <!-- Create chunked tutorial -->
    <style   basedir="${src.dir}/docs"
             destdir="${printablehtml.dir}"
             style="docbook/html/docbook.xsl"
             includes="firebirddocs.xml"
    />
    
    <!-- Stylesheets, images, and static HTML -->
    <copy todir="${printablehtml.dir}">
       <fileset dir="${src.dir}/docs" includes="images/*,firebirddocs.css"/>
     </copy>
     
  </target>
  
  

  <!-- =================================================================== -->
  <!-- Packages the distribution with ZIP                                  -->
  <!-- =================================================================== -->
  <target name="defaulthtml-zip" depends="defaulthtml">
    <zip zipfile="${name}-${version}.zip" basedir="${dist.dir}/docs/defaulthtml" includes="**"/> 
  </target>


  <!-- =================================================================== -->
  <!-- Cleans up generated stuff                                           -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Total cleanup                                                       -->
  <!-- =================================================================== -->
  <target name="total-clean" depends="clean">
    <delete file="${name}-${version}.zip"/>
    <delete file="${name}-${version}.tar"/>
    <delete file="${name}-${version}.tar.gz"/>
  </target>
</project>

